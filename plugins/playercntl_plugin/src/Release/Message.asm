; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	g:\Max\Bastelstube\FL\FLHook Source\flhookplugin_MoD\plugins\playercntl_plugin\src\Message.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB ; std::_Is_swap_move<std::_Swap_move_tag>::_Value
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?NUMBER_OF_SLOTS@INFO@Message@@2HB		; Message::INFO::NUMBER_OF_SLOTS
_BSS	SEGMENT
_bSendingTime DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?NUMBER_OF_SLOTS@INFO@Message@@2HB
CONST	SEGMENT
?NUMBER_OF_SLOTS@INFO@Message@@2HB DD 0aH		; Message::INFO::NUMBER_OF_SLOTS
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB
CONST	SEGMENT
?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB DB 01H ; std::_Is_swap_move<std::_Swap_move_tag>::_Value
CONST	ENDS
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:$SG64490
_DATA	ENDS
CONST	SEGMENT
$SG64490 DB	'bad allocation', 00H
	ORG $+1
$SG141119 DB	'-mail.ini', 00H
	ORG $+2
$SG142661 DB	'msg.', 00H
	ORG $+3
$SG142663 DB	'msg.chat_time', 00H
	ORG $+2
$SG142817 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, 00H, 00H
	ORG $+2
$SG142820 DB	'%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142840 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, 00H, 00H
	ORG $+2
$SG142843 DB	'%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142872 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, 00H, 00H
	ORG $+2
$SG142875 DB	'%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG142882 DB	'%', 00H, '0', 00H, '2', 00H, 'X', 00H, 00H, 00H
	ORG $+2
$SG142889 DB	'#', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG142892 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'T', 00H, 'a', 00H
	DB	'r', 00H, 'g', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'n', 00H, 'o'
	DB	00H, 't', 00H, ' ', 00H, 'a', 00H, 'v', 00H, 'a', 00H, 'i', 00H
	DB	'l', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG142897 DB	'#', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG142899 DB	'#', 00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG142905 DB	'#', 00H, 'c', 00H, 00H, 00H
	ORG $+2
$SG143007 DB	'CustomHelp', 00H
	ORG $+1
$SG143008 DB	'Message', 00H
$SG143011 DB	'CmdEcho', 00H
$SG143012 DB	'Message', 00H
$SG143015 DB	'CmdHide', 00H
$SG143016 DB	'Message', 00H
$SG143022 DB	'0x00AA0090', 00H
	ORG $+1
$SG143023 DB	'CmdEchoStyle', 00H
	ORG $+3
$SG143024 DB	'Message', 00H
$SG143027 DB	'StandardBannerDelay', 00H
$SG143028 DB	'Message', 00H
$SG143031 DB	'SpecialBannerDelay', 00H
	ORG $+1
$SG143032 DB	'Message', 00H
$SG143038 DB	'%player has been kicked for swearing', 00H
	ORG $+3
$SG143039 DB	'DisconnectSwearingInSpaceMsg', 00H
	ORG $+3
$SG143040 DB	'Message', 00H
$SG143043 DB	'DisconnectSwearingInSpaceRange', 00H
	ORG $+1
$SG143044 DB	'Message', 00H
$SG143047 DB	'SetMsg', 00H
	ORG $+1
$SG143048 DB	'Message', 00H
$SG143717 DB	'Help', 00H
	ORG $+3
$SG143724 DB	'GreetingBanner', 00H
	ORG $+1
$SG143734 DB	'SpecialBanner', 00H
	ORG $+2
$SG143744 DB	'StandardBanner', 00H
	ORG $+1
$SG143759 DB	'SwearWords', 00H
	ORG $+1
$SG143771 DB	' ', 00H, 00H, 00H
$SG143772 DB	'_', 00H, 00H, 00H
$SG143912 DB	'/', 00H, 'g', 00H, ' ', 00H, 00H, 00H
$SG143913 DB	'/', 00H, 'g', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p', 00H
	DB	' ', 00H, 00H, 00H
$SG143928 DB	'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, ' ', 00H, 'i', 00H
	DB	's', 00H, ' ', 00H, 'a', 00H, 'n', 00H, ' ', 00H, 'a', 00H, 'u'
	DB	00H, 't', 00H, 'o', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a'
	DB	00H, 'g', 00H, 'e', 00H, '.', 00H, 00H, 00H
$SG143930 DB	'P', 00H, 'l', 00H, 'e', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 'd', 00H, 'o', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 'w', 00H, 'e', 00H, 'a', 00H, 'r', 00H
	DB	' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'y', 00H, 'o', 00H, 'u'
	DB	00H, ' ', 00H, 'm', 00H, 'a', 00H, 'y', 00H, ' ', 00H, 'b', 00H
	DB	'e', 00H, ' ', 00H, 's', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 'd', 00H, '.', 00H
	DB	00H, 00H
$SG143937 DB	'NOTICE: Swearing tempban on %s (%s) reason=''%s''', 00H
$SG143943 DB	'%', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG143946 DB	'%', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG143985 DB	':', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG143990 DB	':', 00H, ' ', 00H, '/', 00H, 00H, 00H
$SG143991 DB	':', 00H, ' ', 00H, '/', 00H, '/', 00H, 00H, 00H
	ORG $+2
$SG143992 DB	':', 00H, ' ', 00H, '.', 00H, 00H, 00H
$SG143999 DB	'<', 00H, '/', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
$SG144321 DB	' ', 00H, 't', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, '=', 00H, 00H, 00H
	ORG $+2
$SG144000 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '=', 00H, '"', 00H, '0', 00H, 'x'
	DB	00H, 'B', 00H, 'E', 00H, 'B', 00H, 'E', 00H, 'B', 00H, 'E', 00H
	DB	'9', 00H, '0', 00H, '"', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's'
	DB	00H, 'k', 00H, '=', 00H, '"', 00H, '-', 00H, '1', 00H, '"', 00H
	DB	'/', 00H, '>', 00H, '<', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T'
	DB	00H, '>', 00H, 00H, 00H
	ORG $+2
$SG144015 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144020 DB	'msg.', 00H
	ORG $+3
$SG144022 DB	'O', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG144049 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, 's', 00H, 00H, 00H
$SG144055 DB	'%', 00H, 'd', 00H, ':', 00H, ' ', 00H, '%', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG144057 DB	'O', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG144070 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144091 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG144108 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144129 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG144146 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144167 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG144196 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG144205 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144210 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG144217 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144222 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'P', 00H, 'M', 00H
	DB	' ', 00H, 's', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'a', 00H
	DB	'v', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, 00H, 00H
$SG144249 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG144258 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144263 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG144270 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144275 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'P', 00H, 'M', 00H
	DB	' ', 00H, 't', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'a', 00H
	DB	'v', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, 00H, 00H
$SG144302 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'f', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG144307 DB	'<', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'a', 00H
	DB	'v', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, '>', 00H, 00H, 00H
$SG144314 DB	'<', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'a', 00H
	DB	'v', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'a', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, '>', 00H, 00H, 00H
$SG144322 DB	'O', 00H, 'K', 00H, ' ', 00H, 's', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, '=', 00H, 00H, 00H
	ORG $+2
$SG144341 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144346 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' '
	DB	00H, 'd', 00H, 'o', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, 't', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 00H, 00H
$SG144352 DB	':', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG144354 DB	'O', 00H, 'K', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'a'
	DB	00H, 'v', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 't', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'b', 00H, 'o'
	DB	00H, 'x', 00H, 00H, 00H
$SG144375 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'c'
	DB	00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't', 00H, '-', 00H
	DB	'i', 00H, 'd', 00H, 00H, 00H
$SG144395 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144423 DB	'F', 00H, 'F', 00H, '7', 00H, 'B', 00H, 'F', 00H, 'F', 00H
	DB	00H, 00H
	ORG $+2
$SG144426 DB	'F', 00H, 'F', 00H, '7', 00H, 'B', 00H, 'F', 00H, 'F', 00H
	DB	00H, 00H
	ORG $+2
$SG144429 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 's', 00H, ' '
	DB	00H, 'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG144443 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144470 DB	'/', 00H, 'i', 00H, ' ', 00H, 00H, 00H
$SG144478 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG144484 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	' ', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 's', 00H, ' '
	DB	00H, 'f', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG144497 DB	'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG144500 DB	'o', 00H, 'f', 00H, 'f', 00H, 00H, 00H
$SG144503 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144508 DB	'msg.chat_time', 00H
	ORG $+2
$SG144527 DB	'O', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG144692 DB	'=', 00H
	ORG $+2
$SG144703 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144719 DB	'O', 00H, 'K', 00H, ' ', 00H, 'Y', 00H, 'o', 00H, 'u', 00H
	DB	' ', 00H, 'h', 00H, 'a', 00H, 'v', 00H, 'e', 00H, ' ', 00H, 'n'
	DB	00H, 'o', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG144726 DB	'O', 00H, 'K', 00H, ' ', 00H, 'Y', 00H, 'o', 00H, 'u', 00H
	DB	' ', 00H, 'h', 00H, 'a', 00H, 'v', 00H, 'e', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'r', 00H, 'e', 00H
	DB	'a', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's'
	DB	00H, 'a', 00H, 'g', 00H, 'e', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144729 DB	'O', 00H, 'K', 00H, ' ', 00H, 'Y', 00H, 'o', 00H, 'u', 00H
	DB	' ', 00H, 'h', 00H, 'a', 00H, 'v', 00H, 'e', 00H, ' ', 00H, '%'
	DB	00H, 'd', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, 's', 00H, 00H, 00H
$SG144731 DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '/', 00H
	DB	'm', 00H, 'a', 00H, 'i', 00H, 'l', 00H, ' ', 00H, '1', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'e', 00H, 'e', 00H
	DB	' ', 00H, 'f', 00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, ' '
	DB	00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H
	DB	'e', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H, 'm'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, ' ', 00H, '<', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, '>', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' '
	DB	00H, 's', 00H, 'e', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'p', 00H
	DB	'e', 00H, 'c', 00H, 'i', 00H, 'f', 00H, 'i', 00H, 'e', 00H, 'd'
	DB	00H, ' ', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H
$SG144734 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'M', 00H, 'e', 00H
	DB	's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'd'
	DB	00H, 'o', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H
	DB	't', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 00H, 00H
	ORG $+2
$SG144745 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'I', 00H, 'n', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144756 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'M', 00H, 'e', 00H
	DB	's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'd'
	DB	00H, 'o', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H
	DB	't', 00H, ' ', 00H, 'e', 00H, 'x', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 00H, 00H
	ORG $+2
$SG144762 DB	'O', 00H, 'K', 00H, 00H, 00H
	ORG $+2
$SG144765 DB	'E', 00H, 'R', 00H, 'R', 00H, 00H, 00H
$SG144777 DB	'/', 00H, 00H, 00H
$SG144778 DB	'.', 00H, 00H, 00H
$SG144780 DB	'/', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG144781 DB	'/', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG144782 DB	'/', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG144783 DB	'/', 00H, 's', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, 00H, 00H
$SG144784 DB	'/', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG144785 DB	'/', 00H, 'g', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+2
$SG144786 DB	'/', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG144787 DB	'/', 00H, 't', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, 00H, 00H
$SG144788 DB	'/', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG144789 DB	'/', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+2
$SG144790 DB	'/', 00H, '/', 00H, 00H, 00H
	ORG $+2
$SG144791 DB	'*', 00H, 00H, 00H
$SG144798 DB	'<', 00H, '/', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
$SG144799 DB	'"', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's', 00H, 'k', 00H
	DB	'=', 00H, '"', 00H, '-', 00H, '1', 00H, '"', 00H, '/', 00H, '>'
	DB	00H, '<', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H, '>', 00H
	DB	00H, 00H
$SG144800 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '=', 00H, '"', 00H, 00H, 00H
$SG144809 DB	':', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG144811 DB	'O', 00H, 'K', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'a'
	DB	00H, 'v', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 't', 00H, 'o', 00H
	DB	' ', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'b', 00H, 'o'
	DB	00H, 'x', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG144821 DB	'"', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's', 00H, 'k', 00H
	DB	'=', 00H, '"', 00H, '-', 00H, '1', 00H, '"', 00H, '/', 00H, '>'
	DB	00H, ' ', 00H, '<', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
	ORG $+2
$SG144822 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '=', 00H, '"', 00H, 00H, 00H
$SG144824 DB	'<', 00H, '/', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
$SG144834 DB	'"', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's', 00H, 'k', 00H
	DB	'=', 00H, '"', 00H, '-', 00H, '1', 00H, '"', 00H, '/', 00H, '>'
	DB	00H, ' ', 00H, '<', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
	ORG $+2
$SG144835 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '=', 00H, '"', 00H, 00H, 00H
$SG144837 DB	'<', 00H, '/', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
$SG144844 DB	'"', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's', 00H, 'k', 00H
	DB	'=', 00H, '"', 00H, '-', 00H, '1', 00H, '"', 00H, '/', 00H, '>'
	DB	00H, ' ', 00H, '<', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
	ORG $+2
$SG144845 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '=', 00H, '"', 00H, 00H, 00H
$SG144847 DB	'<', 00H, '/', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
$SG144856 DB	'"', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's', 00H, 'k', 00H
	DB	'=', 00H, '"', 00H, '-', 00H, '1', 00H, '"', 00H, '/', 00H, '>'
	DB	00H, ' ', 00H, '<', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
	ORG $+2
$SG144857 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '=', 00H, '"', 00H, 00H, 00H
$SG144859 DB	'<', 00H, '/', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
$SG144874 DB	'<', 00H, '/', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
	ORG $+4
$SG144875 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '=', 00H, '"', 00H, '0', 00H, 'x'
	DB	00H, 'B', 00H, 'E', 00H, 'B', 00H, 'E', 00H, 'B', 00H, 'E', 00H
	DB	'9', 00H, '0', 00H, '"', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's'
	DB	00H, 'k', 00H, '=', 00H, '"', 00H, '-', 00H, '1', 00H, '"', 00H
	DB	'/', 00H, '>', 00H, '<', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T'
	DB	00H, '>', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEIABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase
PUBLIC	?ClearClientInfo@Message@@YAXI@Z		; Message::ClearClientInfo
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = 8						; size = 4
?ClearClientInfo@Message@@YAXI@Z PROC			; Message::ClearClientInfo
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\message.cpp
; Line 227
	push	ebp
	mov	ebp, esp
; Line 228
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, OFFSET _mapInfo
	call	?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEIABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase
; Line 229
	pop	ebp
	ret	0
?ClearClientInfo@Message@@YAXI@Z ENDP			; Message::ClearClientInfo
_TEXT	ENDS
PUBLIC	??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
PUBLIC	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	?push_back@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEXABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::push_back
PUBLIC	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	?push_back@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::push_back
PUBLIC	?clear@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::clear
PUBLIC	?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear
PUBLIC	??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator->
PUBLIC	??9?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator!=
PUBLIC	?end@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::end
PUBLIC	??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV012@H@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator++
PUBLIC	?begin@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::begin
PUBLIC	__real@459c4000
PUBLIC	__$ArrayPad$
PUBLIC	?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Message::LoadSettings
EXTRN	__imp_??1INI_Reader@@QAE@XZ:PROC
EXTRN	__imp_?close@INI_Reader@@QAEXXZ:PROC
EXTRN	__imp_?ReplaceStr@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@00@Z:PROC
EXTRN	__imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z:PROC
EXTRN	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z:PROC ; Trim
EXTRN	__imp_?get_value_string@INI_Reader@@QAEPBDXZ:PROC
EXTRN	__imp_?read_value@INI_Reader@@QAE_NXZ:PROC
EXTRN	__imp_?is_header@INI_Reader@@QAE_NPBD@Z:PROC
EXTRN	__imp_?read_header@INI_Reader@@QAE_NXZ:PROC
EXTRN	__imp_?open@INI_Reader@@QAE_NPBD_N@Z:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	__imp_??0INI_Reader@@QAE@XZ:PROC
EXTRN	__imp_?IniGetSection@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AAV?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z:PROC
EXTRN	__imp_?HkGetPlayers@@YA?AV?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@XZ:PROC
EXTRN	__imp_?IniGetF@@YAMABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00M@Z:PROC
EXTRN	__imp_?IniGetI@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00H@Z:PROC
EXTRN	__imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ:PROC
EXTRN	__imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:PROC
EXTRN	__imp_?IniGetS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@000@Z:PROC
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	__imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
_BSS	SEGMENT
	ALIGN	4

_set_bSetMsg DB	01H DUP (?)
	ALIGN	4

_set_fDisconnectSwearingInSpaceRange DD 01H DUP (?)
_set_iSpecialBannerTimeout DD 01H DUP (?)
_set_iStandardBannerTimeout DD 01H DUP (?)
_set_bCmdHide DB 01H DUP (?)
	ALIGN	4

_set_bCmdEcho DB 01H DUP (?)
	ALIGN	4

_set_bCustomHelp DB 01H DUP (?)
_BSS	ENDS
;	COMDAT __real@459c4000
CONST	SEGMENT
__real@459c4000 DD 0459c4000r			; 5000
CONST	ENDS
xdata$x	SEGMENT
__ehfuncinfo$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	02cH
	DD	FLAT:__unwindtable$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$19
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$20
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$21
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$22
	DD	016H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$23
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$24
	DD	018H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$25
	DD	018H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$28
	DD	01bH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$29
	DD	01aH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$30
	DD	01eH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$31
	DD	01eH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$32
	DD	01aH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$33
	DD	021H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$34
	DD	022H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$35
	DD	022H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$36
	DD	01aH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$37
	DD	025H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$38
	DD	025H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$39
	DD	01aH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$39
	DD	028H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$40
	DD	029H
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$41
	DD	02aH
	DD	FLAT:__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$42
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv609 = -6704						; size = 4
tv508 = -6700						; size = 4
tv604 = -6696						; size = 4
tv603 = -6692						; size = 4
tv485 = -6688						; size = 4
tv600 = -6684						; size = 4
tv598 = -6680						; size = 4
tv597 = -6676						; size = 4
tv449 = -6672						; size = 4
tv593 = -6668						; size = 4
tv591 = -6664						; size = 4
tv590 = -6660						; size = 4
tv411 = -6656						; size = 4
tv587 = -6652						; size = 4
tv585 = -6648						; size = 4
tv584 = -6644						; size = 4
tv376 = -6640						; size = 4
tv542 = -6636						; size = 4
tv198 = -6632						; size = 4
tv540 = -6628						; size = 4
tv203 = -6624						; size = 4
tv531 = -6620						; size = 4
tv145 = -6616						; size = 4
tv529 = -6612						; size = 4
tv150 = -6608						; size = 4
$T152181 = -6604					; size = 28
$T152180 = -6576					; size = 28
$T152179 = -6548					; size = 28
$T152178 = -6520					; size = 28
$T152177 = -6492					; size = 4
$T152176 = -6488					; size = 28
$T152175 = -6460					; size = 28
$T152174 = -6432					; size = 4
$T152173 = -6428					; size = 28
$T152172 = -6400					; size = 28
$T152171 = -6372					; size = 4
$T152170 = -6368					; size = 28
$T152169 = -6340					; size = 28
$T152168 = -6312					; size = 4
$T152167 = -6308					; size = 28
$T152166 = -6280					; size = 8
$T152165 = -6272					; size = 8
$T152164 = -6264					; size = 28
$T152163 = -6236					; size = 28
$T152162 = -6208					; size = 28
$T152161 = -6180					; size = 28
$T152160 = -6152					; size = 28
$T152159 = -6124					; size = 28
$T152158 = -6096					; size = 28
$T152157 = -6068					; size = 28
$T152156 = -6040					; size = 28
$T152155 = -6012					; size = 28
$T152154 = -5984					; size = 28
$T152153 = -5956					; size = 28
$T152152 = -5928					; size = 28
$T152151 = -5900					; size = 28
$T152150 = -5872					; size = 28
$T152149 = -5844					; size = 28
$T152148 = -5816					; size = 28
$T152147 = -5788					; size = 28
$T152146 = -5760					; size = 28
$T152145 = -5732					; size = 28
$T152144 = -5704					; size = 28
$T152143 = -5676					; size = 28
$T152142 = -5648					; size = 28
$T152141 = -5620					; size = 28
_word$143763 = -5592					; size = 28
_lstStandardBannerSection$143749 = -5564		; size = 28
_p$143709 = -5536					; size = 8
_players$ = -5528					; size = 28
_ini$ = -5500						; size = 5480
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_scPluginCfgFile$ = 8					; size = 4
?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Message::LoadSettings
; Line 236
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 6692				; 00001a24H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 237
	push	OFFSET $SG143007
	lea	ecx, DWORD PTR $T152141[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET $SG143008
	lea	ecx, DWORD PTR $T152142[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	1
	lea	eax, DWORD PTR $T152141[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152142[ebp]
	push	ecx
	mov	edx, DWORD PTR _scPluginCfgFile$[ebp]
	push	edx
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR _set_bCustomHelp, al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T152142[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152141[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 238
	push	OFFSET $SG143011
	lea	ecx, DWORD PTR $T152143[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	push	OFFSET $SG143012
	lea	ecx, DWORD PTR $T152144[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	1
	lea	eax, DWORD PTR $T152143[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152144[ebp]
	push	ecx
	mov	edx, DWORD PTR _scPluginCfgFile$[ebp]
	push	edx
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR _set_bCmdEcho, al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T152144[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152143[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 239
	push	OFFSET $SG143015
	lea	ecx, DWORD PTR $T152145[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	push	OFFSET $SG143016
	lea	ecx, DWORD PTR $T152146[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	push	1
	lea	eax, DWORD PTR $T152145[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152146[ebp]
	push	ecx
	mov	edx, DWORD PTR _scPluginCfgFile$[ebp]
	push	edx
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR _set_bCmdHide, al
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T152146[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152145[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 240
	push	OFFSET $SG143022
	lea	ecx, DWORD PTR $T152147[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	push	OFFSET $SG143023
	lea	ecx, DWORD PTR $T152148[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	push	OFFSET $SG143024
	lea	ecx, DWORD PTR $T152149[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	eax, DWORD PTR $T152147[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152148[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152149[ebp]
	push	edx
	mov	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152150[ebp]
	push	ecx
	call	DWORD PTR __imp_?IniGetS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@000@Z
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv150[ebp], eax
	mov	edx, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv529[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv529[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152151[ebp]
	push	ecx
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv145[ebp], eax
	mov	edx, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv531[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR tv531[ebp]
	push	eax
	mov	ecx, OFFSET _set_wscCmdEchoStyle
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T152151[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T152150[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T152149[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T152148[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152147[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 241
	push	OFFSET $SG143027
	lea	ecx, DWORD PTR $T152152[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	push	OFFSET $SG143028
	lea	ecx, DWORD PTR $T152153[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	push	5
	lea	ecx, DWORD PTR $T152152[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152153[ebp]
	push	edx
	mov	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetI@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00H@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR _set_iStandardBannerTimeout, eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T152153[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152152[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 242
	push	OFFSET $SG143031
	lea	ecx, DWORD PTR $T152154[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH
	push	OFFSET $SG143032
	lea	ecx, DWORD PTR $T152155[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	push	60					; 0000003cH
	lea	ecx, DWORD PTR $T152154[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152155[ebp]
	push	edx
	mov	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetI@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00H@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR _set_iSpecialBannerTimeout, eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T152155[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152154[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 243
	push	OFFSET $SG143038
	lea	ecx, DWORD PTR $T152156[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	push	OFFSET $SG143039
	lea	ecx, DWORD PTR $T152157[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	push	OFFSET $SG143040
	lea	ecx, DWORD PTR $T152158[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR $T152156[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152157[ebp]
	push	edx
	lea	eax, DWORD PTR $T152158[ebp]
	push	eax
	mov	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152159[ebp]
	push	edx
	call	DWORD PTR __imp_?IniGetS@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV12@000@Z
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv203[ebp], eax
	mov	eax, DWORD PTR tv203[ebp]
	mov	DWORD PTR tv540[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	ecx, DWORD PTR tv540[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152160[ebp]
	push	edx
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv198[ebp], eax
	mov	eax, DWORD PTR tv198[ebp]
	mov	DWORD PTR tv542[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	ecx, DWORD PTR tv542[ebp]
	push	ecx
	mov	ecx, OFFSET _set_wscDisconnectSwearingInSpaceMsg
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T152160[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR $T152159[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T152158[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T152157[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152156[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 244
	push	OFFSET $SG143043
	lea	ecx, DWORD PTR $T152161[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 20		; 00000014H
	push	OFFSET $SG143044
	lea	ecx, DWORD PTR $T152162[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	push	ecx
	fld	DWORD PTR __real@459c4000
	fstp	DWORD PTR [esp]
	lea	edx, DWORD PTR $T152161[ebp]
	push	edx
	lea	eax, DWORD PTR $T152162[ebp]
	push	eax
	mov	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	push	ecx
	call	DWORD PTR __imp_?IniGetF@@YAMABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00M@Z
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _set_fDisconnectSwearingInSpaceRange
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR $T152162[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152161[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 245
	push	OFFSET $SG143047
	lea	ecx, DWORD PTR $T152163[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 22		; 00000016H
	push	OFFSET $SG143048
	lea	ecx, DWORD PTR $T152164[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	push	0
	lea	edx, DWORD PTR $T152163[ebp]
	push	edx
	lea	eax, DWORD PTR $T152164[ebp]
	push	eax
	mov	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	push	ecx
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR _set_bSetMsg, al
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR $T152164[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152163[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 248
	lea	edx, DWORD PTR _players$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkGetPlayers@@YA?AV?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@XZ
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], 24		; 00000018H
; Line 249
	lea	eax, DWORD PTR _p$143709[ebp]
	push	eax
	lea	ecx, DWORD PTR _players$[ebp]
	call	?begin@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::begin
	jmp	SHORT $LN21@LoadSettin
$LN20@LoadSettin:
	push	0
	lea	ecx, DWORD PTR $T152165[ebp]
	push	ecx
	lea	ecx, DWORD PTR _p$143709[ebp]
	call	??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV012@H@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator++
$LN21@LoadSettin:
	lea	edx, DWORD PTR $T152166[ebp]
	push	edx
	lea	ecx, DWORD PTR _players$[ebp]
	call	?end@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::end
	push	eax
	lea	ecx, DWORD PTR _p$143709[ebp]
	call	??9?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN19@LoadSettin
; Line 250
	lea	ecx, DWORD PTR _p$143709[ebp]
	call	??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator->
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?LoadMsgs@Message@@YAXI@Z		; Message::LoadMsgs
	add	esp, 4
	jmp	SHORT $LN20@LoadSettin
$LN19@LoadSettin:
; Line 253
	push	OFFSET $SG143717
	lea	ecx, DWORD PTR $T152167[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	push	OFFSET _set_lstHelpLines
	lea	edx, DWORD PTR $T152167[ebp]
	push	edx
	mov	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetSection@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0AAV?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR $T152167[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 255
	mov	ecx, OFFSET _set_lstGreetingBannerLines
	call	?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear
; Line 256
	mov	ecx, OFFSET _set_lstSpecialBannerLines
	call	?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear
; Line 257
	mov	ecx, OFFSET _set_vctStandardBannerLines
	call	?clear@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEXXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::clear
; Line 259
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_??0INI_Reader@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
; Line 260
	push	0
	mov	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?open@INI_Reader@@QAE_NPBD_N@Z
	movzx	ecx, al
	test	ecx, ecx
	je	$LN18@LoadSettin
$LN17@LoadSettin:
; Line 262
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?read_header@INI_Reader@@QAE_NXZ
	movzx	edx, al
	test	edx, edx
	je	$LN16@LoadSettin
; Line 264
	push	OFFSET $SG143724
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_header@INI_Reader@@QAE_NPBD@Z
	movzx	eax, al
	test	eax, eax
	je	$LN15@LoadSettin
$LN14@LoadSettin:
; Line 266
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?read_value@INI_Reader@@QAE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	$LN13@LoadSettin
; Line 268
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?get_value_string@INI_Reader@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR $T152169[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T152168[ebp], esp
	lea	eax, DWORD PTR $T152169[ebp]
	push	eax
	push	edx
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv376[ebp], eax
	mov	ecx, DWORD PTR tv376[ebp]
	mov	DWORD PTR tv584[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	lea	edx, DWORD PTR $T152170[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv585[ebp], eax
	mov	eax, DWORD PTR tv585[ebp]
	mov	DWORD PTR tv587[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	ecx, DWORD PTR tv587[ebp]
	push	ecx
	mov	ecx, OFFSET _set_lstGreetingBannerLines
	call	?push_back@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	ecx, DWORD PTR $T152170[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T152169[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 269
	jmp	$LN14@LoadSettin
$LN13@LoadSettin:
; Line 271
	jmp	$LN1@LoadSettin
$LN15@LoadSettin:
	push	OFFSET $SG143734
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_header@INI_Reader@@QAE_NPBD@Z
	movzx	edx, al
	test	edx, edx
	je	$LN11@LoadSettin
$LN10@LoadSettin:
; Line 273
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?read_value@INI_Reader@@QAE_NXZ
	movzx	eax, al
	test	eax, eax
	je	$LN9@LoadSettin
; Line 275
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?get_value_string@INI_Reader@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR $T152172[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152171[ebp], esp
	lea	edx, DWORD PTR $T152172[ebp]
	push	edx
	push	ecx
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv411[ebp], eax
	mov	eax, DWORD PTR tv411[ebp]
	mov	DWORD PTR tv590[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	lea	ecx, DWORD PTR $T152173[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv591[ebp], eax
	mov	edx, DWORD PTR tv591[ebp]
	mov	DWORD PTR tv593[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 32		; 00000020H
	mov	eax, DWORD PTR tv593[ebp]
	push	eax
	mov	ecx, OFFSET _set_lstSpecialBannerLines
	call	?push_back@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T152173[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T152172[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 276
	jmp	$LN10@LoadSettin
$LN9@LoadSettin:
; Line 278
	jmp	$LN1@LoadSettin
$LN11@LoadSettin:
	push	OFFSET $SG143744
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_header@INI_Reader@@QAE_NPBD@Z
	movzx	ecx, al
	test	ecx, ecx
	je	$LN7@LoadSettin
; Line 280
	lea	ecx, DWORD PTR _lstStandardBannerSection$143749[ebp]
	call	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
$LN6@LoadSettin:
; Line 281
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?read_value@INI_Reader@@QAE_NXZ
	movzx	edx, al
	test	edx, edx
	je	$LN5@LoadSettin
; Line 283
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?get_value_string@INI_Reader@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR $T152175[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T152174[ebp], esp
	lea	ecx, DWORD PTR $T152175[ebp]
	push	ecx
	push	eax
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv449[ebp], eax
	mov	edx, DWORD PTR tv449[ebp]
	mov	DWORD PTR tv597[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 35		; 00000023H
	lea	eax, DWORD PTR $T152176[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv598[ebp], eax
	mov	ecx, DWORD PTR tv598[ebp]
	mov	DWORD PTR tv600[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	edx, DWORD PTR tv600[ebp]
	push	edx
	lea	ecx, DWORD PTR _lstStandardBannerSection$143749[ebp]
	call	?push_back@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::push_back
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	lea	ecx, DWORD PTR $T152176[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	lea	ecx, DWORD PTR $T152175[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 284
	jmp	$LN6@LoadSettin
$LN5@LoadSettin:
; Line 285
	lea	eax, DWORD PTR _lstStandardBannerSection$143749[ebp]
	push	eax
	mov	ecx, OFFSET _set_vctStandardBannerLines
	call	?push_back@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEXABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::push_back
; Line 286
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR _lstStandardBannerSection$143749[ebp]
	call	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	jmp	$LN1@LoadSettin
$LN7@LoadSettin:
; Line 287
	push	OFFSET $SG143759
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_header@INI_Reader@@QAE_NPBD@Z
	movzx	ecx, al
	test	ecx, ecx
	je	$LN1@LoadSettin
$LN2@LoadSettin:
; Line 289
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?read_value@INI_Reader@@QAE_NXZ
	movzx	edx, al
	test	edx, edx
	je	$LN1@LoadSettin
; Line 291
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?get_value_string@INI_Reader@@QAEPBDXZ
	push	eax
	lea	ecx, DWORD PTR $T152178[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T152177[ebp], esp
	lea	ecx, DWORD PTR $T152178[ebp]
	push	ecx
	push	eax
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv485[ebp], eax
	mov	edx, DWORD PTR tv485[ebp]
	mov	DWORD PTR tv603[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 38		; 00000026H
	lea	eax, DWORD PTR _word$143763[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv604[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T152178[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 292
	push	OFFSET $SG143771
	lea	ecx, DWORD PTR $T152179[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	push	OFFSET $SG143772
	lea	ecx, DWORD PTR $T152180[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	lea	ecx, DWORD PTR $T152179[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152180[ebp]
	push	edx
	lea	eax, DWORD PTR _word$143763[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152181[ebp]
	push	ecx
	call	DWORD PTR __imp_?ReplaceStr@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@00@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv508[ebp], eax
	mov	edx, DWORD PTR tv508[ebp]
	mov	DWORD PTR tv609[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 43		; 0000002bH
	mov	eax, DWORD PTR tv609[ebp]
	push	eax
	lea	ecx, DWORD PTR _word$143763[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 42		; 0000002aH
	lea	ecx, DWORD PTR $T152181[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	lea	ecx, DWORD PTR $T152180[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	lea	ecx, DWORD PTR $T152179[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 293
	lea	ecx, DWORD PTR _word$143763[ebp]
	push	ecx
	mov	ecx, OFFSET _set_lstSwearWords
	call	?push_back@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::push_back
; Line 294
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR _word$143763[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN2@LoadSettin
$LN1@LoadSettin:
; Line 296
	jmp	$LN17@LoadSettin
$LN16@LoadSettin:
; Line 297
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?close@INI_Reader@@QAEXXZ
$LN18@LoadSettin:
; Line 299
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_??1INI_Reader@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _players$[ebp]
	call	??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T152141[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T152142[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T152143[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T152144[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T152145[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T152146[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T152147[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$7:
	lea	ecx, DWORD PTR $T152148[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$8:
	lea	ecx, DWORD PTR $T152149[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$9:
	lea	ecx, DWORD PTR $T152150[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$10:
	lea	ecx, DWORD PTR $T152151[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$11:
	lea	ecx, DWORD PTR $T152152[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$12:
	lea	ecx, DWORD PTR $T152153[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$13:
	lea	ecx, DWORD PTR $T152154[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$14:
	lea	ecx, DWORD PTR $T152155[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$15:
	lea	ecx, DWORD PTR $T152156[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$16:
	lea	ecx, DWORD PTR $T152157[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$17:
	lea	ecx, DWORD PTR $T152158[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$18:
	lea	ecx, DWORD PTR $T152159[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$19:
	lea	ecx, DWORD PTR $T152160[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$20:
	lea	ecx, DWORD PTR $T152161[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$21:
	lea	ecx, DWORD PTR $T152162[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$22:
	lea	ecx, DWORD PTR $T152163[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$23:
	lea	ecx, DWORD PTR $T152164[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$24:
	lea	ecx, DWORD PTR _players$[ebp]
	jmp	??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$25:
	lea	ecx, DWORD PTR $T152167[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$26:
	lea	ecx, DWORD PTR _ini$[ebp]
	jmp	DWORD PTR __imp_??1INI_Reader@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$27:
	lea	ecx, DWORD PTR $T152169[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$28:
	mov	ecx, DWORD PTR $T152168[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$29:
	lea	ecx, DWORD PTR $T152170[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$30:
	lea	ecx, DWORD PTR $T152172[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$31:
	mov	ecx, DWORD PTR $T152171[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$32:
	lea	ecx, DWORD PTR $T152173[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$33:
	lea	ecx, DWORD PTR _lstStandardBannerSection$143749[ebp]
	jmp	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$34:
	lea	ecx, DWORD PTR $T152175[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$35:
	mov	ecx, DWORD PTR $T152174[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$36:
	lea	ecx, DWORD PTR $T152176[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$37:
	lea	ecx, DWORD PTR $T152178[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$38:
	mov	ecx, DWORD PTR $T152177[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$39:
	lea	ecx, DWORD PTR _word$143763[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$40:
	lea	ecx, DWORD PTR $T152179[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$41:
	lea	ecx, DWORD PTR $T152180[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$42:
	lea	ecx, DWORD PTR $T152181[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-6696]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Message::LoadSettings
PUBLIC	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
EXTRN	__imp_?IniGetB@HookExt@@YA_NIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC
EXTRN	__imp_?IniGetWS@HookExt@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z:PROC
EXTRN	__imp_?itos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z:PROC
xdata$x	SEGMENT
__unwindtable$?LoadMsgs@Message@@YAXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMsgs@Message@@YAXI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadMsgs@Message@@YAXI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?LoadMsgs@Message@@YAXI@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadMsgs@Message@@YAXI@Z$3
__ehfuncinfo$?LoadMsgs@Message@@YAXI@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?LoadMsgs@Message@@YAXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv140 = -152						; size = 4
tv144 = -148						; size = 4
tv138 = -144						; size = 4
tv143 = -140						; size = 4
tv136 = -136						; size = 4
tv142 = -132						; size = 4
$T152242 = -128						; size = 28
$T152241 = -100						; size = 28
$T152240 = -72						; size = 28
$T152239 = -44						; size = 28
_iMsgSlot$142654 = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
?LoadMsgs@Message@@YAXI@Z PROC				; Message::LoadMsgs
; Line 116
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadMsgs@Message@@YAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	push	ebx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 117
	movzx	eax, BYTE PTR _set_bSetMsg
	test	eax, eax
	jne	SHORT $LN4@LoadMsgs
; Line 118
	jmp	$LN5@LoadMsgs
$LN4@LoadMsgs:
; Line 121
	mov	DWORD PTR _iMsgSlot$142654[ebp], 0
	jmp	SHORT $LN3@LoadMsgs
$LN2@LoadMsgs:
	mov	ecx, DWORD PTR _iMsgSlot$142654[ebp]
	add	ecx, 1
	mov	DWORD PTR _iMsgSlot$142654[ebp], ecx
$LN3@LoadMsgs:
	cmp	DWORD PTR _iMsgSlot$142654[ebp], 10	; 0000000aH
	jge	$LN1@LoadMsgs
; Line 123
	mov	edx, DWORD PTR _iMsgSlot$142654[ebp]
	push	edx
	lea	eax, DWORD PTR $T152239[ebp]
	push	eax
	call	DWORD PTR __imp_?itos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	add	esp, 8
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv136[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv136[ebp]
	push	edx
	push	OFFSET $SG142661
	lea	eax, DWORD PTR $T152240[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR tv143[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv138[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152241[ebp]
	push	ecx
	call	DWORD PTR __imp_?IniGetWS@HookExt@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], eax
	mov	edx, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv140[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv140[ebp]
	push	eax
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	mov	edx, DWORD PTR _iMsgSlot$142654[ebp]
	imul	edx, 28					; 0000001cH
	add	eax, edx
	mov	ecx, eax
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T152241[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T152240[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152239[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 124
	jmp	$LN2@LoadMsgs
$LN1@LoadMsgs:
; Line 127
	push	OFFSET $SG142663
	lea	ecx, DWORD PTR $T152242[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	lea	eax, DWORD PTR $T152242[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?IniGetB@HookExt@@YA_NIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	add	esp, 8
	mov	bl, al
	lea	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	mov	BYTE PTR [eax+288], bl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152242[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN5@LoadMsgs:
; Line 128
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadMsgs@Message@@YAXI@Z$0:
	lea	ecx, DWORD PTR $T152239[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadMsgs@Message@@YAXI@Z$1:
	lea	ecx, DWORD PTR $T152240[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadMsgs@Message@@YAXI@Z$2:
	lea	ecx, DWORD PTR $T152241[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadMsgs@Message@@YAXI@Z$3:
	lea	ecx, DWORD PTR $T152242[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?LoadMsgs@Message@@YAXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-148]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadMsgs@Message@@YAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadMsgs@Message@@YAXI@Z ENDP				; Message::LoadMsgs
PUBLIC	?Timer@Message@@YAXXZ				; Message::Timer
;	COMDAT ?iStandardBannerTimer@?1??Timer@Message@@YAXXZ@4HA
_BSS	SEGMENT
?iStandardBannerTimer@?1??Timer@Message@@YAXXZ@4HA DD 01H DUP (?) ; `Message::Timer'::`2'::iStandardBannerTimer
_BSS	ENDS
;	COMDAT ?iSpecialBannerTimer@?1??Timer@Message@@YAXXZ@4HA
_BSS	SEGMENT
?iSpecialBannerTimer@?1??Timer@Message@@YAXXZ@4HA DD 01H DUP (?) ; `Message::Timer'::`2'::iSpecialBannerTimer
; Function compile flags: /Odtp
_BSS	ENDS
_TEXT	SEGMENT
?Timer@Message@@YAXXZ PROC				; Message::Timer
; Line 303
	push	ebp
	mov	ebp, esp
; Line 307
	mov	eax, DWORD PTR ?iSpecialBannerTimer@?1??Timer@Message@@YAXXZ@4HA
	add	eax, 1
	mov	DWORD PTR ?iSpecialBannerTimer@?1??Timer@Message@@YAXXZ@4HA, eax
	mov	ecx, DWORD PTR ?iSpecialBannerTimer@?1??Timer@Message@@YAXXZ@4HA
	cmp	ecx, DWORD PTR _set_iSpecialBannerTimeout
	jle	SHORT $LN2@Timer
; Line 309
	mov	DWORD PTR ?iSpecialBannerTimer@?1??Timer@Message@@YAXXZ@4HA, 0
; Line 310
	call	?ShowSpecialBanner@Message@@YAXXZ	; Message::ShowSpecialBanner
$LN2@Timer:
; Line 313
	mov	edx, DWORD PTR ?iStandardBannerTimer@?1??Timer@Message@@YAXXZ@4HA
	add	edx, 1
	mov	DWORD PTR ?iStandardBannerTimer@?1??Timer@Message@@YAXXZ@4HA, edx
	mov	eax, DWORD PTR ?iStandardBannerTimer@?1??Timer@Message@@YAXXZ@4HA
	cmp	eax, DWORD PTR _set_iStandardBannerTimeout
	jle	SHORT $LN3@Timer
; Line 315
	mov	DWORD PTR ?iStandardBannerTimer@?1??Timer@Message@@YAXXZ@4HA, 0
; Line 316
	call	?ShowStandardBanner@Message@@YAXXZ	; Message::ShowStandardBanner
$LN3@Timer:
; Line 318
	pop	ebp
	ret	0
?Timer@Message@@YAXXZ ENDP				; Message::Timer
_TEXT	ENDS
PUBLIC	??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*
PUBLIC	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
PUBLIC	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
PUBLIC	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
PUBLIC	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
PUBLIC	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
EXTRN	__imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ:PROC
EXTRN	__imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ:PROC
EXTRN	__imp_?HkFMsg@@YA?AW4HK_ERROR@@IABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC
EXTRN	__imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z:PROC
EXTRN	__imp_?HkGetClientIdFromPD@@YAIPAUPlayerData@@@Z:PROC
EXTRN	__imp_?traverse_active@PlayerDB@@QBEPAUPlayerData@@PAU2@@Z:PROC
EXTRN	__imp_?Players@@3VPlayerDB@@A:BYTE
xdata$x	SEGMENT
__unwindtable$?ShowSpecialBanner@Message@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ShowSpecialBanner@Message@@YAXXZ$0
__ehfuncinfo$?ShowSpecialBanner@Message@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ShowSpecialBanner@Message@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv156 = -56						; size = 4
tv157 = -52						; size = 4
$T152257 = -48						; size = 4
$T152256 = -44						; size = 8
$T152255 = -36						; size = 8
_iter$142832 = -28					; size = 8
_iClientID$142827 = -20					; size = 4
_pPD$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?ShowSpecialBanner@Message@@YAXXZ PROC			; Message::ShowSpecialBanner
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ShowSpecialBanner@Message@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 149
	mov	DWORD PTR _pPD$[ebp], 0
$LN7@ShowSpecia:
; Line 150
	mov	eax, DWORD PTR _pPD$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?traverse_active@PlayerDB@@QBEPAUPlayerData@@PAU2@@Z
	mov	DWORD PTR _pPD$[ebp], eax
	cmp	DWORD PTR _pPD$[ebp], 0
	je	$LN8@ShowSpecia
; Line 152
	mov	ecx, DWORD PTR _pPD$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkGetClientIdFromPD@@YAIPAUPlayerData@@@Z
	add	esp, 4
	mov	DWORD PTR _iClientID$142827[ebp], eax
; Line 153
	lea	edx, DWORD PTR _iter$142832[ebp]
	push	edx
	mov	ecx, OFFSET _set_lstSpecialBannerLines
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	jmp	SHORT $LN5@ShowSpecia
$LN4@ShowSpecia:
	push	0
	lea	eax, DWORD PTR $T152255[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$142832[ebp]
	call	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
$LN5@ShowSpecia:
	lea	ecx, DWORD PTR $T152256[ebp]
	push	ecx
	mov	ecx, OFFSET _set_lstSpecialBannerLines
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	push	eax
	lea	ecx, DWORD PTR _iter$142832[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN3@ShowSpecia
; Line 155
	push	0
	push	OFFSET $SG142840
	lea	ecx, DWORD PTR _iter$142832[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	test	eax, eax
	jne	SHORT $LN2@ShowSpecia
; Line 156
	lea	ecx, DWORD PTR _iter$142832[ebp]
	call	??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*
	push	eax
	mov	eax, DWORD PTR _iClientID$142827[ebp]
	push	eax
	call	DWORD PTR __imp_?HkFMsg@@YA?AW4HK_ERROR@@IABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 8
; Line 157
	jmp	SHORT $LN1@ShowSpecia
$LN2@ShowSpecia:
; Line 158
	lea	ecx, DWORD PTR _iter$142832[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152257[ebp], esp
	push	OFFSET $SG142843
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR tv157[ebp]
	mov	DWORD PTR tv156[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _iClientID$142827[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 36					; 00000024H
$LN1@ShowSpecia:
; Line 159
	jmp	$LN4@ShowSpecia
$LN3@ShowSpecia:
; Line 160
	jmp	$LN7@ShowSpecia
$LN8@ShowSpecia:
; Line 161
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ShowSpecialBanner@Message@@YAXXZ$0:
	mov	ecx, DWORD PTR $T152257[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?ShowSpecialBanner@Message@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ShowSpecialBanner@Message@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ShowSpecialBanner@Message@@YAXXZ ENDP			; Message::ShowSpecialBanner
PUBLIC	??A?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@I@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator[]
PUBLIC	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
;	COMDAT ?iCurStandardBanner@?3??ShowStandardBanner@Message@@YAXXZ@4IA
_BSS	SEGMENT
?iCurStandardBanner@?3??ShowStandardBanner@Message@@YAXXZ@4IA DD 01H DUP (?) ; `Message::ShowStandardBanner'::`4'::iCurStandardBanner
_BSS	ENDS
xdata$x	SEGMENT
__unwindtable$?ShowStandardBanner@Message@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ShowStandardBanner@Message@@YAXXZ$0
__ehfuncinfo$?ShowStandardBanner@Message@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ShowStandardBanner@Message@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv166 = -60						; size = 4
tv167 = -56						; size = 4
$T152266 = -52						; size = 4
$T152265 = -48						; size = 8
$T152264 = -40						; size = 8
_iter$142864 = -32					; size = 8
_iClientID$142859 = -24					; size = 4
_pPD$ = -20						; size = 4
_lstStandardBannerSection$ = -16			; size = 4
__$EHRec$ = -12						; size = 12
?ShowStandardBanner@Message@@YAXXZ PROC			; Message::ShowStandardBanner
; Line 165
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ShowStandardBanner@Message@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 166
	mov	ecx, OFFSET _set_vctStandardBannerLines
	call	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
	test	eax, eax
	jne	SHORT $LN9@ShowStanda
; Line 167
	jmp	$LN10@ShowStanda
$LN9@ShowStanda:
; Line 170
	mov	eax, DWORD PTR ?iCurStandardBanner@?3??ShowStandardBanner@Message@@YAXXZ@4IA
	add	eax, 1
	mov	DWORD PTR ?iCurStandardBanner@?3??ShowStandardBanner@Message@@YAXXZ@4IA, eax
	mov	ecx, OFFSET _set_vctStandardBannerLines
	call	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
	cmp	DWORD PTR ?iCurStandardBanner@?3??ShowStandardBanner@Message@@YAXXZ@4IA, eax
	jb	SHORT $LN8@ShowStanda
; Line 171
	mov	DWORD PTR ?iCurStandardBanner@?3??ShowStandardBanner@Message@@YAXXZ@4IA, 0
$LN8@ShowStanda:
; Line 173
	mov	ecx, DWORD PTR ?iCurStandardBanner@?3??ShowStandardBanner@Message@@YAXXZ@4IA
	push	ecx
	mov	ecx, OFFSET _set_vctStandardBannerLines
	call	??A?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@I@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator[]
	mov	DWORD PTR _lstStandardBannerSection$[ebp], eax
; Line 175
	mov	DWORD PTR _pPD$[ebp], 0
$LN7@ShowStanda:
; Line 176
	mov	edx, DWORD PTR _pPD$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?traverse_active@PlayerDB@@QBEPAUPlayerData@@PAU2@@Z
	mov	DWORD PTR _pPD$[ebp], eax
	cmp	DWORD PTR _pPD$[ebp], 0
	je	$LN10@ShowStanda
; Line 178
	mov	eax, DWORD PTR _pPD$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetClientIdFromPD@@YAIPAUPlayerData@@@Z
	add	esp, 4
	mov	DWORD PTR _iClientID$142859[ebp], eax
; Line 180
	lea	ecx, DWORD PTR _iter$142864[ebp]
	push	ecx
	mov	ecx, DWORD PTR _lstStandardBannerSection$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	jmp	SHORT $LN5@ShowStanda
$LN4@ShowStanda:
	push	0
	lea	edx, DWORD PTR $T152264[ebp]
	push	edx
	lea	ecx, DWORD PTR _iter$142864[ebp]
	call	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
$LN5@ShowStanda:
	lea	eax, DWORD PTR $T152265[ebp]
	push	eax
	mov	ecx, DWORD PTR _lstStandardBannerSection$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	push	eax
	lea	ecx, DWORD PTR _iter$142864[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@ShowStanda
; Line 182
	push	0
	push	OFFSET $SG142872
	lea	ecx, DWORD PTR _iter$142864[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	test	eax, eax
	jne	SHORT $LN2@ShowStanda
; Line 183
	lea	ecx, DWORD PTR _iter$142864[ebp]
	call	??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*
	push	eax
	mov	edx, DWORD PTR _iClientID$142859[ebp]
	push	edx
	call	DWORD PTR __imp_?HkFMsg@@YA?AW4HK_ERROR@@IABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 8
; Line 184
	jmp	SHORT $LN1@ShowStanda
$LN2@ShowStanda:
; Line 185
	lea	ecx, DWORD PTR _iter$142864[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152266[ebp], esp
	push	OFFSET $SG142875
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv167[ebp], eax
	mov	eax, DWORD PTR tv167[ebp]
	mov	DWORD PTR tv166[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _iClientID$142859[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 36					; 00000024H
$LN1@ShowStanda:
; Line 186
	jmp	$LN4@ShowStanda
$LN3@ShowStanda:
; Line 187
	jmp	$LN7@ShowStanda
$LN10@ShowStanda:
; Line 188
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ShowStandardBanner@Message@@YAXXZ$0:
	mov	ecx, DWORD PTR $T152266[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?ShowStandardBanner@Message@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ShowStandardBanner@Message@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ShowStandardBanner@Message@@YAXXZ ENDP			; Message::ShowStandardBanner
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator!=
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin
PUBLIC	?DisConnect@Message@@YAXIW4EFLConnection@@@Z	; Message::DisConnect
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T152274 = -16						; size = 8
_iter$ = -8						; size = 8
_iClientID$ = 8						; size = 4
_p2$ = 12						; size = 4
?DisConnect@Message@@YAXIW4EFLConnection@@@Z PROC	; Message::DisConnect
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 323
	lea	eax, DWORD PTR _iter$[ebp]
	push	eax
	mov	ecx, OFFSET _mapInfo
	call	?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin
$LN4@DisConnect:
; Line 324
	lea	ecx, DWORD PTR $T152274[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@DisConnect
; Line 326
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	eax, DWORD PTR [eax+284]
	cmp	eax, DWORD PTR _iClientID$[ebp]
	jne	SHORT $LN2@DisConnect
; Line 327
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	DWORD PTR [eax+284], -1
$LN2@DisConnect:
; Line 328
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR [eax+288]
	cmp	ecx, DWORD PTR _iClientID$[ebp]
	jne	SHORT $LN1@DisConnect
; Line 329
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	DWORD PTR [eax+288], -1
$LN1@DisConnect:
; Line 330
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
; Line 331
	jmp	SHORT $LN4@DisConnect
$LN5@DisConnect:
; Line 332
	mov	esp, ebp
	pop	ebp
	ret	0
?DisConnect@Message@@YAXIW4EFLConnection@@@Z ENDP	; Message::DisConnect
_TEXT	ENDS
PUBLIC	?CharacterInfoReq@Message@@YAXI_N@Z		; Message::CharacterInfoReq
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T152276 = -16						; size = 8
_iter$ = -8						; size = 8
_iClientID$ = 8						; size = 4
_p2$ = 12						; size = 1
?CharacterInfoReq@Message@@YAXI_N@Z PROC		; Message::CharacterInfoReq
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 337
	lea	eax, DWORD PTR _iter$[ebp]
	push	eax
	mov	ecx, OFFSET _mapInfo
	call	?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin
$LN4@CharacterI:
; Line 338
	lea	ecx, DWORD PTR $T152276[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@CharacterI
; Line 340
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	eax, DWORD PTR [eax+284]
	cmp	eax, DWORD PTR _iClientID$[ebp]
	jne	SHORT $LN2@CharacterI
; Line 341
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	DWORD PTR [eax+284], -1
$LN2@CharacterI:
; Line 342
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR [eax+288]
	cmp	ecx, DWORD PTR _iClientID$[ebp]
	jne	SHORT $LN1@CharacterI
; Line 343
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	DWORD PTR [eax+288], -1
$LN1@CharacterI:
; Line 344
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
; Line 345
	jmp	SHORT $LN4@CharacterI
$LN5@CharacterI:
; Line 346
	mov	esp, ebp
	pop	ebp
	ret	0
?CharacterInfoReq@Message@@YAXI_N@Z ENDP		; Message::CharacterInfoReq
_TEXT	ENDS
PUBLIC	?PlayerLaunch@Message@@YAXII@Z			; Message::PlayerLaunch
EXTRN	?MailCheckLog@Mail@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z:PROC ; Mail::MailCheckLog
EXTRN	__imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z:PROC
xdata$x	SEGMENT
__unwindtable$?PlayerLaunch@Message@@YAXII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PlayerLaunch@Message@@YAXII@Z$0
__ehfuncinfo$?PlayerLaunch@Message@@YAXII@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PlayerLaunch@Message@@YAXII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T152278 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_iShip$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?PlayerLaunch@Message@@YAXII@Z PROC			; Message::PlayerLaunch
; Line 350
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PlayerLaunch@Message@@YAXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 351
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?LoadMsgs@Message@@YAXI@Z		; Message::LoadMsgs
	add	esp, 4
; Line 352
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?ShowGreetingBanner@Message@@YAXH@Z	; Message::ShowGreetingBanner
	add	esp, 4
; Line 353
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T152278[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET _MSG_LOG
	lea	eax, DWORD PTR $T152278[ebp]
	push	eax
	call	?MailCheckLog@Mail@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; Mail::MailCheckLog
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152278[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 354
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PlayerLaunch@Message@@YAXII@Z$0:
	lea	ecx, DWORD PTR $T152278[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?PlayerLaunch@Message@@YAXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PlayerLaunch@Message@@YAXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PlayerLaunch@Message@@YAXII@Z ENDP			; Message::PlayerLaunch
xdata$x	SEGMENT
__unwindtable$?ShowGreetingBanner@Message@@YAXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ShowGreetingBanner@Message@@YAXH@Z$0
__ehfuncinfo$?ShowGreetingBanner@Message@@YAXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ShowGreetingBanner@Message@@YAXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv160 = -56						; size = 4
tv161 = -52						; size = 4
$T152289 = -48						; size = 4
$T152288 = -44						; size = 8
$T152287 = -36						; size = 8
$T152286 = -28						; size = 4
$T152285 = -24						; size = 4
_iter$142809 = -20					; size = 8
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
?ShowGreetingBanner@Message@@YAXH@Z PROC		; Message::ShowGreetingBanner
; Line 132
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ShowGreetingBanner@Message@@YAXH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 133
	mov	eax, DWORD PTR _iClientID$[ebp]
	mov	DWORD PTR $T152285[ebp], eax
	lea	ecx, DWORD PTR $T152285[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	movzx	edx, BYTE PTR [eax+289]
	test	edx, edx
	jne	$LN7@ShowGreeti
; Line 135
	mov	eax, DWORD PTR _iClientID$[ebp]
	mov	DWORD PTR $T152286[ebp], eax
	lea	ecx, DWORD PTR $T152286[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	mov	BYTE PTR [eax+289], 1
; Line 136
	lea	edx, DWORD PTR _iter$142809[ebp]
	push	edx
	mov	ecx, OFFSET _set_lstGreetingBannerLines
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	jmp	SHORT $LN5@ShowGreeti
$LN4@ShowGreeti:
	push	0
	lea	eax, DWORD PTR $T152287[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$142809[ebp]
	call	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
$LN5@ShowGreeti:
	lea	ecx, DWORD PTR $T152288[ebp]
	push	ecx
	mov	ecx, OFFSET _set_lstGreetingBannerLines
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	push	eax
	lea	ecx, DWORD PTR _iter$142809[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN7@ShowGreeti
; Line 138
	push	0
	push	OFFSET $SG142817
	lea	ecx, DWORD PTR _iter$142809[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	test	eax, eax
	jne	SHORT $LN2@ShowGreeti
; Line 139
	lea	ecx, DWORD PTR _iter$142809[ebp]
	call	??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*
	push	eax
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkFMsg@@YA?AW4HK_ERROR@@IABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 8
; Line 140
	jmp	SHORT $LN1@ShowGreeti
$LN2@ShowGreeti:
; Line 141
	lea	ecx, DWORD PTR _iter$142809[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152289[ebp], esp
	push	OFFSET $SG142820
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv161[ebp], eax
	mov	ecx, DWORD PTR tv161[ebp]
	mov	DWORD PTR tv160[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 36					; 00000024H
$LN1@ShowGreeti:
; Line 142
	jmp	$LN4@ShowGreeti
$LN7@ShowGreeti:
; Line 144
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ShowGreetingBanner@Message@@YAXH@Z$0:
	mov	ecx, DWORD PTR $T152289[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?ShowGreetingBanner@Message@@YAXH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ShowGreetingBanner@Message@@YAXH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ShowGreetingBanner@Message@@YAXH@Z ENDP		; Message::ShowGreetingBanner
PUBLIC	?BaseEnter@Message@@YAXII@Z			; Message::BaseEnter
xdata$x	SEGMENT
__unwindtable$?BaseEnter@Message@@YAXII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BaseEnter@Message@@YAXII@Z$0
__ehfuncinfo$?BaseEnter@Message@@YAXII@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?BaseEnter@Message@@YAXII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T152296 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_iBaseID$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?BaseEnter@Message@@YAXII@Z PROC			; Message::BaseEnter
; Line 358
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BaseEnter@Message@@YAXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 359
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?LoadMsgs@Message@@YAXI@Z		; Message::LoadMsgs
	add	esp, 4
; Line 360
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?ShowGreetingBanner@Message@@YAXH@Z	; Message::ShowGreetingBanner
	add	esp, 4
; Line 361
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T152296[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET _MSG_LOG
	lea	eax, DWORD PTR $T152296[ebp]
	push	eax
	call	?MailCheckLog@Mail@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; Mail::MailCheckLog
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152296[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 362
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BaseEnter@Message@@YAXII@Z$0:
	lea	ecx, DWORD PTR $T152296[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?BaseEnter@Message@@YAXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BaseEnter@Message@@YAXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BaseEnter@Message@@YAXII@Z ENDP			; Message::BaseEnter
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
PUBLIC	?SetTarget@Message@@YAXIABUXSetTarget@@@Z	; Message::SetTarget
EXTRN	__imp_?HkGetClientIDByShip@@YAII@Z:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T152303 = -20						; size = 8
_iter$143890 = -12					; size = 8
_uTargetClientID$ = -4					; size = 4
_uClientID$ = 8						; size = 4
_p2$ = 12						; size = 4
?SetTarget@Message@@YAXIABUXSetTarget@@@Z PROC		; Message::SetTarget
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 371
	mov	eax, DWORD PTR _p2$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp_?HkGetClientIDByShip@@YAII@Z
	add	esp, 4
	mov	DWORD PTR _uTargetClientID$[ebp], eax
; Line 372
	cmp	DWORD PTR _uTargetClientID$[ebp], 0
	je	SHORT $LN3@SetTarget
; Line 374
	lea	edx, DWORD PTR _uClientID$[ebp]
	push	edx
	lea	eax, DWORD PTR _iter$143890[ebp]
	push	eax
	mov	ecx, OFFSET _mapInfo
	call	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
; Line 375
	lea	ecx, DWORD PTR $T152303[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$143890[ebp]
	call	??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@SetTarget
; Line 377
	lea	ecx, DWORD PTR _iter$143890[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR _uTargetClientID$[ebp]
	mov	DWORD PTR [eax+288], ecx
$LN3@SetTarget:
; Line 380
	mov	esp, ebp
	pop	ebp
	ret	0
?SetTarget@Message@@YAXIABUXSetTarget@@@Z ENDP		; Message::SetTarget
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	__$ArrayPad$
PUBLIC	?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z	; Message::SubmitChat
EXTRN	?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z:PROC ; PrintLocalUserCmdText
EXTRN	?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z:PROC ; GetTimeString
EXTRN	?set_bLocalTime@@3_NA:BYTE			; set_bLocalTime
EXTRN	__imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	?HkDelayedKick@@YAXII@Z:PROC			; HkDelayedKick
EXTRN	?HkTempBan@@YAXII@Z:PROC			; HkTempBan
EXTRN	__imp_?AddLog@@YAXPBDZZ:PROC
EXTRN	__imp_?HkGetAccountID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PAVCAccount@@@Z:PROC
EXTRN	__imp_?HkGetAccountByCharname@@YAPAVCAccount@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC
EXTRN	__imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z:PROC
EXTRN	__imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIABV12@I@Z:PROC
EXTRN	__imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z:PROC
EXTRN	__imp_?extract_text_from_buffer@BinaryRDLReader@@UAE_NPAGIAAIPBDI@Z:PROC
EXTRN	__imp_??0BinaryRDLReader@@QAE@XZ:PROC
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
xdata$x	SEGMENT
__ehfuncinfo$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$4
	DD	05H
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$6
	DD	07H
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$7
	DD	08H
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$9
	DD	0aH
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$10
	DD	0bH
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$11
	DD	0cH
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$12
	DD	0aH
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$13
	DD	0eH
	DD	FLAT:__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$14
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv368 = -3616						; size = 4
tv268 = -3612						; size = 4
tv365 = -3608						; size = 4
tv242 = -3604						; size = 4
tv363 = -3600						; size = 4
tv255 = -3596						; size = 4
tv359 = -3592						; size = 4
tv375 = -3588						; size = 4
tv357 = -3584						; size = 4
tv374 = -3580						; size = 4
tv355 = -3576						; size = 4
tv373 = -3572						; size = 4
tv353 = -3568						; size = 4
tv197 = -3564						; size = 4
tv189 = -3560						; size = 4
tv318 = -3556						; size = 4
tv371 = -3552						; size = 4
tv316 = -3548						; size = 4
tv67 = -3544						; size = 4
tv91 = -3540						; size = 4
$T152325 = -3533					; size = 1
$T152324 = -3532					; size = 8
$T152323 = -3524					; size = 4
$T152322 = -3517					; size = 1
$T152321 = -3516					; size = 28
$T152320 = -3488					; size = 28
$T152319 = -3460					; size = 28
$T152318 = -3432					; size = 28
$T152317 = -3404					; size = 28
$T152316 = -3376					; size = 28
$T152315 = -3348					; size = 28
$T152314 = -3320					; size = 28
$T152313 = -3292					; size = 28
$T152312 = -3264					; size = 4
$T152311 = -3260					; size = 4
$T152310 = -3256					; size = 8
$T152309 = -3248					; size = 8
$T152306 = -3240					; size = 28
_iter$143962 = -3212					; size = 8
_wscMsg$143939 = -3204					; size = 28
_wscCharname$143932 = -3176				; size = 28
_worditer$143919 = -3148				; size = 8
_iClientID$ = -3140					; size = 4
_wscChatMsg$ = -3136					; size = 28
_bIsGroup$ = -3105					; size = 1
_iRet1$ = -3104						; size = 4
_wszBuf$ = -3100					; size = 2048
_rdl$ = -1052						; size = 1028
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_cId$ = 8						; size = 4
_iSize$ = 12						; size = 4
_rdlReader$ = 16					; size = 4
_cIdTo$ = 20						; size = 4
_p2$ = 24						; size = 4
?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z PROC	; Message::SubmitChat
; Line 383
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 3604				; 00000e14H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 385
	cmp	DWORD PTR _cIdTo$[ebp], 65540		; 00010004H
	jne	SHORT $LN10@SubmitChat
; Line 386
	xor	al, al
	jmp	$LN11@SubmitChat
$LN10@SubmitChat:
; Line 389
	lea	ecx, DWORD PTR _rdl$[ebp]
	call	DWORD PTR __imp_??0BinaryRDLReader@@QAE@XZ
; Line 392
	mov	eax, DWORD PTR _iSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rdlReader$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iRet1$[ebp]
	push	edx
	push	2048					; 00000800H
	lea	eax, DWORD PTR _wszBuf$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rdl$[ebp]
	call	DWORD PTR __imp_?extract_text_from_buffer@BinaryRDLReader@@UAE_NPAGIAAIPBDI@Z
; Line 394
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T152306[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR $T152306[ebp]
	push	edx
	lea	eax, DWORD PTR _wscChatMsg$[ebp]
	push	eax
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T152306[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 395
	mov	ecx, DWORD PTR _cId$[ebp]
	mov	DWORD PTR _iClientID$[ebp], ecx
; Line 397
	cmp	DWORD PTR _cIdTo$[ebp], 65539		; 00010003H
	je	SHORT $LN13@SubmitChat
	push	0
	push	OFFSET $SG143912
	lea	ecx, DWORD PTR _wscChatMsg$[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	test	eax, eax
	je	SHORT $LN13@SubmitChat
	push	0
	push	OFFSET $SG143913
	lea	ecx, DWORD PTR _wscChatMsg$[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	test	eax, eax
	je	SHORT $LN13@SubmitChat
	mov	DWORD PTR tv91[ebp], 0
	jmp	SHORT $LN14@SubmitChat
$LN13@SubmitChat:
	mov	DWORD PTR tv91[ebp], 1
$LN14@SubmitChat:
	mov	dl, BYTE PTR tv91[ebp]
	mov	BYTE PTR _bIsGroup$[ebp], dl
; Line 398
	movzx	eax, BYTE PTR _bIsGroup$[ebp]
	test	eax, eax
	jne	$LN6@SubmitChat
; Line 401
	lea	ecx, DWORD PTR _worditer$143919[ebp]
	push	ecx
	mov	ecx, OFFSET _set_lstSwearWords
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	jmp	SHORT $LN8@SubmitChat
$LN7@SubmitChat:
	push	0
	lea	edx, DWORD PTR $T152309[ebp]
	push	edx
	lea	ecx, DWORD PTR _worditer$143919[ebp]
	call	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
$LN8@SubmitChat:
	lea	eax, DWORD PTR $T152310[ebp]
	push	eax
	mov	ecx, OFFSET _set_lstSwearWords
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	push	eax
	lea	ecx, DWORD PTR _worditer$143919[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN6@SubmitChat
; Line 403
	push	0
	lea	ecx, DWORD PTR _worditer$143919[ebp]
	call	??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*
	push	eax
	lea	ecx, DWORD PTR _wscChatMsg$[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIABV12@I@Z
	cmp	eax, -1
	je	$LN5@SubmitChat
; Line 405
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152311[ebp], esp
	push	OFFSET $SG143928
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv67[ebp], eax
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv316[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 406
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152312[ebp], esp
	push	OFFSET $SG143930
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv371[ebp], eax
	mov	ecx, DWORD PTR tv371[ebp]
	mov	DWORD PTR tv318[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 408
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	add	eax, 292				; 00000124H
	mov	DWORD PTR tv189[ebp], eax
	mov	ecx, DWORD PTR tv189[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR tv189[ebp]
	mov	DWORD PTR [eax], edx
; Line 409
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	cmp	DWORD PTR [eax+292], 2
	jle	$LN4@SubmitChat
; Line 411
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscCharname$143932[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 414
	lea	eax, DWORD PTR _wscChatMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152313[ebp]
	push	ecx
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv197[ebp], eax
	mov	edx, DWORD PTR tv197[ebp]
	mov	DWORD PTR tv353[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv353[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	eax, DWORD PTR _wscCharname$143932[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetAccountByCharname@@YAPAVCAccount@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T152314[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkGetAccountID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PAVCAccount@@@Z
	add	esp, 8
	mov	DWORD PTR tv373[ebp], eax
	mov	edx, DWORD PTR tv373[ebp]
	mov	DWORD PTR tv355[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv355[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152315[ebp]
	push	ecx
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv374[ebp], eax
	mov	edx, DWORD PTR tv374[ebp]
	mov	DWORD PTR tv357[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv357[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	eax, DWORD PTR _wscCharname$143932[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152316[ebp]
	push	ecx
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv375[ebp], eax
	mov	edx, DWORD PTR tv375[ebp]
	mov	DWORD PTR tv359[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR tv359[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	OFFSET $SG143937
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T152316[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T152315[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T152314[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T152313[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 415
	push	10					; 0000000aH
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?HkTempBan@@YAXII@Z			; HkTempBan
	add	esp, 8
; Line 416
	push	1
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?HkDelayedKick@@YAXII@Z			; HkDelayedKick
	add	esp, 8
; Line 418
	fld	DWORD PTR _set_fDisconnectSwearingInSpaceRange
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$LN3@SubmitChat
; Line 420
	push	OFFSET _set_wscDisconnectSwearingInSpaceMsg
	lea	ecx, DWORD PTR _wscMsg$143939[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 421
	push	OFFSET $SG143943
	lea	ecx, DWORD PTR $T152318[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	movzx	edx, BYTE PTR ?set_bLocalTime@@3_NA	; set_bLocalTime
	push	edx
	lea	eax, DWORD PTR $T152317[ebp]
	push	eax
	call	?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z ; GetTimeString
	add	esp, 8
	mov	DWORD PTR tv255[ebp], eax
	mov	ecx, DWORD PTR tv255[ebp]
	mov	DWORD PTR tv363[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv363[ebp]
	push	edx
	lea	eax, DWORD PTR $T152318[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscMsg$143939[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152319[ebp]
	push	edx
	call	DWORD PTR __imp_?ReplaceStr@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@00@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv242[ebp], eax
	mov	eax, DWORD PTR tv242[ebp]
	mov	DWORD PTR tv365[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR tv365[ebp]
	push	ecx
	lea	ecx, DWORD PTR _wscMsg$143939[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T152319[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T152317[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T152318[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 422
	push	OFFSET $SG143946
	lea	ecx, DWORD PTR $T152320[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	edx, DWORD PTR _wscCharname$143932[ebp]
	push	edx
	lea	eax, DWORD PTR $T152320[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscMsg$143939[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152321[ebp]
	push	edx
	call	DWORD PTR __imp_?ReplaceStr@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@00@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv268[ebp], eax
	mov	eax, DWORD PTR tv268[ebp]
	mov	DWORD PTR tv368[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR tv368[ebp]
	push	ecx
	lea	ecx, DWORD PTR _wscMsg$143939[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T152321[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T152320[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 423
	push	ecx
	fld	DWORD PTR _set_fDisconnectSwearingInSpaceRange
	fstp	DWORD PTR [esp]
	lea	edx, DWORD PTR _wscMsg$143939[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z ; PrintLocalUserCmdText
	add	esp, 12					; 0000000cH
; Line 424
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _wscMsg$143939[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN3@SubmitChat:
; Line 425
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _wscCharname$143932[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN4@SubmitChat:
; Line 426
	mov	BYTE PTR $T152322[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscChatMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152322[ebp]
	jmp	$LN11@SubmitChat
$LN5@SubmitChat:
; Line 428
	jmp	$LN7@SubmitChat
$LN6@SubmitChat:
; Line 433
	cmp	DWORD PTR _iClientID$[ebp], 65536	; 00010000H
	jae	SHORT $LN1@SubmitChat
	cmp	DWORD PTR _cIdTo$[ebp], 0
	jle	SHORT $LN1@SubmitChat
	cmp	DWORD PTR _cIdTo$[ebp], 65536		; 00010000H
	jge	SHORT $LN1@SubmitChat
; Line 435
	mov	ecx, DWORD PTR _cIdTo$[ebp]
	mov	DWORD PTR $T152323[ebp], ecx
	lea	edx, DWORD PTR $T152323[ebp]
	push	edx
	lea	eax, DWORD PTR _iter$143962[ebp]
	push	eax
	mov	ecx, OFFSET _mapInfo
	call	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
; Line 436
	lea	ecx, DWORD PTR $T152324[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$143962[ebp]
	call	??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@SubmitChat
; Line 438
	lea	ecx, DWORD PTR _iter$143962[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR _iClientID$[ebp]
	mov	DWORD PTR [eax+284], ecx
$LN1@SubmitChat:
; Line 441
	mov	BYTE PTR $T152325[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscChatMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152325[ebp]
$LN11@SubmitChat:
; Line 442
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$0:
	lea	ecx, DWORD PTR $T152306[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$1:
	lea	ecx, DWORD PTR _wscChatMsg$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$2:
	mov	ecx, DWORD PTR $T152311[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$3:
	mov	ecx, DWORD PTR $T152312[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$4:
	lea	ecx, DWORD PTR _wscCharname$143932[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$5:
	lea	ecx, DWORD PTR $T152313[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$6:
	lea	ecx, DWORD PTR $T152314[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$7:
	lea	ecx, DWORD PTR $T152315[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$8:
	lea	ecx, DWORD PTR $T152316[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$9:
	lea	ecx, DWORD PTR _wscMsg$143939[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$10:
	lea	ecx, DWORD PTR $T152318[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$11:
	lea	ecx, DWORD PTR $T152317[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$12:
	lea	ecx, DWORD PTR $T152319[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$13:
	lea	ecx, DWORD PTR $T152320[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z$14:
	lea	ecx, DWORD PTR $T152321[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-3608]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z ENDP	; Message::SubmitChat
PUBLIC	__$ArrayPad$
PUBLIC	?HkCb_SendChat@Message@@YA_NIIIPAX@Z		; Message::HkCb_SendChat
EXTRN	__imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z:PROC
EXTRN	__imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z:PROC
EXTRN	__imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z:PROC
EXTRN	__imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB:DWORD
xdata$x	SEGMENT
__ehfuncinfo$?HkCb_SendChat@Message@@YA_NIIIPAX@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?HkCb_SendChat@Message@@YA_NIIIPAX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?HkCb_SendChat@Message@@YA_NIIIPAX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkCb_SendChat@Message@@YA_NIIIPAX@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HkCb_SendChat@Message@@YA_NIIIPAX@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?HkCb_SendChat@Message@@YA_NIIIPAX@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?HkCb_SendChat@Message@@YA_NIIIPAX@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?HkCb_SendChat@Message@@YA_NIIIPAX@Z$4
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv171 = -3284						; size = 4
tv174 = -3280						; size = 4
tv169 = -3276						; size = 4
tv173 = -3272						; size = 4
tv167 = -3268						; size = 4
tv172 = -3264						; size = 4
tv165 = -3260						; size = 4
tv77 = -3256						; size = 4
$T152353 = -3252					; size = 28
$T152352 = -3224					; size = 28
$T152351 = -3196					; size = 28
$T152350 = -3168					; size = 28
$T152349 = -3137					; size = 1
_wscChatMsg$143983 = -3136				; size = 28
_iTextStartPos$143984 = -3108				; size = 4
_iRet1$143980 = -3104					; size = 4
_wszBuf$143979 = -3100					; size = 2048
_rdl$143978 = -1052					; size = 1028
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_iTo$ = 12						; size = 4
_iSize$ = 16						; size = 4
_rdlReader$ = 20					; size = 4
?HkCb_SendChat@Message@@YA_NIIIPAX@Z PROC		; Message::HkCb_SendChat
; Line 451
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkCb_SendChat@Message@@YA_NIIIPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 3272				; 00000cc8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 453
	movzx	eax, BYTE PTR _bSendingTime
	test	eax, eax
	je	SHORT $LN8@HkCb_SendC
; Line 454
	xor	al, al
	jmp	$LN9@HkCb_SendC
$LN8@HkCb_SendC:
; Line 457
	cmp	DWORD PTR _iTo$[ebp], 65540		; 00010004H
	jne	SHORT $LN7@HkCb_SendC
; Line 458
	xor	al, al
	jmp	$LN9@HkCb_SendC
$LN7@HkCb_SendC:
; Line 460
	movzx	ecx, BYTE PTR _set_bCmdHide
	test	ecx, ecx
	je	$LN6@HkCb_SendC
; Line 463
	lea	ecx, DWORD PTR _rdl$143978[ebp]
	call	DWORD PTR __imp_??0BinaryRDLReader@@QAE@XZ
; Line 466
	mov	edx, DWORD PTR _iSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _rdlReader$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iRet1$143980[ebp]
	push	ecx
	push	2048					; 00000800H
	lea	edx, DWORD PTR _wszBuf$143979[ebp]
	push	edx
	lea	ecx, DWORD PTR _rdl$143978[ebp]
	call	DWORD PTR __imp_?extract_text_from_buffer@BinaryRDLReader@@UAE_NPAGIAAIPBDI@Z
; Line 467
	lea	eax, DWORD PTR _wszBuf$143979[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscChatMsg$143983[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 470
	push	0
	push	OFFSET $SG143985
	lea	ecx, DWORD PTR _wscChatMsg$143983[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	mov	DWORD PTR _iTextStartPos$143984[ebp], eax
; Line 471
	mov	ecx, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	mov	edx, DWORD PTR _iTextStartPos$143984[ebp]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN5@HkCb_SendC
; Line 474
	push	0
	push	OFFSET $SG143990
	lea	ecx, DWORD PTR _wscChatMsg$143983[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	cmp	eax, DWORD PTR _iTextStartPos$143984[ebp]
	jne	SHORT $LN2@HkCb_SendC
	push	0
	push	OFFSET $SG143991
	lea	ecx, DWORD PTR _wscChatMsg$143983[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	cmp	eax, DWORD PTR _iTextStartPos$143984[ebp]
	jne	SHORT $LN3@HkCb_SendC
$LN2@HkCb_SendC:
	push	0
	push	OFFSET $SG143992
	lea	ecx, DWORD PTR _wscChatMsg$143983[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	cmp	eax, DWORD PTR _iTextStartPos$143984[ebp]
	jne	SHORT $LN5@HkCb_SendC
$LN3@HkCb_SendC:
; Line 476
	mov	BYTE PTR $T152349[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscChatMsg$143983[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152349[ebp]
	jmp	$LN9@HkCb_SendC
$LN5@HkCb_SendC:
; Line 479
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscChatMsg$143983[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN6@HkCb_SendC:
; Line 481
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	movzx	ecx, BYTE PTR [eax+288]
	test	ecx, ecx
	je	$LN1@HkCb_SendC
; Line 484
	mov	BYTE PTR _bSendingTime, 1
; Line 485
	push	OFFSET $SG143999
	movzx	edx, BYTE PTR ?set_bLocalTime@@3_NA	; set_bLocalTime
	push	edx
	lea	eax, DWORD PTR $T152350[ebp]
	push	eax
	call	?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z ; GetTimeString
	add	esp, 8
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv165[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv165[ebp]
	push	edx
	lea	eax, DWORD PTR $T152351[ebp]
	push	eax
	call	DWORD PTR __imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv172[ebp], eax
	mov	ecx, DWORD PTR tv172[ebp]
	mov	DWORD PTR tv167[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv167[ebp]
	push	edx
	push	OFFSET $SG144000
	lea	eax, DWORD PTR $T152352[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv173[ebp], eax
	mov	ecx, DWORD PTR tv173[ebp]
	mov	DWORD PTR tv169[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv169[ebp]
	push	edx
	lea	eax, DWORD PTR $T152353[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv174[ebp], eax
	mov	ecx, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv171[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv171[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkFMsg@@YA?AW4HK_ERROR@@IABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T152353[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T152352[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T152351[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152350[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 486
	mov	BYTE PTR _bSendingTime, 0
$LN1@HkCb_SendC:
; Line 488
	xor	al, al
$LN9@HkCb_SendC:
; Line 489
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkCb_SendChat@Message@@YA_NIIIPAX@Z$0:
	lea	ecx, DWORD PTR _wscChatMsg$143983[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkCb_SendChat@Message@@YA_NIIIPAX@Z$1:
	lea	ecx, DWORD PTR $T152350[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkCb_SendChat@Message@@YA_NIIIPAX@Z$2:
	lea	ecx, DWORD PTR $T152351[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkCb_SendChat@Message@@YA_NIIIPAX@Z$3:
	lea	ecx, DWORD PTR $T152352[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkCb_SendChat@Message@@YA_NIIIPAX@Z$4:
	lea	ecx, DWORD PTR $T152353[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?HkCb_SendChat@Message@@YA_NIIIPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-3276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkCb_SendChat@Message@@YA_NIIIPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkCb_SendChat@Message@@YA_NIIIPAX@Z ENDP		; Message::HkCb_SendChat
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_SetMsg
EXTRN	__imp_?IniSetWS@HookExt@@YAXIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@3@@Z:PROC
EXTRN	__imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ:PROC
EXTRN	?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z:PROC ; GetParamToEnd
EXTRN	__imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC
EXTRN	__imp_?GetParam@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z:PROC
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv191 = -200						; size = 4
tv199 = -196						; size = 4
tv189 = -192						; size = 4
tv198 = -188						; size = 4
tv187 = -184						; size = 4
tv197 = -180						; size = 4
tv184 = -176						; size = 4
tv195 = -172						; size = 4
tv182 = -168						; size = 4
tv75 = -164						; size = 4
tv179 = -160						; size = 4
tv193 = -156						; size = 4
$T152372 = -149						; size = 1
$T152371 = -148						; size = 4
$T152370 = -144						; size = 28
$T152369 = -116						; size = 28
$T152368 = -85						; size = 1
$T152367 = -84						; size = 4
$T152366 = -80						; size = 4
$T152365 = -76						; size = 28
_wscMsg$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_iMsgSlot$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_SetMsg
; Line 493
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 188				; 000000bcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 494
	movzx	eax, BYTE PTR _set_bSetMsg
	test	eax, eax
	jne	SHORT $LN3@UserCmd_Se
; Line 495
	xor	al, al
	jmp	$LN4@UserCmd_Se
$LN3@UserCmd_Se:
; Line 497
	push	0
	push	32					; 00000020H
	mov	ecx, DWORD PTR _wscParam$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152365[ebp]
	push	edx
	call	DWORD PTR __imp_?GetParam@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv193[ebp], eax
	mov	eax, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv179[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv179[ebp]
	push	ecx
	call	DWORD PTR __imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iMsgSlot$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152365[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 498
	push	1
	push	32					; 00000020H
	mov	edx, DWORD PTR _wscParam$[ebp]
	push	edx
	lea	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	call	?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z ; GetParamToEnd
	add	esp, 16					; 00000010H
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 500
	cmp	DWORD PTR _iMsgSlot$[ebp], 0
	jl	SHORT $LN1@UserCmd_Se
	cmp	DWORD PTR _iMsgSlot$[ebp], 9
	jg	SHORT $LN1@UserCmd_Se
	mov	ecx, DWORD PTR _wscParam$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	$LN2@UserCmd_Se
$LN1@UserCmd_Se:
; Line 502
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152366[ebp], esp
	push	OFFSET $SG144015
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR tv182[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 503
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152367[ebp], esp
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv195[ebp], eax
	mov	ecx, DWORD PTR tv195[ebp]
	mov	DWORD PTR tv184[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 504
	mov	BYTE PTR $T152368[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152368[ebp]
	jmp	$LN4@UserCmd_Se
$LN2@UserCmd_Se:
; Line 507
	lea	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMsgSlot$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152369[ebp]
	push	edx
	call	DWORD PTR __imp_?itos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	add	esp, 8
	mov	DWORD PTR tv197[ebp], eax
	mov	eax, DWORD PTR tv197[ebp]
	mov	DWORD PTR tv187[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv187[ebp]
	push	ecx
	push	OFFSET $SG144020
	lea	edx, DWORD PTR $T152370[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv198[ebp], eax
	mov	eax, DWORD PTR tv198[ebp]
	mov	DWORD PTR tv189[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv189[ebp]
	push	ecx
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	DWORD PTR __imp_?IniSetWS@HookExt@@YAXIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@3@@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T152370[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T152369[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 510
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?LoadMsgs@Message@@YAXI@Z		; Message::LoadMsgs
	add	esp, 4
; Line 511
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152371[ebp], esp
	push	OFFSET $SG144022
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv199[ebp], eax
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR tv191[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 512
	mov	BYTE PTR $T152372[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152372[ebp]
$LN4@UserCmd_Se:
; Line 513
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR $T152365[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	mov	ecx, DWORD PTR $T152366[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	mov	ecx, DWORD PTR $T152367[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	lea	ecx, DWORD PTR $T152369[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5:
	lea	ecx, DWORD PTR $T152370[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6:
	mov	ecx, DWORD PTR $T152371[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-192]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_SetMsg
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
PUBLIC	?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_ShowMsgs
xdata$x	SEGMENT
__unwindtable$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
__ehfuncinfo$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv189 = -68						; size = 4
tv192 = -64						; size = 4
tv187 = -60						; size = 4
tv191 = -56						; size = 4
tv183 = -52						; size = 4
tv190 = -48						; size = 4
$T152388 = -44						; size = 4
$T152387 = -40						; size = 4
$T152386 = -36						; size = 4
$T152385 = -32						; size = 8
_i$144050 = -24						; size = 4
_iter$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_ShowMsgs
; Line 517
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 518
	movzx	eax, BYTE PTR _set_bSetMsg
	test	eax, eax
	jne	SHORT $LN5@UserCmd_Sh
; Line 519
	xor	al, al
	jmp	$LN6@UserCmd_Sh
$LN5@UserCmd_Sh:
; Line 521
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iter$[ebp]
	push	edx
	mov	ecx, OFFSET _mapInfo
	call	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
; Line 522
	lea	eax, DWORD PTR $T152385[ebp]
	push	eax
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@UserCmd_Sh
; Line 524
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152386[ebp], esp
	push	OFFSET $SG144049
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv190[ebp], eax
	mov	edx, DWORD PTR tv190[ebp]
	mov	DWORD PTR tv183[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 525
	mov	al, 1
	jmp	$LN6@UserCmd_Sh
$LN4@UserCmd_Sh:
; Line 528
	mov	DWORD PTR _i$144050[ebp], 0
	jmp	SHORT $LN3@UserCmd_Sh
$LN2@UserCmd_Sh:
	mov	ecx, DWORD PTR _i$144050[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$144050[ebp], ecx
$LN3@UserCmd_Sh:
	cmp	DWORD PTR _i$144050[ebp], 10		; 0000000aH
	jge	SHORT $LN1@UserCmd_Sh
; Line 530
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	edx, DWORD PTR _i$144050[ebp]
	imul	edx, 28					; 0000001cH
	lea	ecx, DWORD PTR [eax+edx+4]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	mov	eax, DWORD PTR _i$144050[ebp]
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152387[ebp], esp
	push	OFFSET $SG144055
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv191[ebp], eax
	mov	ecx, DWORD PTR tv191[ebp]
	mov	DWORD PTR tv187[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 40					; 00000028H
; Line 531
	jmp	SHORT $LN2@UserCmd_Sh
$LN1@UserCmd_Sh:
; Line 532
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152388[ebp], esp
	push	OFFSET $SG144057
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv192[ebp], eax
	mov	eax, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv189[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 533
	mov	al, 1
$LN6@UserCmd_Sh:
; Line 534
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	mov	ecx, DWORD PTR $T152386[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	mov	ecx, DWORD PTR $T152387[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	mov	ecx, DWORD PTR $T152388[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_ShowMsgs
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_SMsg
EXTRN	?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC ; SendSystemChat
EXTRN	__imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z:PROC
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv218 = -140						; size = 4
tv225 = -136						; size = 4
tv216 = -132						; size = 4
tv224 = -128						; size = 4
tv214 = -124						; size = 4
tv223 = -120						; size = 4
tv212 = -116						; size = 4
tv222 = -112						; size = 4
$T152404 = -106						; size = 1
$T152403 = -105						; size = 1
$T152402 = -104						; size = 4
$T152401 = -100						; size = 8
$T152400 = -92						; size = 4
$T152399 = -88						; size = 4
$T152398 = -84						; size = 28
_wscMsg$ = -56						; size = 28
__$ArrayPad$ = -28					; size = 4
_iMsgSlot$ = -24					; size = 4
_iter$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_SMsg
; Line 538
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 539
	movzx	eax, BYTE PTR _set_bSetMsg
	test	eax, eax
	jne	SHORT $LN6@UserCmd_SM
; Line 540
	xor	al, al
	jmp	$LN7@UserCmd_SM
$LN6@UserCmd_SM:
; Line 542
	push	1
	push	1
	lea	ecx, DWORD PTR $T152398[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv222[ebp], eax
	mov	edx, DWORD PTR tv222[ebp]
	mov	DWORD PTR tv212[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv212[ebp]
	push	eax
	call	DWORD PTR __imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iMsgSlot$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152398[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 543
	cmp	DWORD PTR _iMsgSlot$[ebp], 0
	jl	SHORT $LN4@UserCmd_SM
	cmp	DWORD PTR _iMsgSlot$[ebp], 9
	jle	SHORT $LN5@UserCmd_SM
$LN4@UserCmd_SM:
; Line 545
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152399[ebp], esp
	push	OFFSET $SG144070
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv223[ebp], eax
	mov	ecx, DWORD PTR tv223[ebp]
	mov	DWORD PTR tv214[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 546
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152400[ebp], esp
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv224[ebp], eax
	mov	ecx, DWORD PTR tv224[ebp]
	mov	DWORD PTR tv216[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 547
	mov	al, 1
	jmp	$LN7@UserCmd_SM
$LN5@UserCmd_SM:
; Line 550
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
; Line 551
	lea	edx, DWORD PTR $T152401[ebp]
	push	edx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@UserCmd_SM
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR _iMsgSlot$[ebp]
	imul	ecx, 28					; 0000001cH
	lea	ecx, DWORD PTR [eax+ecx+4]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN3@UserCmd_SM
$LN2@UserCmd_SM:
; Line 553
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152402[ebp], esp
	push	OFFSET $SG144091
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv225[ebp], eax
	mov	edx, DWORD PTR tv225[ebp]
	mov	DWORD PTR tv218[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 554
	mov	al, 1
	jmp	$LN7@UserCmd_SM
$LN3@UserCmd_SM:
; Line 558
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR _iMsgSlot$[ebp]
	imul	ecx, 28					; 0000001cH
	lea	edx, DWORD PTR [eax+ecx+4]
	push	edx
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 559
	lea	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; Message::ReplaceMessageTags
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@UserCmd_SM
; Line 560
	mov	BYTE PTR $T152403[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152403[ebp]
	jmp	SHORT $LN7@UserCmd_SM
$LN1@UserCmd_SM:
; Line 562
	lea	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendSystemChat
	add	esp, 8
; Line 564
	mov	BYTE PTR $T152404[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152404[ebp]
$LN7@UserCmd_SM:
; Line 565
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR $T152398[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	mov	ecx, DWORD PTR $T152399[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	mov	ecx, DWORD PTR $T152400[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	mov	ecx, DWORD PTR $T152402[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_SMsg
PUBLIC	__$ArrayPad$
EXTRN	?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z:PROC ; GetLocation
xdata$x	SEGMENT
__ehfuncinfo$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$7
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv177 = -240						; size = 4
tv159 = -236						; size = 4
tv172 = -232						; size = 4
tv131 = -228						; size = 4
tv168 = -224						; size = 4
tv178 = -220						; size = 4
$T152421 = -216						; size = 28
$T152420 = -188						; size = 28
$T152419 = -160						; size = 28
$T152418 = -132						; size = 28
$T152417 = -104						; size = 28
$T152416 = -76						; size = 4
_wscCurrLocation$142900 = -72				; size = 28
_wscTargetName$142893 = -44				; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_clientData$ = 12					; size = 4
_wscMsg$ = 16						; size = 4
?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; Message::ReplaceMessageTags
; Line 202
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 203
	push	0
	push	OFFSET $SG142889
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	cmp	eax, -1
	je	$LN3@ReplaceMes
; Line 205
	mov	eax, DWORD PTR _clientData$[ebp]
	cmp	DWORD PTR [eax+284], -1
	jne	SHORT $LN2@ReplaceMes
; Line 207
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152416[ebp], esp
	push	OFFSET $SG142892
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv178[ebp], eax
	mov	ecx, DWORD PTR tv178[ebp]
	mov	DWORD PTR tv168[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 208
	xor	al, al
	jmp	$LN4@ReplaceMes
$LN2@ReplaceMes:
; Line 211
	mov	eax, DWORD PTR _clientData$[ebp]
	mov	ecx, DWORD PTR [eax+284]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscTargetName$142893[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 212
	push	OFFSET $SG142897
	lea	ecx, DWORD PTR $T152417[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	edx, DWORD PTR _wscTargetName$142893[ebp]
	push	edx
	lea	eax, DWORD PTR $T152417[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152418[ebp]
	push	edx
	call	DWORD PTR __imp_?ReplaceStr@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@00@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv131[ebp], eax
	mov	eax, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv172[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv172[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T152418[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T152417[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 213
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscTargetName$142893[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN3@ReplaceMes:
; Line 215
	push	0
	push	OFFSET $SG142899
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	cmp	eax, -1
	je	$LN1@ReplaceMes
; Line 217
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	lea	eax, DWORD PTR _wscCurrLocation$142900[ebp]
	push	eax
	call	?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z ; GetLocation
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 218
	lea	ecx, DWORD PTR _wscCurrLocation$142900[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	lea	ecx, DWORD PTR $T152419[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	push	OFFSET $SG142905
	lea	ecx, DWORD PTR $T152420[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T152419[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152420[ebp]
	push	edx
	mov	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152421[ebp]
	push	ecx
	call	DWORD PTR __imp_?ReplaceStr@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@00@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv159[ebp], eax
	mov	edx, DWORD PTR tv159[ebp]
	mov	DWORD PTR tv177[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv177[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T152421[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T152420[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T152419[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 219
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscCurrLocation$142900[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN1@ReplaceMes:
; Line 221
	mov	al, 1
$LN4@ReplaceMes:
; Line 222
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
	mov	ecx, DWORD PTR $T152416[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _wscTargetName$142893[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T152417[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T152418[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$4:
	lea	ecx, DWORD PTR _wscCurrLocation$142900[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T152419[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T152420[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$7:
	lea	ecx, DWORD PTR $T152421[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; Message::ReplaceMessageTags
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_LMsg
EXTRN	?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC ; SendLocalSystemChat
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv218 = -140						; size = 4
tv225 = -136						; size = 4
tv216 = -132						; size = 4
tv224 = -128						; size = 4
tv214 = -124						; size = 4
tv223 = -120						; size = 4
tv212 = -116						; size = 4
tv222 = -112						; size = 4
$T152442 = -106						; size = 1
$T152441 = -105						; size = 1
$T152440 = -104						; size = 4
$T152439 = -100						; size = 8
$T152438 = -92						; size = 4
$T152437 = -88						; size = 4
$T152436 = -84						; size = 28
_wscMsg$ = -56						; size = 28
__$ArrayPad$ = -28					; size = 4
_iMsgSlot$ = -24					; size = 4
_iter$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_LMsg
; Line 569
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 570
	movzx	eax, BYTE PTR _set_bSetMsg
	test	eax, eax
	jne	SHORT $LN6@UserCmd_LM
; Line 571
	xor	al, al
	jmp	$LN7@UserCmd_LM
$LN6@UserCmd_LM:
; Line 573
	push	1
	push	2
	lea	ecx, DWORD PTR $T152436[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv222[ebp], eax
	mov	edx, DWORD PTR tv222[ebp]
	mov	DWORD PTR tv212[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv212[ebp]
	push	eax
	call	DWORD PTR __imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iMsgSlot$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152436[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 574
	cmp	DWORD PTR _iMsgSlot$[ebp], 0
	jl	SHORT $LN4@UserCmd_LM
	cmp	DWORD PTR _iMsgSlot$[ebp], 9
	jle	SHORT $LN5@UserCmd_LM
$LN4@UserCmd_LM:
; Line 576
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152437[ebp], esp
	push	OFFSET $SG144108
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv223[ebp], eax
	mov	ecx, DWORD PTR tv223[ebp]
	mov	DWORD PTR tv214[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 577
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152438[ebp], esp
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv224[ebp], eax
	mov	ecx, DWORD PTR tv224[ebp]
	mov	DWORD PTR tv216[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 578
	mov	al, 1
	jmp	$LN7@UserCmd_LM
$LN5@UserCmd_LM:
; Line 581
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
; Line 582
	lea	edx, DWORD PTR $T152439[ebp]
	push	edx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@UserCmd_LM
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR _iMsgSlot$[ebp]
	imul	ecx, 28					; 0000001cH
	lea	ecx, DWORD PTR [eax+ecx+4]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN3@UserCmd_LM
$LN2@UserCmd_LM:
; Line 584
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152440[ebp], esp
	push	OFFSET $SG144129
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv225[ebp], eax
	mov	edx, DWORD PTR tv225[ebp]
	mov	DWORD PTR tv218[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 585
	mov	al, 1
	jmp	$LN7@UserCmd_LM
$LN3@UserCmd_LM:
; Line 589
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR _iMsgSlot$[ebp]
	imul	ecx, 28					; 0000001cH
	lea	edx, DWORD PTR [eax+ecx+4]
	push	edx
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 590
	lea	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; Message::ReplaceMessageTags
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@UserCmd_LM
; Line 591
	mov	BYTE PTR $T152441[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152441[ebp]
	jmp	SHORT $LN7@UserCmd_LM
$LN1@UserCmd_LM:
; Line 593
	lea	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendLocalSystemChat
	add	esp, 8
; Line 595
	mov	BYTE PTR $T152442[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152442[ebp]
$LN7@UserCmd_LM:
; Line 596
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR $T152436[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	mov	ecx, DWORD PTR $T152437[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	mov	ecx, DWORD PTR $T152438[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	mov	ecx, DWORD PTR $T152440[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_LMsg
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_GMsg
EXTRN	?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC ; SendGroupChat
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv218 = -140						; size = 4
tv225 = -136						; size = 4
tv216 = -132						; size = 4
tv224 = -128						; size = 4
tv214 = -124						; size = 4
tv223 = -120						; size = 4
tv212 = -116						; size = 4
tv222 = -112						; size = 4
$T152460 = -106						; size = 1
$T152459 = -105						; size = 1
$T152458 = -104						; size = 4
$T152457 = -100						; size = 8
$T152456 = -92						; size = 4
$T152455 = -88						; size = 4
$T152454 = -84						; size = 28
_wscMsg$ = -56						; size = 28
__$ArrayPad$ = -28					; size = 4
_iMsgSlot$ = -24					; size = 4
_iter$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_GMsg
; Line 600
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 128				; 00000080H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 601
	movzx	eax, BYTE PTR _set_bSetMsg
	test	eax, eax
	jne	SHORT $LN6@UserCmd_GM
; Line 602
	xor	al, al
	jmp	$LN7@UserCmd_GM
$LN6@UserCmd_GM:
; Line 604
	push	1
	push	2
	lea	ecx, DWORD PTR $T152454[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv222[ebp], eax
	mov	edx, DWORD PTR tv222[ebp]
	mov	DWORD PTR tv212[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv212[ebp]
	push	eax
	call	DWORD PTR __imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iMsgSlot$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152454[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 605
	cmp	DWORD PTR _iMsgSlot$[ebp], 0
	jl	SHORT $LN4@UserCmd_GM
	cmp	DWORD PTR _iMsgSlot$[ebp], 9
	jle	SHORT $LN5@UserCmd_GM
$LN4@UserCmd_GM:
; Line 607
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152455[ebp], esp
	push	OFFSET $SG144146
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv223[ebp], eax
	mov	ecx, DWORD PTR tv223[ebp]
	mov	DWORD PTR tv214[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 608
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152456[ebp], esp
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv224[ebp], eax
	mov	ecx, DWORD PTR tv224[ebp]
	mov	DWORD PTR tv216[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 609
	mov	al, 1
	jmp	$LN7@UserCmd_GM
$LN5@UserCmd_GM:
; Line 612
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
; Line 613
	lea	edx, DWORD PTR $T152457[ebp]
	push	edx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@UserCmd_GM
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR _iMsgSlot$[ebp]
	imul	ecx, 28					; 0000001cH
	lea	ecx, DWORD PTR [eax+ecx+4]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN3@UserCmd_GM
$LN2@UserCmd_GM:
; Line 615
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152458[ebp], esp
	push	OFFSET $SG144167
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv225[ebp], eax
	mov	edx, DWORD PTR tv225[ebp]
	mov	DWORD PTR tv218[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 616
	mov	al, 1
	jmp	$LN7@UserCmd_GM
$LN3@UserCmd_GM:
; Line 620
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR _iMsgSlot$[ebp]
	imul	ecx, 28					; 0000001cH
	lea	edx, DWORD PTR [eax+ecx+4]
	push	edx
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 621
	lea	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; Message::ReplaceMessageTags
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@UserCmd_GM
; Line 622
	mov	BYTE PTR $T152459[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152459[ebp]
	jmp	SHORT $LN7@UserCmd_GM
$LN1@UserCmd_GM:
; Line 624
	lea	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendGroupChat
	add	esp, 8
; Line 625
	mov	BYTE PTR $T152460[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152460[ebp]
$LN7@UserCmd_GM:
; Line 626
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR $T152454[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	mov	ecx, DWORD PTR $T152455[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	mov	ecx, DWORD PTR $T152456[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	mov	ecx, DWORD PTR $T152458[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_GMsg
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_ReplyToLastPMSender
EXTRN	?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC ; SendPrivateChat
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv322 = -200						; size = 4
tv336 = -196						; size = 4
tv319 = -192						; size = 4
tv334 = -188						; size = 4
tv317 = -184						; size = 4
tv332 = -180						; size = 4
tv313 = -176						; size = 4
tv330 = -172						; size = 4
tv310 = -168						; size = 4
tv328 = -164						; size = 4
tv308 = -160						; size = 4
tv326 = -156						; size = 4
tv306 = -152						; size = 4
tv138 = -148						; size = 4
tv303 = -144						; size = 4
tv325 = -140						; size = 4
$T152486 = -134						; size = 1
$T152485 = -133						; size = 1
$T152484 = -132						; size = 4
$T152483 = -125						; size = 1
$T152482 = -124						; size = 4
$T152481 = -120						; size = 4
$T152480 = -114						; size = 1
$T152479 = -113						; size = 1
$T152478 = -112						; size = 4
$T152477 = -105						; size = 1
$T152476 = -104						; size = 4
$T152475 = -100						; size = 4
$T152474 = -96						; size = 28
$T152473 = -68						; size = 4
$T152472 = -64						; size = 8
_iMsgSlot$144200 = -56					; size = 4
_wscMsg$ = -52						; size = 28
__$ArrayPad$ = -24					; size = 4
_iter$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_ReplyToLastPMSender
; Line 630
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 188				; 000000bcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 631
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
; Line 632
	lea	edx, DWORD PTR $T152472[ebp]
	push	edx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@UserCmd_Re
; Line 635
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152473[ebp], esp
	push	OFFSET $SG144196
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv325[ebp], eax
	mov	ecx, DWORD PTR tv325[ebp]
	mov	DWORD PTR tv303[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 636
	mov	al, 1
	jmp	$LN10@UserCmd_Re
$LN9@UserCmd_Re:
; Line 639
	push	0
	push	32					; 00000020H
	mov	eax, DWORD PTR _wscParam$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	push	ecx
	call	?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z ; GetParamToEnd
	add	esp, 16					; 00000010H
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 642
	movzx	edx, BYTE PTR _set_bSetMsg
	test	edx, edx
	je	$LN8@UserCmd_Re
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	cmp	eax, 3
	jne	$LN8@UserCmd_Re
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	$LN8@UserCmd_Re
; Line 644
	push	1
	push	2
	lea	eax, DWORD PTR $T152474[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv138[ebp], eax
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv306[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv306[ebp]
	push	edx
	call	DWORD PTR __imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iMsgSlot$144200[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T152474[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 645
	cmp	DWORD PTR _iMsgSlot$144200[ebp], 0
	jl	SHORT $LN6@UserCmd_Re
	cmp	DWORD PTR _iMsgSlot$144200[ebp], 9
	jle	$LN7@UserCmd_Re
$LN6@UserCmd_Re:
; Line 647
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152475[ebp], esp
	push	OFFSET $SG144205
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv326[ebp], eax
	mov	eax, DWORD PTR tv326[ebp]
	mov	DWORD PTR tv308[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 648
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152476[ebp], esp
	mov	edx, DWORD PTR _usage$[ebp]
	push	edx
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv328[ebp], eax
	mov	eax, DWORD PTR tv328[ebp]
	mov	DWORD PTR tv310[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 649
	mov	BYTE PTR $T152477[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152477[ebp]
	jmp	$LN10@UserCmd_Re
$LN7@UserCmd_Re:
; Line 651
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	edx, DWORD PTR _iMsgSlot$144200[ebp]
	imul	edx, 28					; 0000001cH
	lea	ecx, DWORD PTR [eax+edx+4]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN5@UserCmd_Re
; Line 653
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152478[ebp], esp
	push	OFFSET $SG144210
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv330[ebp], eax
	mov	eax, DWORD PTR tv330[ebp]
	mov	DWORD PTR tv313[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 654
	mov	BYTE PTR $T152479[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152479[ebp]
	jmp	$LN10@UserCmd_Re
$LN5@UserCmd_Re:
; Line 657
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	edx, DWORD PTR _iMsgSlot$144200[ebp]
	imul	edx, 28					; 0000001cH
	lea	eax, DWORD PTR [eax+edx+4]
	push	eax
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
; Line 658
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	add	eax, 4
	push	eax
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; Message::ReplaceMessageTags
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@UserCmd_Re
; Line 659
	mov	BYTE PTR $T152480[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152480[ebp]
	jmp	$LN10@UserCmd_Re
$LN4@UserCmd_Re:
; Line 660
	jmp	$LN3@UserCmd_Re
$LN8@UserCmd_Re:
; Line 661
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	$LN3@UserCmd_Re
; Line 663
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152481[ebp], esp
	push	OFFSET $SG144217
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv332[ebp], eax
	mov	ecx, DWORD PTR tv332[ebp]
	mov	DWORD PTR tv317[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 664
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152482[ebp], esp
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv334[ebp], eax
	mov	ecx, DWORD PTR tv334[ebp]
	mov	DWORD PTR tv319[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 665
	mov	BYTE PTR $T152483[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152483[ebp]
	jmp	$LN10@UserCmd_Re
$LN3@UserCmd_Re:
; Line 668
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	cmp	DWORD PTR [eax+284], -1
	jne	SHORT $LN1@UserCmd_Re
; Line 670
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152484[ebp], esp
	push	OFFSET $SG144222
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv336[ebp], eax
	mov	eax, DWORD PTR tv336[ebp]
	mov	DWORD PTR tv322[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 671
	mov	BYTE PTR $T152485[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152485[ebp]
	jmp	SHORT $LN10@UserCmd_Re
$LN1@UserCmd_Re:
; Line 674
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	add	eax, 284				; 0000011cH
	push	eax
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	mov	edx, DWORD PTR _iClientID$[ebp]
	mov	DWORD PTR [eax+280], edx
; Line 675
	lea	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR [eax+284]
	push	ecx
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendPrivateChat
	add	esp, 12					; 0000000cH
; Line 676
	mov	BYTE PTR $T152486[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152486[ebp]
$LN10@UserCmd_Re:
; Line 677
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	mov	ecx, DWORD PTR $T152473[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	lea	ecx, DWORD PTR $T152474[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	mov	ecx, DWORD PTR $T152475[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	mov	ecx, DWORD PTR $T152476[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5:
	mov	ecx, DWORD PTR $T152478[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6:
	mov	ecx, DWORD PTR $T152481[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7:
	mov	ecx, DWORD PTR $T152482[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8:
	mov	ecx, DWORD PTR $T152484[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-192]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_ReplyToLastPMSender
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_SendToLastTarget
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv322 = -200						; size = 4
tv336 = -196						; size = 4
tv319 = -192						; size = 4
tv334 = -188						; size = 4
tv317 = -184						; size = 4
tv332 = -180						; size = 4
tv313 = -176						; size = 4
tv330 = -172						; size = 4
tv310 = -168						; size = 4
tv328 = -164						; size = 4
tv308 = -160						; size = 4
tv326 = -156						; size = 4
tv306 = -152						; size = 4
tv138 = -148						; size = 4
tv303 = -144						; size = 4
tv325 = -140						; size = 4
$T152516 = -134						; size = 1
$T152515 = -133						; size = 1
$T152514 = -132						; size = 4
$T152513 = -125						; size = 1
$T152512 = -124						; size = 4
$T152511 = -120						; size = 4
$T152510 = -114						; size = 1
$T152509 = -113						; size = 1
$T152508 = -112						; size = 4
$T152507 = -105						; size = 1
$T152506 = -104						; size = 4
$T152505 = -100						; size = 4
$T152504 = -96						; size = 28
$T152503 = -68						; size = 4
$T152502 = -64						; size = 8
_iMsgSlot$144253 = -56					; size = 4
_wscMsg$ = -52						; size = 28
__$ArrayPad$ = -24					; size = 4
_iter$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_SendToLastTarget
; Line 681
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 188				; 000000bcH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 682
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
; Line 683
	lea	edx, DWORD PTR $T152502[ebp]
	push	edx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@UserCmd_Se@2
; Line 686
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152503[ebp], esp
	push	OFFSET $SG144249
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv325[ebp], eax
	mov	ecx, DWORD PTR tv325[ebp]
	mov	DWORD PTR tv303[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 687
	mov	al, 1
	jmp	$LN10@UserCmd_Se@2
$LN9@UserCmd_Se@2:
; Line 690
	push	0
	push	32					; 00000020H
	mov	eax, DWORD PTR _wscParam$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	push	ecx
	call	?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z ; GetParamToEnd
	add	esp, 16					; 00000010H
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 693
	movzx	edx, BYTE PTR _set_bSetMsg
	test	edx, edx
	je	$LN8@UserCmd_Se@2
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	cmp	eax, 3
	jne	$LN8@UserCmd_Se@2
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	$LN8@UserCmd_Se@2
; Line 695
	push	1
	push	2
	lea	eax, DWORD PTR $T152504[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv138[ebp], eax
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv306[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv306[ebp]
	push	edx
	call	DWORD PTR __imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iMsgSlot$144253[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T152504[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 696
	cmp	DWORD PTR _iMsgSlot$144253[ebp], 0
	jl	SHORT $LN6@UserCmd_Se@2
	cmp	DWORD PTR _iMsgSlot$144253[ebp], 9
	jle	$LN7@UserCmd_Se@2
$LN6@UserCmd_Se@2:
; Line 698
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152505[ebp], esp
	push	OFFSET $SG144258
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv326[ebp], eax
	mov	eax, DWORD PTR tv326[ebp]
	mov	DWORD PTR tv308[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 699
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152506[ebp], esp
	mov	edx, DWORD PTR _usage$[ebp]
	push	edx
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv328[ebp], eax
	mov	eax, DWORD PTR tv328[ebp]
	mov	DWORD PTR tv310[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 700
	mov	BYTE PTR $T152507[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152507[ebp]
	jmp	$LN10@UserCmd_Se@2
$LN7@UserCmd_Se@2:
; Line 702
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	edx, DWORD PTR _iMsgSlot$144253[ebp]
	imul	edx, 28					; 0000001cH
	lea	ecx, DWORD PTR [eax+edx+4]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN5@UserCmd_Se@2
; Line 704
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152508[ebp], esp
	push	OFFSET $SG144263
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv330[ebp], eax
	mov	eax, DWORD PTR tv330[ebp]
	mov	DWORD PTR tv313[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 705
	mov	BYTE PTR $T152509[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152509[ebp]
	jmp	$LN10@UserCmd_Se@2
$LN5@UserCmd_Se@2:
; Line 708
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	edx, DWORD PTR _iMsgSlot$144253[ebp]
	imul	edx, 28					; 0000001cH
	lea	eax, DWORD PTR [eax+edx+4]
	push	eax
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
; Line 709
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	add	eax, 4
	push	eax
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	?ReplaceMessageTags@Message@@YA_NIAAVINFO@1@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; Message::ReplaceMessageTags
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@UserCmd_Se@2
; Line 710
	mov	BYTE PTR $T152510[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152510[ebp]
	jmp	$LN10@UserCmd_Se@2
$LN4@UserCmd_Se@2:
; Line 711
	jmp	$LN3@UserCmd_Se@2
$LN8@UserCmd_Se@2:
; Line 712
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	$LN3@UserCmd_Se@2
; Line 714
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152511[ebp], esp
	push	OFFSET $SG144270
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv332[ebp], eax
	mov	ecx, DWORD PTR tv332[ebp]
	mov	DWORD PTR tv317[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 715
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152512[ebp], esp
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv334[ebp], eax
	mov	ecx, DWORD PTR tv334[ebp]
	mov	DWORD PTR tv319[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 716
	mov	BYTE PTR $T152513[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152513[ebp]
	jmp	$LN10@UserCmd_Se@2
$LN3@UserCmd_Se@2:
; Line 719
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	cmp	DWORD PTR [eax+288], -1
	jne	SHORT $LN1@UserCmd_Se@2
; Line 721
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152514[ebp], esp
	push	OFFSET $SG144275
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv336[ebp], eax
	mov	eax, DWORD PTR tv336[ebp]
	mov	DWORD PTR tv322[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 722
	mov	BYTE PTR $T152515[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152515[ebp]
	jmp	SHORT $LN10@UserCmd_Se@2
$LN1@UserCmd_Se@2:
; Line 725
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	add	eax, 288				; 00000120H
	push	eax
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	mov	edx, DWORD PTR _iClientID$[ebp]
	mov	DWORD PTR [eax+280], edx
; Line 726
	lea	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR [eax+288]
	push	ecx
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendPrivateChat
	add	esp, 12					; 0000000cH
; Line 727
	mov	BYTE PTR $T152516[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152516[ebp]
$LN10@UserCmd_Se@2:
; Line 728
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	mov	ecx, DWORD PTR $T152503[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	lea	ecx, DWORD PTR $T152504[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	mov	ecx, DWORD PTR $T152505[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	mov	ecx, DWORD PTR $T152506[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5:
	mov	ecx, DWORD PTR $T152508[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6:
	mov	ecx, DWORD PTR $T152511[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7:
	mov	ecx, DWORD PTR $T152512[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8:
	mov	ecx, DWORD PTR $T152514[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-192]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_SendToLastTarget
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_ShowLastPMSender
EXTRN	__imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z:PROC
EXTRN	__imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z:PROC
EXTRN	__imp_?HkIsValidClientID@@YA_NI@Z:PROC
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	0eH
	DD	FLAT:__unwindtable$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	05H
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
	DD	06H
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5
	DD	07H
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
	DD	0aH
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7
	DD	0bH
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8
	DD	0cH
	DD	FLAT:__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$9
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv265 = -332						; size = 4
tv273 = -328						; size = 4
tv263 = -324						; size = 4
tv272 = -320						; size = 4
tv261 = -316						; size = 4
tv171 = -312						; size = 4
tv258 = -308						; size = 4
tv271 = -304						; size = 4
tv256 = -300						; size = 4
tv138 = -296						; size = 4
tv253 = -292						; size = 4
tv270 = -288						; size = 4
tv251 = -284						; size = 4
tv269 = -280						; size = 4
tv249 = -276						; size = 4
tv268 = -272						; size = 4
$T152541 = -265						; size = 1
$T152540 = -264						; size = 28
$T152539 = -236						; size = 28
$T152538 = -208						; size = 4
$T152537 = -204						; size = 28
$T152536 = -176						; size = 28
$T152535 = -148						; size = 28
$T152534 = -120						; size = 28
$T152533 = -92						; size = 4
$T152532 = -88						; size = 8
_wscSenderCharname$ = -80				; size = 28
_wscTargetCharname$ = -52				; size = 28
__$ArrayPad$ = -24					; size = 4
_iter$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_ShowLastPMSender
; Line 732
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 733
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
; Line 734
	lea	edx, DWORD PTR $T152532[ebp]
	push	edx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@UserCmd_Sh@2
; Line 737
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152533[ebp], esp
	push	OFFSET $SG144302
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv268[ebp], eax
	mov	ecx, DWORD PTR tv268[ebp]
	mov	DWORD PTR tv249[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 738
	mov	al, 1
	jmp	$LN4@UserCmd_Sh@2
$LN3@UserCmd_Sh@2:
; Line 741
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	eax, DWORD PTR [eax+284]
	push	eax
	lea	ecx, DWORD PTR $T152534[ebp]
	push	ecx
	call	DWORD PTR __imp_?itos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	add	esp, 8
	mov	DWORD PTR tv269[ebp], eax
	mov	edx, DWORD PTR tv269[ebp]
	mov	DWORD PTR tv251[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv251[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152535[ebp]
	push	ecx
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv270[ebp], eax
	mov	edx, DWORD PTR tv270[ebp]
	mov	DWORD PTR tv253[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv253[ebp]
	push	eax
	push	OFFSET $SG144307
	lea	ecx, DWORD PTR _wscSenderCharname$[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T152535[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T152534[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 742
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	cmp	DWORD PTR [eax+284], -1
	je	SHORT $LN2@UserCmd_Sh@2
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	edx, DWORD PTR [eax+284]
	push	edx
	call	DWORD PTR __imp_?HkIsValidClientID@@YA_NI@Z
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@UserCmd_Sh@2
; Line 743
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR [eax+284]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscSenderCharname$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z
$LN2@UserCmd_Sh@2:
; Line 745
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	edx, DWORD PTR [eax+288]
	push	edx
	lea	eax, DWORD PTR $T152536[ebp]
	push	eax
	call	DWORD PTR __imp_?itos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	add	esp, 8
	mov	DWORD PTR tv138[ebp], eax
	mov	ecx, DWORD PTR tv138[ebp]
	mov	DWORD PTR tv256[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv256[ebp]
	push	edx
	lea	eax, DWORD PTR $T152537[ebp]
	push	eax
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv271[ebp], eax
	mov	ecx, DWORD PTR tv271[ebp]
	mov	DWORD PTR tv258[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv258[ebp]
	push	edx
	push	OFFSET $SG144314
	lea	eax, DWORD PTR _wscTargetCharname$[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T152537[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T152536[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 746
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	cmp	DWORD PTR [eax+288], -1
	je	SHORT $LN1@UserCmd_Sh@2
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	ecx, DWORD PTR [eax+288]
	push	ecx
	call	DWORD PTR __imp_?HkIsValidClientID@@YA_NI@Z
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@UserCmd_Sh@2
; Line 747
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	eax, DWORD PTR [eax+288]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscTargetCharname$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z
$LN1@UserCmd_Sh@2:
; Line 749
	sub	esp, 28					; 0000001cH
	mov	esi, esp
	mov	DWORD PTR $T152538[ebp], esp
	lea	ecx, DWORD PTR _wscTargetCharname$[ebp]
	push	ecx
	push	OFFSET $SG144321
	lea	edx, DWORD PTR _wscSenderCharname$[ebp]
	push	edx
	push	OFFSET $SG144322
	lea	eax, DWORD PTR $T152539[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv171[ebp], eax
	mov	ecx, DWORD PTR tv171[ebp]
	mov	DWORD PTR tv261[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv261[ebp]
	push	edx
	lea	eax, DWORD PTR $T152540[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv272[ebp], eax
	mov	ecx, DWORD PTR tv272[ebp]
	mov	DWORD PTR tv263[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv263[ebp]
	push	edx
	push	esi
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv273[ebp], eax
	mov	eax, DWORD PTR tv273[ebp]
	mov	DWORD PTR tv265[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T152540[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T152539[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 750
	mov	BYTE PTR $T152541[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _wscTargetCharname$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscSenderCharname$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152541[ebp]
$LN4@UserCmd_Sh@2:
; Line 751
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	mov	ecx, DWORD PTR $T152533[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	lea	ecx, DWORD PTR $T152534[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	lea	ecx, DWORD PTR $T152535[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	lea	ecx, DWORD PTR _wscSenderCharname$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	lea	ecx, DWORD PTR $T152536[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5:
	lea	ecx, DWORD PTR $T152537[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6:
	lea	ecx, DWORD PTR _wscTargetCharname$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7:
	lea	ecx, DWORD PTR $T152539[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8:
	lea	ecx, DWORD PTR $T152540[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$9:
	mov	ecx, DWORD PTR $T152538[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-328]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_ShowLastPMSender
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_PrivateMsg
EXTRN	?MailSend@Mail@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@0@Z:PROC ; Mail::MailSend
EXTRN	__imp_?HkGetClientIdFromCharname@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv231 = -244						; size = 4
tv240 = -240						; size = 4
tv229 = -236						; size = 4
tv239 = -232						; size = 4
tv227 = -228						; size = 4
tv238 = -224						; size = 4
tv222 = -220						; size = 4
tv236 = -216						; size = 4
tv217 = -212						; size = 4
tv65 = -208						; size = 4
tv215 = -204						; size = 4
tv77 = -200						; size = 4
$T152566 = -193						; size = 1
$T152565 = -192						; size = 4
$T152564 = -188						; size = 28
$T152563 = -160						; size = 28
$T152562 = -129						; size = 1
$T152561 = -128						; size = 4
$T152560 = -121						; size = 1
$T152559 = -120						; size = 4
$T152558 = -116						; size = 4
_wscCharname$ = -112					; size = 28
_wscMsg$ = -84						; size = 4
_wscTargetCharname$ = -80				; size = 4
_$S1$ = -76						; size = 28
_iToClientID$ = -48					; size = 4
_$S2$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_PrivateMsg
; Line 756
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 757
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 758
	push	0
	push	32					; 00000020H
	mov	ecx, DWORD PTR _wscParam$[ebp]
	push	ecx
	lea	edx, DWORD PTR _$S1$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetParam@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR _$S1$[ebp]
	mov	DWORD PTR _wscTargetCharname$[ebp], eax
; Line 759
	push	1
	push	32					; 00000020H
	mov	ecx, DWORD PTR _wscParam$[ebp]
	push	ecx
	lea	edx, DWORD PTR _$S2$[ebp]
	push	edx
	call	?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z ; GetParamToEnd
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR _$S2$[ebp]
	mov	DWORD PTR _wscMsg$[ebp], eax
; Line 761
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	je	SHORT $LN4@UserCmd_Pr
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	$LN5@UserCmd_Pr
$LN4@UserCmd_Pr:
; Line 763
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152558[ebp], esp
	push	OFFSET $SG144341
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv215[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 764
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152559[ebp], esp
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv217[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 765
	mov	BYTE PTR $T152560[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _$S2$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152560[ebp]
	jmp	$LN6@UserCmd_Pr
$LN5@UserCmd_Pr:
; Line 768
	mov	eax, DWORD PTR _wscTargetCharname$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetAccountByCharname@@YAPAVCAccount@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@UserCmd_Pr
; Line 770
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152561[ebp], esp
	push	OFFSET $SG144346
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv236[ebp], eax
	mov	ecx, DWORD PTR tv236[ebp]
	mov	DWORD PTR tv222[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 771
	mov	BYTE PTR $T152562[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _$S2$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152562[ebp]
	jmp	$LN6@UserCmd_Pr
$LN3@UserCmd_Pr:
; Line 774
	mov	eax, DWORD PTR _wscTargetCharname$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetClientIdFromCharname@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iToClientID$[ebp], eax
; Line 775
	cmp	DWORD PTR _iToClientID$[ebp], -1
	jne	$LN2@UserCmd_Pr
; Line 777
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	push	ecx
	push	OFFSET $SG144352
	lea	edx, DWORD PTR _wscCharname$[ebp]
	push	edx
	lea	eax, DWORD PTR $T152563[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv238[ebp], eax
	mov	ecx, DWORD PTR tv238[ebp]
	mov	DWORD PTR tv227[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv227[ebp]
	push	edx
	lea	eax, DWORD PTR $T152564[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv239[ebp], eax
	mov	ecx, DWORD PTR tv239[ebp]
	mov	DWORD PTR tv229[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv229[ebp]
	push	edx
	push	OFFSET _MSG_LOG
	mov	eax, DWORD PTR _wscTargetCharname$[ebp]
	push	eax
	call	?MailSend@Mail@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@0@Z ; Mail::MailSend
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T152564[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T152563[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 778
	push	OFFSET _MSG_LOG
	mov	ecx, DWORD PTR _wscTargetCharname$[ebp]
	push	ecx
	call	?MailCheckLog@Mail@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; Mail::MailCheckLog
	add	esp, 8
; Line 779
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152565[ebp], esp
	push	OFFSET $SG144354
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv240[ebp], eax
	mov	edx, DWORD PTR tv240[ebp]
	mov	DWORD PTR tv231[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 781
	jmp	SHORT $LN1@UserCmd_Pr
$LN2@UserCmd_Pr:
; Line 783
	lea	ecx, DWORD PTR _iToClientID$[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	mov	edx, DWORD PTR _iClientID$[ebp]
	mov	DWORD PTR [eax+280], edx
; Line 784
	mov	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iToClientID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendPrivateChat
	add	esp, 12					; 0000000cH
$LN1@UserCmd_Pr:
; Line 787
	mov	BYTE PTR $T152566[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _$S2$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S1$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152566[ebp]
$LN6@UserCmd_Pr:
; Line 788
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	lea	ecx, DWORD PTR _$S1$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	lea	ecx, DWORD PTR _$S2$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	mov	ecx, DWORD PTR $T152558[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	mov	ecx, DWORD PTR $T152559[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5:
	mov	ecx, DWORD PTR $T152561[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6:
	lea	ecx, DWORD PTR $T152563[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7:
	lea	ecx, DWORD PTR $T152564[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8:
	mov	ecx, DWORD PTR $T152565[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_PrivateMsg
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_PrivateMsgID
EXTRN	__imp_?HkIsInCharSelectMenu@@YA_NI@Z:PROC
xdata$x	SEGMENT
__unwindtable$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
__ehfuncinfo$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv151 = -128						; size = 4
tv77 = -124						; size = 4
$T152584 = -118						; size = 1
$T152583 = -117						; size = 1
$T152582 = -116						; size = 4
_$S4$ = -112						; size = 28
_wscCharname$ = -84					; size = 28
_wscMsg$ = -56						; size = 4
_wscClientID$ = -52					; size = 4
_$S3$ = -48						; size = 28
__$ArrayPad$ = -20					; size = 4
_iToClientID$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_PrivateMsgID
; Line 792
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 116				; 00000074H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 793
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 794
	push	0
	push	32					; 00000020H
	mov	ecx, DWORD PTR _wscParam$[ebp]
	push	ecx
	lea	edx, DWORD PTR _$S3$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetParam@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR _$S3$[ebp]
	mov	DWORD PTR _wscClientID$[ebp], eax
; Line 795
	push	1
	push	32					; 00000020H
	mov	ecx, DWORD PTR _wscParam$[ebp]
	push	ecx
	lea	edx, DWORD PTR _$S4$[ebp]
	push	edx
	call	?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z ; GetParamToEnd
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR _$S4$[ebp]
	mov	DWORD PTR _wscMsg$[ebp], eax
; Line 797
	mov	ecx, DWORD PTR _wscClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iToClientID$[ebp], eax
; Line 798
	mov	edx, DWORD PTR _iToClientID$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkIsValidClientID@@YA_NI@Z
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@UserCmd_Pr@2
	mov	ecx, DWORD PTR _iToClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkIsInCharSelectMenu@@YA_NI@Z
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@UserCmd_Pr@2
$LN1@UserCmd_Pr@2:
; Line 800
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152582[ebp], esp
	push	OFFSET $SG144375
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv77[ebp], eax
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv151[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 801
	mov	BYTE PTR $T152583[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _$S4$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S3$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152583[ebp]
	jmp	SHORT $LN3@UserCmd_Pr@2
$LN2@UserCmd_Pr@2:
; Line 804
	lea	edx, DWORD PTR _iToClientID$[ebp]
	push	edx
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	mov	ecx, DWORD PTR _iClientID$[ebp]
	mov	DWORD PTR [eax+280], ecx
; Line 805
	mov	edx, DWORD PTR _wscMsg$[ebp]
	push	edx
	mov	eax, DWORD PTR _iToClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendPrivateChat
	add	esp, 12					; 0000000cH
; Line 806
	mov	BYTE PTR $T152584[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _$S4$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S3$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152584[ebp]
$LN3@UserCmd_Pr@2:
; Line 807
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	lea	ecx, DWORD PTR _$S3$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	lea	ecx, DWORD PTR _$S4$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	mov	ecx, DWORD PTR $T152582[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_PrivateMsgID
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_FactionMsg
EXTRN	?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z:PROC ; FormatSendChat
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8
	DD	05H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$9
	DD	05H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$10
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv255 = -344						; size = 4
tv213 = -340						; size = 4
tv251 = -336						; size = 4
tv261 = -332						; size = 4
tv249 = -328						; size = 4
tv151 = -324						; size = 4
tv243 = -320						; size = 4
tv65 = -316						; size = 4
tv241 = -312						; size = 4
tv77 = -308						; size = 4
$T152606 = -301						; size = 1
$T152605 = -300						; size = 4
$T152604 = -296						; size = 28
$T152603 = -268						; size = 28
$T152602 = -240						; size = 28
$T152601 = -212						; size = 28
$T152600 = -181						; size = 1
$T152599 = -180						; size = 8
$T152598 = -172						; size = 8
$T152597 = -161						; size = 1
$T152596 = -160						; size = 4
$T152595 = -156						; size = 4
_iter$144410 = -152					; size = 8
_wscCharnamePrefix$ = -144				; size = 4
_$S6$ = -140						; size = 28
_wscMsg$ = -112						; size = 4
_bMsgSent$ = -105					; size = 1
_$S5$ = -104						; size = 28
_bSenderReceived$ = -73					; size = 1
_lst$ = -72						; size = 28
_wscSender$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_FactionMsg
; Line 811
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 332				; 0000014cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 812
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscSender$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 813
	push	0
	push	32					; 00000020H
	mov	ecx, DWORD PTR _wscParam$[ebp]
	push	ecx
	lea	edx, DWORD PTR _$S5$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetParam@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR _$S5$[ebp]
	mov	DWORD PTR _wscCharnamePrefix$[ebp], eax
; Line 814
	push	1
	push	32					; 00000020H
	mov	ecx, DWORD PTR _wscParam$[ebp]
	push	ecx
	lea	edx, DWORD PTR _$S6$[ebp]
	push	edx
	call	?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z ; GetParamToEnd
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR _$S6$[ebp]
	mov	DWORD PTR _wscMsg$[ebp], eax
; Line 816
	mov	ecx, DWORD PTR _wscCharnamePrefix$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	cmp	eax, 3
	jb	SHORT $LN8@UserCmd_Fa
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	$LN9@UserCmd_Fa
$LN8@UserCmd_Fa:
; Line 818
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152595[ebp], esp
	push	OFFSET $SG144395
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv241[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 819
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152596[ebp], esp
	mov	eax, DWORD PTR _usage$[ebp]
	push	eax
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv243[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 820
	mov	BYTE PTR $T152597[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _$S6$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S5$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscSender$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152597[ebp]
	jmp	$LN10@UserCmd_Fa
$LN9@UserCmd_Fa:
; Line 823
	mov	BYTE PTR _bSenderReceived$[ebp], 0
; Line 824
	mov	BYTE PTR _bMsgSent$[ebp], 0
; Line 825
	lea	eax, DWORD PTR _lst$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetPlayers@@YA?AV?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@XZ
	add	esp, 4
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 826
	lea	ecx, DWORD PTR _iter$144410[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lst$[ebp]
	call	?begin@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::begin
	jmp	SHORT $LN7@UserCmd_Fa
$LN6@UserCmd_Fa:
	push	0
	lea	edx, DWORD PTR $T152598[ebp]
	push	edx
	lea	ecx, DWORD PTR _iter$144410[ebp]
	call	??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV012@H@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator++
$LN7@UserCmd_Fa:
	lea	eax, DWORD PTR $T152599[ebp]
	push	eax
	lea	ecx, DWORD PTR _lst$[ebp]
	call	?end@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$144410[ebp]
	call	??9?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@UserCmd_Fa
; Line 828
	push	0
	mov	edx, DWORD PTR _wscCharnamePrefix$[ebp]
	push	edx
	lea	eax, DWORD PTR $T152602[ebp]
	push	eax
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv151[ebp], eax
	mov	ecx, DWORD PTR tv151[ebp]
	mov	DWORD PTR tv249[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv249[ebp]
	push	edx
	lea	ecx, DWORD PTR _iter$144410[ebp]
	call	??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator->
	add	eax, 4
	push	eax
	lea	eax, DWORD PTR $T152601[ebp]
	push	eax
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv261[ebp], eax
	mov	ecx, DWORD PTR tv261[ebp]
	mov	DWORD PTR tv251[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv251[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIABV12@I@Z
	mov	edx, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx]
	sete	cl
	mov	BYTE PTR $T152600[ebp], cl
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T152601[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T152602[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T152600[ebp]
	test	edx, edx
	je	SHORT $LN4@UserCmd_Fa
; Line 829
	jmp	$LN6@UserCmd_Fa
$LN4@UserCmd_Fa:
; Line 831
	lea	ecx, DWORD PTR _iter$144410[ebp]
	call	??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator->
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _iClientID$[ebp]
	jne	SHORT $LN3@UserCmd_Fa
; Line 832
	mov	BYTE PTR _bSenderReceived$[ebp], 1
$LN3@UserCmd_Fa:
; Line 834
	push	OFFSET $SG144423
	lea	ecx, DWORD PTR $T152603[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T152603[ebp]
	push	ecx
	mov	edx, DWORD PTR _wscMsg$[ebp]
	push	edx
	lea	eax, DWORD PTR _wscSender$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$144410[ebp]
	call	??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator->
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z ; FormatSendChat
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T152603[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 835
	mov	BYTE PTR _bMsgSent$[ebp], 1
; Line 836
	jmp	$LN6@UserCmd_Fa
$LN5@UserCmd_Fa:
; Line 837
	movzx	edx, BYTE PTR _bSenderReceived$[ebp]
	test	edx, edx
	jne	SHORT $LN2@UserCmd_Fa
; Line 838
	push	OFFSET $SG144426
	lea	ecx, DWORD PTR $T152604[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	eax, DWORD PTR $T152604[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscSender$[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z ; FormatSendChat
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T152604[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN2@UserCmd_Fa:
; Line 840
	movzx	ecx, BYTE PTR _bMsgSent$[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@UserCmd_Fa
; Line 841
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152605[ebp], esp
	push	OFFSET $SG144429
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv213[ebp], eax
	mov	edx, DWORD PTR tv213[ebp]
	mov	DWORD PTR tv255[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
$LN1@UserCmd_Fa:
; Line 842
	mov	BYTE PTR $T152606[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _lst$[ebp]
	call	??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _$S6$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _$S5$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscSender$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152606[ebp]
$LN10@UserCmd_Fa:
; Line 843
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR _wscSender$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	lea	ecx, DWORD PTR _$S5$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	lea	ecx, DWORD PTR _$S6$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	mov	ecx, DWORD PTR $T152595[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	mov	ecx, DWORD PTR $T152596[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5:
	lea	ecx, DWORD PTR _lst$[ebp]
	jmp	??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6:
	lea	ecx, DWORD PTR $T152602[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7:
	lea	ecx, DWORD PTR $T152601[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8:
	lea	ecx, DWORD PTR $T152603[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$9:
	lea	ecx, DWORD PTR $T152604[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$10:
	mov	ecx, DWORD PTR $T152605[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_FactionMsg
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_FactionInvite
EXTRN	__imp_?SubmitChat@IServerImpl@@UAEXUCHAT_ID@@KPBX0H@Z:PROC
EXTRN	__imp__Server:BYTE
EXTRN	__imp_?HkErrGetText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@W4HK_ERROR@@@Z:PROC
EXTRN	?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z:PROC ; HkFMsgEncodeMsg
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8
	DD	03H
	DD	FLAT:__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$9
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv262 = -1344						; size = 4
tv271 = -1340						; size = 4
tv257 = -1336						; size = 4
tv269 = -1332						; size = 4
tv255 = -1328						; size = 4
tv184 = -1324						; size = 4
tv252 = -1320						; size = 4
tv268 = -1316						; size = 4
tv250 = -1312						; size = 4
tv135 = -1308						; size = 4
tv246 = -1304						; size = 4
tv266 = -1300						; size = 4
tv244 = -1296						; size = 4
tv64 = -1292						; size = 4
$T152636 = -1285					; size = 1
$T152635 = -1284					; size = 4
$T152634 = -1277					; size = 1
$T152633 = -1276					; size = 28
$T152632 = -1248					; size = 4
$T152631 = -1244					; size = 28
$T152630 = -1216					; size = 28
$T152629 = -1185					; size = 1
$T152628 = -1184					; size = 8
$T152627 = -1176					; size = 8
$T152626 = -1165					; size = 1
$T152625 = -1164					; size = 4
$T152624 = -1160					; size = 4
_err$144473 = -1156					; size = 4
_iRet$144471 = -1152					; size = 4
_wscMsg$144468 = -1148					; size = 28
_cId$144480 = -1120					; size = 4
_szBuf$144472 = -1116					; size = 1024
_cIdTo$144481 = -92					; size = 4
_iter$144456 = -88					; size = 8
_wscCharnamePrefix$ = -80				; size = 4
_$S7$ = -76						; size = 28
__$ArrayPad$ = -48					; size = 4
_msgSent$ = -41						; size = 1
_lst$ = -40						; size = 28
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_FactionInvite
; Line 847
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1332				; 00000534H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 848
	push	0
	push	32					; 00000020H
	mov	eax, DWORD PTR _wscParam$[ebp]
	push	eax
	lea	ecx, DWORD PTR _$S7$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetParam@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR _$S7$[ebp]
	mov	DWORD PTR _wscCharnamePrefix$[ebp], edx
; Line 850
	mov	BYTE PTR _msgSent$[ebp], 0
; Line 852
	mov	ecx, DWORD PTR _wscCharnamePrefix$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	cmp	eax, 3
	jae	$LN8@UserCmd_Fa@2
; Line 854
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152624[ebp], esp
	push	OFFSET $SG144443
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv64[ebp], eax
	mov	eax, DWORD PTR tv64[ebp]
	mov	DWORD PTR tv244[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 855
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152625[ebp], esp
	mov	edx, DWORD PTR _usage$[ebp]
	push	edx
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv266[ebp], eax
	mov	eax, DWORD PTR tv266[ebp]
	mov	DWORD PTR tv246[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 856
	mov	BYTE PTR $T152626[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _$S7$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152626[ebp]
	jmp	$LN9@UserCmd_Fa@2
$LN8@UserCmd_Fa@2:
; Line 859
	lea	edx, DWORD PTR _lst$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkGetPlayers@@YA?AV?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@XZ
	add	esp, 4
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 860
	lea	eax, DWORD PTR _iter$144456[ebp]
	push	eax
	lea	ecx, DWORD PTR _lst$[ebp]
	call	?begin@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::begin
	jmp	SHORT $LN7@UserCmd_Fa@2
$LN6@UserCmd_Fa@2:
	push	0
	lea	ecx, DWORD PTR $T152627[ebp]
	push	ecx
	lea	ecx, DWORD PTR _iter$144456[ebp]
	call	??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV012@H@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator++
$LN7@UserCmd_Fa@2:
	lea	edx, DWORD PTR $T152628[ebp]
	push	edx
	lea	ecx, DWORD PTR _lst$[ebp]
	call	?end@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$144456[ebp]
	call	??9?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator!=
	movzx	eax, al
	test	eax, eax
	je	$LN5@UserCmd_Fa@2
; Line 862
	push	0
	mov	ecx, DWORD PTR _wscCharnamePrefix$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152631[ebp]
	push	edx
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR tv250[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv250[ebp]
	push	ecx
	lea	ecx, DWORD PTR _iter$144456[ebp]
	call	??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator->
	add	eax, 4
	push	eax
	lea	edx, DWORD PTR $T152630[ebp]
	push	edx
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv268[ebp], eax
	mov	eax, DWORD PTR tv268[ebp]
	mov	DWORD PTR tv252[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv252[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIABV12@I@Z
	mov	ecx, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	xor	edx, edx
	cmp	eax, DWORD PTR [ecx]
	sete	dl
	mov	BYTE PTR $T152629[ebp], dl
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T152630[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T152631[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T152629[ebp]
	test	eax, eax
	je	SHORT $LN4@UserCmd_Fa@2
; Line 863
	jmp	$LN6@UserCmd_Fa@2
$LN4@UserCmd_Fa@2:
; Line 864
	lea	ecx, DWORD PTR _iter$144456[ebp]
	call	??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator->
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _iClientID$[ebp]
	jne	SHORT $LN3@UserCmd_Fa@2
; Line 865
	jmp	$LN6@UserCmd_Fa@2
$LN3@UserCmd_Fa@2:
; Line 867
	lea	ecx, DWORD PTR _iter$144456[ebp]
	call	??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator->
	add	eax, 4
	push	eax
	push	OFFSET $SG144470
	lea	edx, DWORD PTR _wscMsg$144468[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 872
	lea	eax, DWORD PTR _iRet$144471[ebp]
	push	eax
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _szBuf$144472[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscMsg$144468[ebp]
	push	edx
	call	?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z ; HkFMsgEncodeMsg
	add	esp, 16					; 00000010H
	mov	DWORD PTR _err$144473[ebp], eax
	cmp	DWORD PTR _err$144473[ebp], 0
	je	$LN2@UserCmd_Fa@2
; Line 874
	mov	eax, DWORD PTR _err$144473[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152633[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkErrGetText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@W4HK_ERROR@@@Z
	add	esp, 8
	mov	DWORD PTR tv184[ebp], eax
	mov	edx, DWORD PTR tv184[ebp]
	mov	DWORD PTR tv255[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T152632[ebp], esp
	mov	ecx, DWORD PTR tv255[ebp]
	push	ecx
	push	OFFSET $SG144478
	push	eax
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv269[ebp], eax
	mov	edx, DWORD PTR tv269[ebp]
	mov	DWORD PTR tv257[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T152633[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 875
	mov	BYTE PTR $T152634[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _wscMsg$144468[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _lst$[ebp]
	call	??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _$S7$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152634[ebp]
	jmp	$LN9@UserCmd_Fa@2
$LN2@UserCmd_Fa@2:
; Line 878
	mov	ecx, DWORD PTR _iClientID$[ebp]
	mov	DWORD PTR _cId$144480[ebp], ecx
; Line 879
	mov	DWORD PTR _cIdTo$144481[ebp], 65537	; 00010001H
; Line 881
	push	-1
	mov	edx, DWORD PTR _cIdTo$144481[ebp]
	push	edx
	lea	eax, DWORD PTR _szBuf$144472[ebp]
	push	eax
	mov	ecx, DWORD PTR _iRet$144471[ebp]
	push	ecx
	mov	edx, DWORD PTR _cId$144480[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp__Server
	call	DWORD PTR __imp_?SubmitChat@IServerImpl@@UAEXUCHAT_ID@@KPBX0H@Z
; Line 882
	mov	BYTE PTR _msgSent$[ebp], 1
; Line 883
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _wscMsg$144468[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN6@UserCmd_Fa@2
$LN5@UserCmd_Fa@2:
; Line 885
	movzx	eax, BYTE PTR _msgSent$[ebp]
	test	eax, eax
	jne	SHORT $LN1@UserCmd_Fa@2
; Line 886
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152635[ebp], esp
	push	OFFSET $SG144484
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv271[ebp], eax
	mov	ecx, DWORD PTR tv271[ebp]
	mov	DWORD PTR tv262[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
$LN1@UserCmd_Fa@2:
; Line 888
	mov	BYTE PTR $T152636[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _lst$[ebp]
	call	??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _$S7$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152636[ebp]
$LN9@UserCmd_Fa@2:
; Line 889
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR _$S7$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	mov	ecx, DWORD PTR $T152624[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	mov	ecx, DWORD PTR $T152625[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	lea	ecx, DWORD PTR _lst$[ebp]
	jmp	??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	lea	ecx, DWORD PTR $T152631[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5:
	lea	ecx, DWORD PTR $T152630[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6:
	lea	ecx, DWORD PTR _wscMsg$144468[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7:
	lea	ecx, DWORD PTR $T152633[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8:
	mov	ecx, DWORD PTR $T152632[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$9:
	mov	ecx, DWORD PTR $T152635[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_FactionInvite
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_SetChatTime
EXTRN	__imp_?IniSetB@HookExt@@YAXIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z:PROC
EXTRN	__imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z:PROC
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
	DD	05H
	DD	FLAT:__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv215 = -196						; size = 4
tv154 = -192						; size = 4
tv211 = -188						; size = 4
tv220 = -184						; size = 4
tv209 = -180						; size = 4
tv64 = -176						; size = 4
tv206 = -172						; size = 4
tv218 = -168						; size = 4
$T152659 = -161						; size = 1
$T152658 = -160						; size = 4
$T152657 = -156						; size = 8
$T152656 = -148						; size = 28
$T152655 = -120						; size = 4
$T152654 = -116						; size = 4
$T152653 = -112						; size = 28
_wscCharname$ = -84					; size = 28
_bShowChatTime$ = -53					; size = 1
_wscParam1$ = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_iter$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_SetChatTime
; Line 892
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 184				; 000000b8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 893
	push	0
	push	32					; 00000020H
	mov	eax, DWORD PTR _wscParam$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152653[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetParam@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv218[ebp], eax
	mov	edx, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv206[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv206[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscParam1$[ebp]
	push	ecx
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T152653[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 894
	mov	BYTE PTR _bShowChatTime$[ebp], 0
; Line 895
	push	OFFSET $SG144497
	lea	ecx, DWORD PTR _wscParam1$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN5@UserCmd_Se@3
; Line 896
	mov	BYTE PTR _bShowChatTime$[ebp], 1
	jmp	$LN4@UserCmd_Se@3
$LN5@UserCmd_Se@3:
; Line 897
	push	OFFSET $SG144500
	lea	ecx, DWORD PTR _wscParam1$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN3@UserCmd_Se@3
; Line 898
	mov	BYTE PTR _bShowChatTime$[ebp], 0
; Line 899
	jmp	SHORT $LN4@UserCmd_Se@3
$LN3@UserCmd_Se@3:
; Line 901
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152654[ebp], esp
	push	OFFSET $SG144503
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv64[ebp], eax
	mov	edx, DWORD PTR tv64[ebp]
	mov	DWORD PTR tv209[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 902
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152655[ebp], esp
	mov	edx, DWORD PTR _usage$[ebp]
	push	edx
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv220[ebp], eax
	mov	eax, DWORD PTR tv220[ebp]
	mov	DWORD PTR tv211[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
$LN4@UserCmd_Se@3:
; Line 905
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 907
	push	OFFSET $SG144508
	lea	ecx, DWORD PTR $T152656[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	movzx	eax, BYTE PTR _bShowChatTime$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152656[ebp]
	push	ecx
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	DWORD PTR __imp_?IniSetB@HookExt@@YAXIABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T152656[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 910
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
; Line 911
	lea	edx, DWORD PTR $T152657[ebp]
	push	edx
	mov	ecx, OFFSET _mapInfo
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@UserCmd_Se@3
; Line 912
	lea	ecx, DWORD PTR _iter$[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
	mov	cl, BYTE PTR _bShowChatTime$[ebp]
	mov	BYTE PTR [eax+292], cl
$LN1@UserCmd_Se@3:
; Line 915
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152658[ebp], esp
	push	OFFSET $SG144527
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv154[ebp], eax
	mov	edx, DWORD PTR tv154[ebp]
	mov	DWORD PTR tv215[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 916
	mov	BYTE PTR $T152659[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscParam1$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T152659[ebp]
; Line 917
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR $T152653[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	lea	ecx, DWORD PTR _wscParam1$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	mov	ecx, DWORD PTR $T152654[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	mov	ecx, DWORD PTR $T152655[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	lea	ecx, DWORD PTR _wscCharname$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5:
	lea	ecx, DWORD PTR $T152656[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6:
	mov	ecx, DWORD PTR $T152658[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_SetChatTime
PUBLIC	?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_Time
xdata$x	SEGMENT
__unwindtable$?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
__ehfuncinfo$?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv80 = -24						; size = 4
tv81 = -20						; size = 4
$T152672 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_Time
; Line 920
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 922
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T152672[ebp], esp
	movzx	ecx, BYTE PTR ?set_bLocalTime@@3_NA	; set_bLocalTime
	push	ecx
	push	eax
	call	?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z ; GetTimeString
	add	esp, 8
	mov	DWORD PTR tv81[ebp], eax
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv80[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 923
	mov	al, 1
; Line 924
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	mov	ecx, DWORD PTR $T152672[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_Time
PUBLIC	??C?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEPAUINISECTIONVALUE@@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator->
PUBLIC	??9?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBE_NABV012@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator!=
PUBLIC	?end@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::end
PUBLIC	??E?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV012@H@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator++
PUBLIC	?begin@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::begin
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_CustomHelp
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	__imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
xdata$x	SEGMENT
__unwindtable$?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
__ehfuncinfo$?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv155 = -80						; size = 4
tv88 = -76						; size = 4
$T152682 = -72						; size = 4
$T152681 = -68						; size = 8
$T152680 = -60						; size = 8
_scHelp$144690 = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_iter$144683 = -20					; size = 8
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_CustomHelp
; Line 928
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 929
	movzx	eax, BYTE PTR _set_bCustomHelp
	test	eax, eax
	je	$LN5@UserCmd_Cu
; Line 932
	lea	ecx, DWORD PTR _iter$144683[ebp]
	push	ecx
	mov	ecx, OFFSET _set_lstHelpLines
	call	?begin@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::begin
	jmp	SHORT $LN4@UserCmd_Cu
$LN3@UserCmd_Cu:
	push	0
	lea	edx, DWORD PTR $T152680[ebp]
	push	edx
	lea	ecx, DWORD PTR _iter$144683[ebp]
	call	??E?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV012@H@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator++
$LN4@UserCmd_Cu:
	lea	eax, DWORD PTR $T152681[ebp]
	push	eax
	mov	ecx, OFFSET _set_lstHelpLines
	call	?end@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$144683[ebp]
	call	??9?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBE_NABV012@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN2@UserCmd_Cu
; Line 934
	lea	ecx, DWORD PTR _iter$144683[ebp]
	call	??C?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEPAUINISECTIONVALUE@@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator->
	push	eax
	lea	ecx, DWORD PTR _scHelp$144690[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 935
	lea	ecx, DWORD PTR _iter$144683[ebp]
	call	??C?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEPAUINISECTIONVALUE@@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator->
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	DWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	test	eax, eax
	jbe	SHORT $LN1@UserCmd_Cu
; Line 937
	push	OFFSET $SG144692
	lea	ecx, DWORD PTR _scHelp$144690[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
; Line 938
	lea	ecx, DWORD PTR _iter$144683[ebp]
	call	??C?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEPAUINISECTIONVALUE@@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator->
	add	eax, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR _scHelp$144690[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
$LN1@UserCmd_Cu:
; Line 940
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T152682[ebp], esp
	lea	eax, DWORD PTR _scHelp$144690[ebp]
	push	eax
	push	edx
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv88[ebp], eax
	mov	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR tv155[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 941
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scHelp$144690[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	$LN3@UserCmd_Cu
$LN2@UserCmd_Cu:
; Line 942
	mov	al, 1
	jmp	SHORT $LN6@UserCmd_Cu
$LN5@UserCmd_Cu:
; Line 944
	xor	al, al
$LN6@UserCmd_Cu:
; Line 945
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR _scHelp$144690[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	mov	ecx, DWORD PTR $T152682[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_CustomHelp
PUBLIC	?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_BuiltInCmdHelp
xdata$x	SEGMENT
__unwindtable$?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
__ehfuncinfo$?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv132 = -36						; size = 4
tv134 = -32						; size = 4
tv130 = -28						; size = 4
tv133 = -24						; size = 4
$T152691 = -20						; size = 4
$T152690 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_BuiltInCmdHelp
; Line 949
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 950
	mov	ecx, DWORD PTR _wscParam$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	SHORT $LN1@UserCmd_Bu
; Line 952
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152690[ebp], esp
	push	OFFSET $SG144703
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv133[ebp], eax
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv130[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 953
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152691[ebp], esp
	mov	edx, DWORD PTR _usage$[ebp]
	push	edx
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv134[ebp], eax
	mov	eax, DWORD PTR tv134[ebp]
	mov	DWORD PTR tv132[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 954
	mov	al, 1
	jmp	SHORT $LN2@UserCmd_Bu
$LN1@UserCmd_Bu:
; Line 956
	xor	al, al
$LN2@UserCmd_Bu:
; Line 957
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	mov	ecx, DWORD PTR $T152690[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	mov	ecx, DWORD PTR $T152691[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_BuiltInCmdHelp
PUBLIC	?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_MailShow
EXTRN	?MailShow@Mail@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z:PROC ; Mail::MailShow
EXTRN	?MailCount@Mail@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z:PROC ; Mail::MailCount
EXTRN	?MailCountUnread@Mail@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z:PROC ; Mail::MailCountUnread
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$9
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv238 = -240						; size = 4
tv244 = -236						; size = 4
tv236 = -232						; size = 4
tv243 = -228						; size = 4
tv234 = -224						; size = 4
tv242 = -220						; size = 4
tv231 = -216						; size = 4
tv241 = -212						; size = 4
tv228 = -208						; size = 4
tv240 = -204						; size = 4
tv226 = -200						; size = 4
tv67 = -196						; size = 4
tv224 = -192						; size = 4
tv77 = -188						; size = 4
$T152708 = -184						; size = 28
$T152707 = -156						; size = 4
$T152706 = -152						; size = 4
$T152705 = -148						; size = 4
$T152704 = -144						; size = 4
$T152703 = -140						; size = 28
$T152702 = -112						; size = 28
$T152701 = -84						; size = 4
$T152700 = -80						; size = 28
$T152699 = -52						; size = 28
_iFirstMsg$ = -24					; size = 4
_iNumberUnreadMsgs$ = -20				; size = 4
_iNumberMsgs$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_MailShow
; Line 961
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 962
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T152699[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	OFFSET _MSG_LOG
	lea	ecx, DWORD PTR $T152699[ebp]
	push	ecx
	call	?MailCountUnread@Mail@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; Mail::MailCountUnread
	add	esp, 8
	mov	DWORD PTR _iNumberUnreadMsgs$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152699[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 963
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T152700[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	push	OFFSET _MSG_LOG
	lea	eax, DWORD PTR $T152700[ebp]
	push	eax
	call	?MailCount@Mail@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; Mail::MailCount
	add	esp, 8
	mov	DWORD PTR _iNumberMsgs$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152700[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 964
	cmp	DWORD PTR _iNumberMsgs$[ebp], 0
	jne	SHORT $LN5@UserCmd_Ma
; Line 966
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152701[ebp], esp
	push	OFFSET $SG144719
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv224[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 967
	mov	al, 1
	jmp	$LN6@UserCmd_Ma
$LN5@UserCmd_Ma:
; Line 970
	push	0
	push	32					; 00000020H
	mov	eax, DWORD PTR _wscParam$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152702[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetParam@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv67[ebp], eax
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR tv226[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv226[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152703[ebp]
	push	ecx
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv240[ebp], eax
	mov	edx, DWORD PTR tv240[ebp]
	mov	DWORD PTR tv228[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv228[ebp]
	push	eax
	call	DWORD PTR __imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iFirstMsg$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T152703[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152702[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 971
	cmp	DWORD PTR _iFirstMsg$[ebp], 0
	jne	$LN4@UserCmd_Ma
; Line 973
	cmp	DWORD PTR _iNumberUnreadMsgs$[ebp], 0
	jle	SHORT $LN3@UserCmd_Ma
; Line 974
	mov	ecx, DWORD PTR _iNumberUnreadMsgs$[ebp]
	push	ecx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152704[ebp], esp
	push	OFFSET $SG144726
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv241[ebp], eax
	mov	edx, DWORD PTR tv241[ebp]
	mov	DWORD PTR tv231[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 36					; 00000024H
; Line 975
	jmp	SHORT $LN2@UserCmd_Ma
$LN3@UserCmd_Ma:
; Line 976
	mov	ecx, DWORD PTR _iNumberMsgs$[ebp]
	push	ecx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152705[ebp], esp
	push	OFFSET $SG144729
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv242[ebp], eax
	mov	edx, DWORD PTR tv242[ebp]
	mov	DWORD PTR tv234[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 36					; 00000024H
$LN2@UserCmd_Ma:
; Line 977
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152706[ebp], esp
	push	OFFSET $SG144731
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv243[ebp], eax
	mov	ecx, DWORD PTR tv243[ebp]
	mov	DWORD PTR tv236[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 978
	mov	al, 1
	jmp	$LN6@UserCmd_Ma
$LN4@UserCmd_Ma:
; Line 981
	mov	eax, DWORD PTR _iFirstMsg$[ebp]
	cmp	eax, DWORD PTR _iNumberMsgs$[ebp]
	jle	SHORT $LN1@UserCmd_Ma
; Line 983
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152707[ebp], esp
	push	OFFSET $SG144734
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv244[ebp], eax
	mov	ecx, DWORD PTR tv244[ebp]
	mov	DWORD PTR tv238[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 984
	mov	al, 1
	jmp	SHORT $LN6@UserCmd_Ma
$LN1@UserCmd_Ma:
; Line 987
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T152708[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _iFirstMsg$[ebp]
	push	ecx
	push	OFFSET _MSG_LOG
	lea	edx, DWORD PTR $T152708[ebp]
	push	edx
	call	?MailShow@Mail@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z ; Mail::MailShow
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152708[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 988
	mov	al, 1
$LN6@UserCmd_Ma:
; Line 989
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	lea	ecx, DWORD PTR $T152699[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	lea	ecx, DWORD PTR $T152700[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	mov	ecx, DWORD PTR $T152701[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	lea	ecx, DWORD PTR $T152702[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	lea	ecx, DWORD PTR $T152703[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5:
	mov	ecx, DWORD PTR $T152704[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6:
	mov	ecx, DWORD PTR $T152705[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7:
	mov	ecx, DWORD PTR $T152706[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8:
	mov	ecx, DWORD PTR $T152707[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$9:
	lea	ecx, DWORD PTR $T152708[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_MailShow
PUBLIC	?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ; Message::UserCmd_MailDel
EXTRN	?MailDel@Mail@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z:PROC ; Mail::MailDel
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv228 = -212						; size = 4
tv233 = -208						; size = 4
tv226 = -204						; size = 4
tv174 = -200						; size = 4
tv223 = -196						; size = 4
tv232 = -192						; size = 4
tv221 = -188						; size = 4
tv231 = -184						; size = 4
tv219 = -180						; size = 4
tv132 = -176						; size = 4
tv216 = -172						; size = 4
tv230 = -168						; size = 4
tv214 = -164						; size = 4
tv229 = -160						; size = 4
$T152733 = -156						; size = 4
$T152732 = -152						; size = 4
$T152731 = -148						; size = 28
$T152730 = -117						; size = 1
$T152729 = -116						; size = 4
$T152728 = -112						; size = 28
$T152727 = -84						; size = 28
$T152726 = -56						; size = 28
$T152725 = -28						; size = 4
$T152724 = -24						; size = 4
_iNumberMsgs$ = -20					; size = 4
_iMsg$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
_wscParam$ = 16						; size = 4
_usage$ = 20						; size = 4
?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z PROC ; Message::UserCmd_MailDel
; Line 993
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 200				; 000000c8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 994
	mov	ecx, DWORD PTR _wscParam$[ebp]
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	jne	$LN5@UserCmd_Ma@2
; Line 996
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152724[ebp], esp
	push	OFFSET $SG144745
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv229[ebp], eax
	mov	eax, DWORD PTR tv229[ebp]
	mov	DWORD PTR tv214[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 997
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152725[ebp], esp
	mov	edx, DWORD PTR _usage$[ebp]
	push	edx
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv230[ebp], eax
	mov	eax, DWORD PTR tv230[ebp]
	mov	DWORD PTR tv216[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 998
	mov	al, 1
	jmp	$LN6@UserCmd_Ma@2
$LN5@UserCmd_Ma@2:
; Line 1001
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T152726[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	push	OFFSET _MSG_LOG
	lea	eax, DWORD PTR $T152726[ebp]
	push	eax
	call	?MailCount@Mail@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; Mail::MailCount
	add	esp, 8
	mov	DWORD PTR _iNumberMsgs$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152726[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1002
	push	0
	push	32					; 00000020H
	mov	ecx, DWORD PTR _wscParam$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152727[ebp]
	push	edx
	call	DWORD PTR __imp_?GetParam@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv132[ebp], eax
	mov	eax, DWORD PTR tv132[ebp]
	mov	DWORD PTR tv219[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv219[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152728[ebp]
	push	edx
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv231[ebp], eax
	mov	eax, DWORD PTR tv231[ebp]
	mov	DWORD PTR tv221[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv221[ebp]
	push	ecx
	call	DWORD PTR __imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iMsg$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T152728[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152727[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1003
	cmp	DWORD PTR _iMsg$[ebp], 0
	je	SHORT $LN3@UserCmd_Ma@2
	mov	edx, DWORD PTR _iMsg$[ebp]
	cmp	edx, DWORD PTR _iNumberMsgs$[ebp]
	jle	SHORT $LN4@UserCmd_Ma@2
$LN3@UserCmd_Ma@2:
; Line 1005
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152729[ebp], esp
	push	OFFSET $SG144756
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv232[ebp], eax
	mov	eax, DWORD PTR tv232[ebp]
	mov	DWORD PTR tv223[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1006
	mov	al, 1
	jmp	$LN6@UserCmd_Ma@2
$LN4@UserCmd_Ma@2:
; Line 1009
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T152731[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _iMsg$[ebp]
	push	eax
	push	OFFSET _MSG_LOG
	lea	ecx, DWORD PTR $T152731[ebp]
	push	ecx
	call	?MailDel@Mail@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z ; Mail::MailDel
	add	esp, 12					; 0000000cH
	mov	BYTE PTR $T152730[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152731[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T152730[ebp]
	test	edx, edx
	je	SHORT $LN2@UserCmd_Ma@2
; Line 1010
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152732[ebp], esp
	push	OFFSET $SG144762
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv174[ebp], eax
	mov	eax, DWORD PTR tv174[ebp]
	mov	DWORD PTR tv226[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1011
	jmp	SHORT $LN1@UserCmd_Ma@2
$LN2@UserCmd_Ma@2:
; Line 1012
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152733[ebp], esp
	push	OFFSET $SG144765
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv233[ebp], eax
	mov	edx, DWORD PTR tv233[ebp]
	mov	DWORD PTR tv228[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
$LN1@UserCmd_Ma@2:
; Line 1013
	mov	al, 1
$LN6@UserCmd_Ma@2:
; Line 1014
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$0:
	mov	ecx, DWORD PTR $T152724[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$1:
	mov	ecx, DWORD PTR $T152725[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$2:
	lea	ecx, DWORD PTR $T152726[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$3:
	lea	ecx, DWORD PTR $T152727[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$4:
	lea	ecx, DWORD PTR $T152728[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$5:
	mov	ecx, DWORD PTR $T152729[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$6:
	lea	ecx, DWORD PTR $T152731[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$7:
	mov	ecx, DWORD PTR $T152732[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z$8:
	mov	ecx, DWORD PTR $T152733[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-204]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z ENDP ; Message::UserCmd_MailDel
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; Message::UserCmd_Process
EXTRN	__imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ:PROC
EXTRN	__imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z:PROC
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6
	DD	03H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv220 = -244						; size = 4
tv223 = -240						; size = 4
tv218 = -236						; size = 4
tv222 = -232						; size = 4
tv216 = -228						; size = 4
tv64 = -224						; size = 4
tv214 = -220						; size = 4
tv70 = -216						; size = 4
$T152752 = -212						; size = 28
$T152751 = -184						; size = 28
$T152750 = -156						; size = 28
$T152749 = -128						; size = 28
_wscXML$144792 = -100					; size = 28
_wscCmd$144773 = -72					; size = 28
_wscCmdLineLower$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; Message::UserCmd_Process
; Line 1017
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1018
	mov	eax, DWORD PTR _wscCmd$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscCmdLineLower$[ebp]
	push	ecx
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1021
	movzx	edx, BYTE PTR _set_bCmdEcho
	test	edx, edx
	je	$LN4@UserCmd_Pr@3
; Line 1023
	push	0
	push	32					; 00000020H
	lea	eax, DWORD PTR _wscCmdLineLower$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetParam@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1024
	push	0
	push	OFFSET $SG144777
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	test	eax, eax
	je	SHORT $LN2@UserCmd_Pr@3
	push	0
	push	OFFSET $SG144778
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	test	eax, eax
	jne	$LN3@UserCmd_Pr@3
$LN2@UserCmd_Pr@3:
; Line 1031
	push	OFFSET $SG144780
	lea	edx, DWORD PTR _wscCmd$144773[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	$LN3@UserCmd_Pr@3
	push	OFFSET $SG144781
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	$LN3@UserCmd_Pr@3
	push	OFFSET $SG144782
	lea	eax, DWORD PTR _wscCmd$144773[ebp]
	push	eax
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN3@UserCmd_Pr@3
	push	OFFSET $SG144783
	lea	edx, DWORD PTR _wscCmd$144773[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	$LN3@UserCmd_Pr@3
	push	OFFSET $SG144784
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	$LN3@UserCmd_Pr@3
	push	OFFSET $SG144785
	lea	eax, DWORD PTR _wscCmd$144773[ebp]
	push	eax
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN3@UserCmd_Pr@3
	push	OFFSET $SG144786
	lea	edx, DWORD PTR _wscCmd$144773[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	$LN3@UserCmd_Pr@3
	push	OFFSET $SG144787
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	$LN3@UserCmd_Pr@3
	push	OFFSET $SG144788
	lea	eax, DWORD PTR _wscCmd$144773[ebp]
	push	eax
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN3@UserCmd_Pr@3
	push	OFFSET $SG144789
	lea	edx, DWORD PTR _wscCmd$144773[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	$LN3@UserCmd_Pr@3
	push	0
	push	OFFSET $SG144790
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	test	eax, eax
	je	$LN3@UserCmd_Pr@3
	push	0
	push	OFFSET $SG144791
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	mov	esi, eax
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	sub	eax, 1
	cmp	esi, eax
	je	$LN3@UserCmd_Pr@3
; Line 1033
	push	OFFSET $SG144798
	lea	ecx, DWORD PTR _wscCmdLineLower$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152749[ebp]
	push	edx
	call	DWORD PTR __imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv70[ebp], eax
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR tv214[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv214[ebp]
	push	ecx
	push	OFFSET $SG144799
	push	OFFSET _set_wscCmdEchoStyle
	push	OFFSET $SG144800
	lea	edx, DWORD PTR $T152750[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv64[ebp], eax
	mov	eax, DWORD PTR tv64[ebp]
	mov	DWORD PTR tv216[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv216[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152751[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv222[ebp], eax
	mov	eax, DWORD PTR tv222[ebp]
	mov	DWORD PTR tv218[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv218[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152752[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv223[ebp], eax
	mov	eax, DWORD PTR tv223[ebp]
	mov	DWORD PTR tv220[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv220[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscXML$144792[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T152752[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T152751[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T152750[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T152749[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1034
	lea	eax, DWORD PTR _wscXML$144792[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkFMsg@@YA?AW4HK_ERROR@@IABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 8
; Line 1035
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _wscXML$144792[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN3@UserCmd_Pr@3:
; Line 1037
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN4@UserCmd_Pr@3:
; Line 1038
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscCmdLineLower$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _wscCmdLineLower$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1:
	lea	ecx, DWORD PTR _wscCmd$144773[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T152749[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T152750[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T152751[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T152752[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6:
	lea	ecx, DWORD PTR _wscXML$144792[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; Message::UserCmd_Process
PUBLIC	?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z ; Message::AdminCmd_SendMail
EXTRN	__imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ:PROC
xdata$x	SEGMENT
__unwindtable$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z$3
__ehfuncinfo$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv140 = -132						; size = 4
tv144 = -128						; size = 4
tv138 = -124						; size = 4
tv143 = -120						; size = 4
tv136 = -116						; size = 4
tv142 = -112						; size = 4
tv134 = -108						; size = 4
tv141 = -104						; size = 4
$T152768 = -100						; size = 4
$T152767 = -96						; size = 28
$T152766 = -68						; size = 28
$T152765 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_cmds$ = 8						; size = 4
_wscCharname$ = 12					; size = 4
_wscMsg$ = 16						; size = 4
?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z PROC ; Message::AdminCmd_SendMail
; Line 1042
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1043
	mov	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	push	OFFSET $SG144809
	lea	ecx, DWORD PTR $T152765[ebp]
	push	ecx
	mov	edx, DWORD PTR _cmds$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _cmds$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	mov	DWORD PTR tv141[ebp], eax
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv134[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv134[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152766[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv142[ebp], eax
	mov	eax, DWORD PTR tv142[ebp]
	mov	DWORD PTR tv136[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv136[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152767[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv143[ebp], eax
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR tv138[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv138[ebp]
	push	ecx
	push	OFFSET _MSG_LOG
	mov	edx, DWORD PTR _wscCharname$[ebp]
	push	edx
	call	?MailSend@Mail@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@0@Z ; Mail::MailSend
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T152767[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T152766[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152765[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1044
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T152768[ebp], esp
	push	OFFSET $SG144811
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _cmds$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1045
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z$0:
	lea	ecx, DWORD PTR $T152765[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z$1:
	lea	ecx, DWORD PTR $T152766[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z$2:
	lea	ecx, DWORD PTR $T152767[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z$3:
	mov	ecx, DWORD PTR $T152768[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z ENDP ; Message::AdminCmd_SendMail
PUBLIC	__$ArrayPad$
PUBLIC	?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z ; Message::SendDeathMsg
EXTRN	__imp_?HkFMsgSendChat@@YA?AW4HK_ERROR@@IPADI@Z:PROC
EXTRN	__imp_?set_bUserCmdSetDieMsg@@3_NA:BYTE
EXTRN	__imp_?ClientInfo@@3PAUCLIENT_INFO@@A:BYTE
EXTRN	__imp_?set_bUserCmdSetDieMsgSize@@3_NA:BYTE
EXTRN	__imp_?GetSystem@Player@pub@@YAHABIAAI@Z:PROC
EXTRN	__imp_?set_wscDeathMsgStyleSys@@3V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@A:BYTE
EXTRN	__imp_?HkFMsgEncodeXML@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z:PROC
EXTRN	__imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z:PROC
EXTRN	__imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?set_wscDeathMsgStyle@@3V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@A:BYTE
xdata$x	SEGMENT
__ehfuncinfo$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z DD 019930522H
	DD	018H
	DD	FLAT:__unwindtable$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$4
	DD	05H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$6
	DD	04H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$6
	DD	09H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$7
	DD	09H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$8
	DD	0bH
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$9
	DD	0dH
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$10
	DD	0dH
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$11
	DD	0fH
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$12
	DD	010H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$13
	DD	0fH
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$13
	DD	012H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$14
	DD	012H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$15
	DD	014H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$16
	DD	015H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$17
	DD	016H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$18
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv375 = -262848						; size = 4
tv382 = -262844						; size = 4
tv373 = -262840						; size = 4
tv381 = -262836						; size = 4
tv371 = -262832						; size = 4
tv380 = -262828						; size = 4
tv369 = -262824						; size = 4
tv379 = -262820						; size = 4
tv361 = -262816						; size = 4
tv187 = -262812						; size = 4
tv358 = -262808						; size = 4
tv183 = -262804						; size = 4
tv351 = -262800						; size = 4
tv157 = -262796						; size = 4
tv348 = -262792						; size = 4
tv378 = -262788						; size = 4
tv343 = -262784						; size = 4
tv94 = -262780						; size = 4
tv340 = -262776						; size = 4
tv377 = -262772						; size = 4
tv338 = -262768						; size = 4
tv90 = -262764						; size = 4
tv334 = -262760						; size = 4
tv64 = -262756						; size = 4
tv331 = -262752						; size = 4
tv376 = -262748						; size = 4
$T152791 = -262744					; size = 28
$T152790 = -262716					; size = 28
$T152789 = -262688					; size = 28
$T152788 = -262660					; size = 28
$T152787 = -262632					; size = 28
$T152786 = -262604					; size = 28
$T152785 = -262576					; size = 28
$T152784 = -262548					; size = 28
$T152783 = -262520					; size = 28
$T152782 = -262492					; size = 28
$T152781 = -262464					; size = 28
$T152780 = -262436					; size = 28
$T152779 = -262408					; size = 28
_iClientID$144867 = -262380				; size = 4
_iXMLBufRet$144877 = -262376				; size = 4
_szXMLBuf$144876 = -262372				; size = 4
_iClientSystemID$144868 = -262368			; size = 4
_iXMLBufRetSys$144879 = -262364				; size = 4
_szXMLBufSys$144878 = -262360				; size = 4
_wscStyleSmallSys$ = -262356				; size = 28
_wscStyleSmall$ = -262328				; size = 28
_iRet$ = -262300					; size = 4
_wscXMLMsg$ = -262296					; size = 28
_iRetSmallSys$ = -262268				; size = 4
_iRetSys$ = -262264					; size = 4
_pPD$ = -262260						; size = 4
_wscXMLMsgSmallSys$ = -262256				; size = 28
_wscXMLMsgSys$ = -262228				; size = 28
_iRetSmall$ = -262200					; size = 4
_szBufSmall$ = -262196					; size = 65535
_szBuf$ = -196660					; size = 65535
_szBufSys$ = -131124					; size = 65535
_wscXMLMsgSmall$ = -65584				; size = 28
_szBufSmallSys$ = -65556				; size = 65535
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_wscMsg$ = 8						; size = 4
_iSystemID$ = 12					; size = 4
_iClientIDVictim$ = 16					; size = 4
_iClientIDKiller$ = 20					; size = 4
?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z PROC ; Message::SendDeathMsg
; Line 1050
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 262836				; 000402b4H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1053
	push	OFFSET $SG144821
	mov	eax, DWORD PTR __imp_?set_wscDeathMsgStyle@@3V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@A
	push	eax
	push	OFFSET $SG144822
	lea	ecx, DWORD PTR $T152779[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv376[ebp], eax
	mov	edx, DWORD PTR tv376[ebp]
	mov	DWORD PTR tv331[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv331[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscXMLMsg$[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T152779[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1054
	mov	edx, DWORD PTR _wscMsg$[ebp]
	push	edx
	lea	eax, DWORD PTR $T152780[ebp]
	push	eax
	call	DWORD PTR __imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	mov	DWORD PTR tv334[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv334[ebp]
	push	edx
	lea	ecx, DWORD PTR _wscXMLMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T152780[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1055
	push	OFFSET $SG144824
	lea	ecx, DWORD PTR _wscXMLMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z
; Line 1059
	lea	eax, DWORD PTR _iRet$[ebp]
	push	eax
	push	65535					; 0000ffffH
	lea	ecx, DWORD PTR _szBuf$[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscXMLMsg$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkFMsgEncodeXML@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN22@SendDeathM
; Line 1060
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscXMLMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN23@SendDeathM
$LN22@SendDeathM:
; Line 1062
	mov	eax, DWORD PTR __imp_?set_wscDeathMsgStyle@@3V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@A
	push	eax
	lea	ecx, DWORD PTR _wscStyleSmall$[ebp]
	push	ecx
	call	?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z ; Message::SetSizeToSmall
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1063
	push	OFFSET $SG144834
	lea	edx, DWORD PTR _wscStyleSmall$[ebp]
	push	edx
	push	OFFSET $SG144835
	lea	ecx, DWORD PTR $T152781[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv90[ebp], eax
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR tv338[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv338[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152782[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv377[ebp], eax
	mov	eax, DWORD PTR tv377[ebp]
	mov	DWORD PTR tv340[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv340[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscXMLMsgSmall$[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T152782[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T152781[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1064
	mov	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152783[ebp]
	push	ecx
	call	DWORD PTR __imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv94[ebp], eax
	mov	edx, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv343[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR tv343[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscXMLMsgSmall$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T152783[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1065
	push	OFFSET $SG144837
	lea	ecx, DWORD PTR _wscXMLMsgSmall$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z
; Line 1068
	lea	ecx, DWORD PTR _iRetSmall$[ebp]
	push	ecx
	push	65535					; 0000ffffH
	lea	edx, DWORD PTR _szBufSmall$[ebp]
	push	edx
	lea	eax, DWORD PTR _wscXMLMsgSmall$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkFMsgEncodeXML@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN21@SendDeathM
; Line 1069
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _wscXMLMsgSmall$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _wscStyleSmall$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscXMLMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN23@SendDeathM
$LN21@SendDeathM:
; Line 1072
	push	OFFSET $SG144844
	mov	ecx, DWORD PTR __imp_?set_wscDeathMsgStyleSys@@3V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@A
	push	ecx
	push	OFFSET $SG144845
	lea	edx, DWORD PTR $T152784[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv378[ebp], eax
	mov	eax, DWORD PTR tv378[ebp]
	mov	DWORD PTR tv348[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR tv348[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscXMLMsgSys$[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T152784[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1073
	mov	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152785[ebp]
	push	ecx
	call	DWORD PTR __imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv157[ebp], eax
	mov	edx, DWORD PTR tv157[ebp]
	mov	DWORD PTR tv351[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	eax, DWORD PTR tv351[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscXMLMsgSys$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T152785[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1074
	push	OFFSET $SG144847
	lea	ecx, DWORD PTR _wscXMLMsgSys$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z
; Line 1077
	lea	ecx, DWORD PTR _iRetSys$[ebp]
	push	ecx
	push	65535					; 0000ffffH
	lea	edx, DWORD PTR _szBufSys$[ebp]
	push	edx
	lea	eax, DWORD PTR _wscXMLMsgSys$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkFMsgEncodeXML@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN20@SendDeathM
; Line 1078
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _wscXMLMsgSys$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _wscXMLMsgSmall$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _wscStyleSmall$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscXMLMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN23@SendDeathM
$LN20@SendDeathM:
; Line 1080
	mov	ecx, DWORD PTR __imp_?set_wscDeathMsgStyleSys@@3V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@A
	push	ecx
	lea	edx, DWORD PTR _wscStyleSmallSys$[ebp]
	push	edx
	call	?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z ; Message::SetSizeToSmall
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
; Line 1081
	push	OFFSET $SG144856
	lea	eax, DWORD PTR _wscStyleSmallSys$[ebp]
	push	eax
	push	OFFSET $SG144857
	lea	ecx, DWORD PTR $T152786[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv183[ebp], eax
	mov	edx, DWORD PTR tv183[ebp]
	mov	DWORD PTR tv358[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	eax, DWORD PTR tv358[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscXMLMsgSmallSys$[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T152786[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1082
	mov	edx, DWORD PTR _wscMsg$[ebp]
	push	edx
	lea	eax, DWORD PTR $T152787[ebp]
	push	eax
	call	DWORD PTR __imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv187[ebp], eax
	mov	ecx, DWORD PTR tv187[ebp]
	mov	DWORD PTR tv361[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	edx, DWORD PTR tv361[ebp]
	push	edx
	lea	ecx, DWORD PTR _wscXMLMsgSmallSys$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T152787[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1083
	push	OFFSET $SG144859
	lea	ecx, DWORD PTR _wscXMLMsgSmallSys$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z
; Line 1086
	lea	eax, DWORD PTR _iRetSmallSys$[ebp]
	push	eax
	push	65535					; 0000ffffH
	lea	ecx, DWORD PTR _szBufSmallSys$[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscXMLMsgSmallSys$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkFMsgEncodeXML@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN19@SendDeathM
; Line 1087
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR _wscXMLMsgSmallSys$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR _wscStyleSmallSys$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _wscXMLMsgSys$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _wscXMLMsgSmall$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _wscStyleSmall$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscXMLMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN23@SendDeathM
$LN19@SendDeathM:
; Line 1091
	mov	DWORD PTR _pPD$[ebp], 0
$LN18@SendDeathM:
; Line 1092
	mov	eax, DWORD PTR _pPD$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?traverse_active@PlayerDB@@QBEPAUPlayerData@@PAU2@@Z
	mov	DWORD PTR _pPD$[ebp], eax
	cmp	DWORD PTR _pPD$[ebp], 0
	je	$LN17@SendDeathM
; Line 1094
	mov	ecx, DWORD PTR _pPD$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkGetClientIdFromPD@@YAIPAUPlayerData@@@Z
	add	esp, 4
	mov	DWORD PTR _iClientID$144867[ebp], eax
; Line 1095
	mov	DWORD PTR _iClientSystemID$144868[ebp], 0
; Line 1096
	lea	edx, DWORD PTR _iClientSystemID$144868[ebp]
	push	edx
	lea	eax, DWORD PTR _iClientID$144867[ebp]
	push	eax
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 1098
	lea	ecx, DWORD PTR _iClientID$144867[ebp]
	push	ecx
	mov	ecx, OFFSET _mapInfo
	call	??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
	movzx	edx, BYTE PTR [eax+288]
	test	edx, edx
	je	$LN16@SendDeathM
; Line 1101
	mov	BYTE PTR _bSendingTime, 1
; Line 1102
	push	OFFSET $SG144874
	movzx	eax, BYTE PTR ?set_bLocalTime@@3_NA	; set_bLocalTime
	push	eax
	lea	ecx, DWORD PTR $T152788[ebp]
	push	ecx
	call	?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z ; GetTimeString
	add	esp, 8
	mov	DWORD PTR tv379[ebp], eax
	mov	edx, DWORD PTR tv379[ebp]
	mov	DWORD PTR tv369[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	eax, DWORD PTR tv369[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152789[ebp]
	push	ecx
	call	DWORD PTR __imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv380[ebp], eax
	mov	edx, DWORD PTR tv380[ebp]
	mov	DWORD PTR tv371[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	eax, DWORD PTR tv371[ebp]
	push	eax
	push	OFFSET $SG144875
	lea	ecx, DWORD PTR $T152790[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv381[ebp], eax
	mov	edx, DWORD PTR tv381[ebp]
	mov	DWORD PTR tv373[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	eax, DWORD PTR tv373[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152791[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv382[ebp], eax
	mov	edx, DWORD PTR tv382[ebp]
	mov	DWORD PTR tv375[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	eax, DWORD PTR tv375[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$144867[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkFMsg@@YA?AW4HK_ERROR@@IABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR $T152791[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T152790[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR $T152789[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T152788[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1103
	mov	BYTE PTR _bSendingTime, 0
$LN16@SendDeathM:
; Line 1110
	mov	edx, DWORD PTR __imp_?set_bUserCmdSetDieMsgSize@@3_NA
	movzx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN15@SendDeathM
	mov	ecx, DWORD PTR _iClientID$144867[ebp]
	imul	ecx, 2368				; 00000940H
	mov	edx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	cmp	DWORD PTR [edx+ecx+2176], 1
	jne	SHORT $LN15@SendDeathM
; Line 1111
	lea	eax, DWORD PTR _szBufSmall$[ebp]
	mov	DWORD PTR _szXMLBuf$144876[ebp], eax
; Line 1112
	mov	ecx, DWORD PTR _iRetSmall$[ebp]
	mov	DWORD PTR _iXMLBufRet$144877[ebp], ecx
; Line 1113
	lea	edx, DWORD PTR _szBufSmallSys$[ebp]
	mov	DWORD PTR _szXMLBufSys$144878[ebp], edx
; Line 1114
	mov	eax, DWORD PTR _iRetSmallSys$[ebp]
	mov	DWORD PTR _iXMLBufRetSys$144879[ebp], eax
; Line 1115
	jmp	SHORT $LN14@SendDeathM
$LN15@SendDeathM:
; Line 1116
	lea	ecx, DWORD PTR _szBuf$[ebp]
	mov	DWORD PTR _szXMLBuf$144876[ebp], ecx
; Line 1117
	mov	edx, DWORD PTR _iRet$[ebp]
	mov	DWORD PTR _iXMLBufRet$144877[ebp], edx
; Line 1118
	lea	eax, DWORD PTR _szBufSys$[ebp]
	mov	DWORD PTR _szXMLBufSys$144878[ebp], eax
; Line 1119
	mov	ecx, DWORD PTR _iRetSys$[ebp]
	mov	DWORD PTR _iXMLBufRetSys$144879[ebp], ecx
$LN14@SendDeathM:
; Line 1122
	mov	edx, DWORD PTR __imp_?set_bUserCmdSetDieMsg@@3_NA
	movzx	eax, BYTE PTR [edx]
	test	eax, eax
	jne	SHORT $LN13@SendDeathM
; Line 1124
	mov	ecx, DWORD PTR _iSystemID$[ebp]
	cmp	ecx, DWORD PTR _iClientSystemID$144868[ebp]
	jne	SHORT $LN12@SendDeathM
; Line 1125
	mov	edx, DWORD PTR _iXMLBufRetSys$144879[ebp]
	push	edx
	mov	eax, DWORD PTR _szXMLBufSys$144878[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$144867[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkFMsgSendChat@@YA?AW4HK_ERROR@@IPADI@Z
	add	esp, 12					; 0000000cH
; Line 1126
	jmp	SHORT $LN11@SendDeathM
$LN12@SendDeathM:
; Line 1127
	mov	edx, DWORD PTR _iXMLBufRet$144877[ebp]
	push	edx
	mov	eax, DWORD PTR _szXMLBuf$144876[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$144867[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkFMsgSendChat@@YA?AW4HK_ERROR@@IPADI@Z
	add	esp, 12					; 0000000cH
$LN11@SendDeathM:
; Line 1128
	jmp	$LN18@SendDeathM
$LN13@SendDeathM:
; Line 1131
	mov	edx, DWORD PTR _iClientID$144867[ebp]
	imul	edx, 2368				; 00000940H
	mov	eax, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	cmp	DWORD PTR [eax+edx+2172], 2
	jne	SHORT $LN10@SendDeathM
	jmp	$LN18@SendDeathM
; Line 1132
	jmp	$LN9@SendDeathM
$LN10@SendDeathM:
; Line 1133
	mov	ecx, DWORD PTR _iClientID$144867[ebp]
	imul	ecx, 2368				; 00000940H
	mov	edx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	cmp	DWORD PTR [edx+ecx+2172], 1
	jne	SHORT $LN8@SendDeathM
	mov	eax, DWORD PTR _iSystemID$[ebp]
	cmp	eax, DWORD PTR _iClientSystemID$144868[ebp]
	jne	SHORT $LN8@SendDeathM
; Line 1134
	mov	ecx, DWORD PTR _iXMLBufRetSys$144879[ebp]
	push	ecx
	mov	edx, DWORD PTR _szXMLBufSys$144878[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$144867[ebp]
	push	eax
	call	DWORD PTR __imp_?HkFMsgSendChat@@YA?AW4HK_ERROR@@IPADI@Z
	add	esp, 12					; 0000000cH
	jmp	$LN9@SendDeathM
$LN8@SendDeathM:
; Line 1135
	mov	ecx, DWORD PTR _iClientID$144867[ebp]
	imul	ecx, 2368				; 00000940H
	mov	edx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	cmp	DWORD PTR [edx+ecx+2172], 3
	jne	SHORT $LN6@SendDeathM
	mov	eax, DWORD PTR _iClientID$144867[ebp]
	cmp	eax, DWORD PTR _iClientIDVictim$[ebp]
	je	SHORT $LN5@SendDeathM
	mov	ecx, DWORD PTR _iClientID$144867[ebp]
	cmp	ecx, DWORD PTR _iClientIDKiller$[ebp]
	jne	SHORT $LN6@SendDeathM
$LN5@SendDeathM:
; Line 1136
	mov	edx, DWORD PTR _iXMLBufRetSys$144879[ebp]
	push	edx
	mov	eax, DWORD PTR _szXMLBufSys$144878[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$144867[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkFMsgSendChat@@YA?AW4HK_ERROR@@IPADI@Z
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@SendDeathM
$LN6@SendDeathM:
; Line 1137
	mov	edx, DWORD PTR _iClientID$144867[ebp]
	imul	edx, 2368				; 00000940H
	mov	eax, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	cmp	DWORD PTR [eax+edx+2172], 0
	jne	SHORT $LN9@SendDeathM
; Line 1138
	mov	ecx, DWORD PTR _iSystemID$[ebp]
	cmp	ecx, DWORD PTR _iClientSystemID$144868[ebp]
	jne	SHORT $LN2@SendDeathM
; Line 1139
	mov	edx, DWORD PTR _iXMLBufRetSys$144879[ebp]
	push	edx
	mov	eax, DWORD PTR _szXMLBufSys$144878[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$144867[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkFMsgSendChat@@YA?AW4HK_ERROR@@IPADI@Z
	add	esp, 12					; 0000000cH
; Line 1140
	jmp	SHORT $LN9@SendDeathM
$LN2@SendDeathM:
; Line 1141
	mov	edx, DWORD PTR _iXMLBufRet$144877[ebp]
	push	edx
	mov	eax, DWORD PTR _szXMLBuf$144876[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$144867[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkFMsgSendChat@@YA?AW4HK_ERROR@@IPADI@Z
	add	esp, 12					; 0000000cH
$LN9@SendDeathM:
; Line 1143
	jmp	$LN18@SendDeathM
$LN17@SendDeathM:
; Line 1144
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR _wscXMLMsgSmallSys$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR _wscStyleSmallSys$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _wscXMLMsgSys$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _wscXMLMsgSmall$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _wscStyleSmall$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscXMLMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN23@SendDeathM:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$0:
	lea	ecx, DWORD PTR $T152779[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$1:
	lea	ecx, DWORD PTR _wscXMLMsg$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$2:
	lea	ecx, DWORD PTR $T152780[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$3:
	lea	ecx, DWORD PTR _wscStyleSmall$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$4:
	lea	ecx, DWORD PTR $T152781[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$5:
	lea	ecx, DWORD PTR $T152782[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$6:
	lea	ecx, DWORD PTR _wscXMLMsgSmall$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$7:
	lea	ecx, DWORD PTR $T152783[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$8:
	lea	ecx, DWORD PTR $T152784[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$9:
	lea	ecx, DWORD PTR _wscXMLMsgSys$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$10:
	lea	ecx, DWORD PTR $T152785[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$11:
	lea	ecx, DWORD PTR _wscStyleSmallSys$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$12:
	lea	ecx, DWORD PTR $T152786[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$13:
	lea	ecx, DWORD PTR _wscXMLMsgSmallSys$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$14:
	lea	ecx, DWORD PTR $T152787[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$15:
	lea	ecx, DWORD PTR $T152788[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$16:
	lea	ecx, DWORD PTR $T152789[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$17:
	lea	ecx, DWORD PTR $T152790[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$18:
	lea	ecx, DWORD PTR $T152791[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-262840]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z ENDP ; Message::SendDeathMsg
PUBLIC	?swprintf@@YAHPAGPBGZZ				; swprintf
PUBLIC	__$ArrayPad$
EXTRN	__imp__wcslen:PROC
EXTRN	__imp__wcscpy:PROC
EXTRN	__imp__wcstoul:PROC
xdata$x	SEGMENT
__unwindtable$?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z$0
__ehfuncinfo$?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T152820 = -88						; size = 4
_wszStyleSmall$ = -84					; size = 64
__$ArrayPad$ = -20					; size = 4
_iFormat$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_wscDataFormat$ = 12					; size = 4
?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z PROC ; Message::SetSizeToSmall
; Line 191
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T152820[ebp], 0
; Line 192
	push	16					; 00000010H
	push	0
	mov	ecx, DWORD PTR _wscDataFormat$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	add	eax, 4
	push	eax
	call	DWORD PTR __imp__wcstoul
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _iFormat$[ebp], eax
; Line 194
	mov	ecx, DWORD PTR _wscDataFormat$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	lea	eax, DWORD PTR _wszStyleSmall$[ebp]
	push	eax
	call	DWORD PTR __imp__wcscpy
	add	esp, 8
; Line 195
	mov	ecx, DWORD PTR _iFormat$[ebp]
	and	ecx, 7
	or	ecx, 144				; 00000090H
	push	ecx
	push	OFFSET $SG142882
	lea	edx, DWORD PTR _wszStyleSmall$[ebp]
	push	edx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	lea	eax, DWORD PTR _wszStyleSmall$[ebp+eax*2-4]
	push	eax
	call	?swprintf@@YAHPAGPBGZZ			; swprintf
	add	esp, 12					; 0000000cH
; Line 196
	lea	ecx, DWORD PTR _wszStyleSmall$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T152820[ebp]
	or	edx, 1
	mov	DWORD PTR $T152820[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 197
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z$0:
	mov	eax, DWORD PTR $T152820[ebp]
	and	eax, 1
	je	$LN4@SetSizeToS
	and	DWORD PTR $T152820[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN4@SetSizeToS:
	ret	0
__ehhandler$?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetSizeToSmall@Message@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV23@@Z ENDP ; Message::SetSizeToSmall
EXTRN	__imp___vswprintf:PROC
; Function compile flags: /Odtp
;	COMDAT ?swprintf@@YAHPAGPBGZZ
_TEXT	SEGMENT
__Ret$ = -8						; size = 4
__Arglist$ = -4						; size = 4
__String$ = 8						; size = 4
__Format$ = 12						; size = 4
?swprintf@@YAHPAGPBGZZ PROC				; swprintf, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\swprintf.inl
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 88
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __Arglist$[ebp], eax
; Line 89
	mov	ecx, DWORD PTR __Arglist$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __String$[ebp]
	push	eax
	call	DWORD PTR __imp___vswprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ret$[ebp], eax
; Line 90
	mov	DWORD PTR __Arglist$[ebp], 0
; Line 91
	mov	eax, DWORD PTR __Ret$[ebp]
; Line 92
	mov	esp, ebp
	pop	ebp
	ret	0
?swprintf@@YAHPAGPBGZZ ENDP				; swprintf
_TEXT	ENDS
PUBLIC	??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode
PUBLIC	??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T152829 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T152829[ebp], esp
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 437
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Tidy
; Line 522
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>
PUBLIC	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
; Function compile flags: /Odtp
;	COMDAT ?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin, COMDAT
; _this$ = ecx
; Line 533
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 535
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end, COMDAT
; _this$ = ecx
; Line 543
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 545
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
_TEXT	ENDS
PUBLIC	?_Insert@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Insert
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T152853 = -16						; size = 8
$T152852 = -8						; size = 8
__Val$ = 8						; size = 4
?push_back@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::push_back, COMDAT
; _this$ = ecx
; Line 669
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 670
	lea	eax, DWORD PTR $T152853[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T152852[ebp], ecx
	mov	DWORD PTR $T152852[ebp+4], edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T152852[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T152852[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Insert
; Line 671
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::push_back
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::destroy
PUBLIC	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear, COMDAT
; _this$ = ecx
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 832
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax], ecx
; Line 834
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax], edx
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 837
	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+20]
	je	SHORT $LN4@clear
; Line 839
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], edx
; Line 840
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::destroy
; Line 841
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
; Line 842
	jmp	SHORT $LN2@clear
$LN4@clear:
; Line 843
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator*
PUBLIC	??1INFO@Message@@QAE@XZ				; Message::INFO::~INFO
PUBLIC	??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ	; std::pair<unsigned int const ,Message::INFO>::~pair<unsigned int const ,Message::INFO>
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::insert
PUBLIC	??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z ; std::pair<unsigned int const ,Message::INFO>::pair<unsigned int const ,Message::INFO>
PUBLIC	??0INFO@Message@@QAE@XZ				; Message::INFO::INFO
PUBLIC	??R?$less@I@std@@QBE_NABI0@Z			; std::less<unsigned int>::operator()
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::lower_bound
;	COMDAT xdata$x
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\mapvc7.h
xdata$x	SEGMENT
__unwindtable$??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z$1
__ehfuncinfo$??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z
_TEXT	SEGMENT
tv168 = -652						; size = 4
tv170 = -648						; size = 4
tv166 = -644						; size = 4
tv169 = -640						; size = 4
_this$ = -636						; size = 4
$T152861 = -632						; size = 8
$T152860 = -624						; size = 296
$T152859 = -328						; size = 300
$T152858 = -28						; size = 8
__Where$ = -20						; size = 8
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z PROC ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[], COMDAT
; _this$ = ecx
; Line 142
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 640				; 00000280H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 143
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::lower_bound
; Line 144
	lea	edx, DWORD PTR $T152858[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@operator
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	je	$LN2@operator
$LN1@operator:
; Line 146
	lea	ecx, DWORD PTR $T152860[ebp]
	call	??0INFO@Message@@QAE@XZ			; Message::INFO::INFO
	mov	DWORD PTR tv169[ebp], eax
	mov	eax, DWORD PTR tv169[ebp]
	mov	DWORD PTR tv166[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv166[ebp]
	push	ecx
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T152859[ebp]
	call	??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z ; std::pair<unsigned int const ,Message::INFO>::pair<unsigned int const ,Message::INFO>
	mov	DWORD PTR tv170[ebp], eax
	mov	eax, DWORD PTR tv170[ebp]
	mov	DWORD PTR tv168[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv168[ebp]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152861[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::insert
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR __Where$[ebp], edx
	mov	DWORD PTR __Where$[ebp+4], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T152859[ebp]
	call	??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T152860[ebp]
	call	??1INFO@Message@@QAE@XZ
$LN2@operator:
; Line 147
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??Diterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator*
	add	eax, 4
; Line 148
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z$0:
	lea	ecx, DWORD PTR $T152860[ebp]
	jmp	??1INFO@Message@@QAE@XZ
__unwindfunclet$??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z$1:
	lea	ecx, DWORD PTR $T152859[ebp]
	jmp	??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ
__ehhandler$??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-644]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??A?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAEAAVINFO@Message@@ABI@Z ENDP ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::operator[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	__imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ:PROC
;	COMDAT xdata$x
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\message.cpp
xdata$x	SEGMENT
__unwindtable$??0INFO@Message@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0INFO@Message@@QAE@XZ$0
__ehfuncinfo$??0INFO@Message@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0INFO@Message@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0INFO@Message@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0INFO@Message@@QAE@XZ PROC				; Message::INFO::INFO, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0INFO@Message@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	push	eax
	mov	ecx, DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	push	ecx
	push	10					; 0000000aH
	push	28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+280], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+284], -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+288], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+289], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+292], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0INFO@Message@@QAE@XZ$0:
	mov	eax, DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	push	eax
	push	10					; 0000000aH
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$??0INFO@Message@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0INFO@Message@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0INFO@Message@@QAE@XZ ENDP				; Message::INFO::INFO
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost
; Function compile flags: /Odtp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin, COMDAT
; _this$ = ecx
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 407
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 408
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 409
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end, COMDAT
; _this$ = ecx
; Line 417
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 418
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 419
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,unsigned int>
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@V123@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::equal_range
; Function compile flags: /Odtp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEIABI@Z
_TEXT	SEGMENT
_this$ = -32						; size = 4
$T152885 = -28						; size = 8
__Where$ = -20						; size = 16
__Num$ = -4						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEIABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase, COMDAT
; _this$ = ecx
; Line 765
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	DWORD PTR _this$[ebp], ecx
; Line 766
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equal_range@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@V123@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::equal_range
; Line 767
	mov	DWORD PTR __Num$[ebp], 0
; Line 768
	lea	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,unsigned int>
	add	esp, 20					; 00000014H
; Line 769
	mov	ecx, DWORD PTR __Where$[ebp+12]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T152885[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase
; Line 770
	mov	eax, DWORD PTR __Num$[ebp]
; Line 771
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEIABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z
_TEXT	SEGMENT
tv137 = -36						; size = 4
_this$ = -32						; size = 4
$T152891 = -28						; size = 8
$T152889 = -20						; size = 8
$T152888 = -12						; size = 4
__Where$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find, COMDAT
; _this$ = ecx
; Line 787
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx
; Line 788
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::lower_bound
; Line 790
	lea	edx, DWORD PTR $T152889[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@find
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@find
	lea	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN4@find
$LN3@find:
	lea	ecx, DWORD PTR $T152891[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	mov	DWORD PTR tv137[ebp], eax
$LN4@find:
	mov	edx, DWORD PTR tv137[ebp]
	mov	DWORD PTR $T152888[ebp], edx
	mov	eax, DWORD PTR $T152888[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 791
	mov	esp, ebp
	pop	ebp
	ret	8
?find@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::find
_TEXT	ENDS
PUBLIC	??0?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::_Iterator<1>
PUBLIC	?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode
; Function compile flags: /Odtp
;	COMDAT ?begin@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 533
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 535
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::end, COMDAT
; _this$ = ecx
; Line 543
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 545
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 725
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	sub	eax, DWORD PTR [ecx+12]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
; Line 727
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
_TEXT	ENDS
EXTRN	__imp___invalid_parameter_noinfo:PROC
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@I@Z PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator[], COMDAT
; _this$ = ecx
; Line 774
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 783
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
	cmp	DWORD PTR __Pos$[ebp], eax
	jb	SHORT $LN2@operator@2
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@2:
	xor	eax, eax
	jne	SHORT $LN2@operator@2
; Line 785
	mov	eax, DWORD PTR __Pos$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+12]
; Line 786
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@I@Z ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator[]
_TEXT	ENDS
PUBLIC	?insert@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@ABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::insert
PUBLIC	?end@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::end
PUBLIC	?_Ufill@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAV32@IABV32@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Ufill
PUBLIC	?capacity@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::capacity
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEXABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T152905 = -24						; size = 8
$T152904 = -16						; size = 8
$T152903 = -8						; size = 8
__Val$ = 8						; size = 4
?push_back@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEXABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::push_back, COMDAT
; _this$ = ecx
; Line 809
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 810
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::capacity
	cmp	esi, eax
	jae	SHORT $LN2@push_back
; Line 819
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAV32@IABV32@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Ufill
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 822
	jmp	SHORT $LN3@push_back
$LN2@push_back:
; Line 823
	lea	edx, DWORD PTR $T152904[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T152903[ebp], ecx
	mov	DWORD PTR $T152903[ebp+4], edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T152903[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T152903[ebp]
	push	edx
	lea	eax, DWORD PTR $T152905[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@ABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::insert
$LN3@push_back:
; Line 824
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEXABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::push_back
_TEXT	ENDS
PUBLIC	?erase@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@0@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::erase
PUBLIC	?begin@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::begin
; Function compile flags: /Odtp
;	COMDAT ?clear@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T152912 = -40						; size = 8
$T152911 = -32						; size = 8
$T152910 = -24						; size = 8
$T152909 = -16						; size = 8
$T152908 = -8						; size = 8
?clear@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::clear, COMDAT
; _this$ = ecx
; Line 1059
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1060
	lea	eax, DWORD PTR $T152909[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T152908[ebp], ecx
	mov	DWORD PTR $T152908[ebp+4], edx
	lea	eax, DWORD PTR $T152911[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::begin
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T152910[ebp], ecx
	mov	DWORD PTR $T152910[ebp+4], edx
	mov	eax, DWORD PTR $T152908[ebp+4]
	push	eax
	mov	ecx, DWORD PTR $T152908[ebp]
	push	ecx
	mov	edx, DWORD PTR $T152910[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T152910[ebp]
	push	eax
	lea	ecx, DWORD PTR $T152912[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@0@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::erase
; Line 1061
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::clear
_TEXT	ENDS
PUBLIC	??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator*
; Function compile flags: /Odtp
;	COMDAT ??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 393
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator*
; Line 395
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->, COMDAT
; _this$ = ecx
; Line 398
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 399
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*
; Line 400
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
_TEXT	ENDS
PUBLIC	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 411
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
; Line 412
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 413
	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
_TEXT	ENDS
PUBLIC	??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=, COMDAT
; _this$ = ecx
; Line 302
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 304
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 321
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 322
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Diterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator*
; Line 323
	mov	esp, ebp
	pop	ebp
	ret	0
??Citerator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU?$pair@$$CBIVINFO@Message@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator++
; Function compile flags: /Odtp
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx
; Line 326
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 327
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Econst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator++
; Line 328
	mov	eax, DWORD PTR _this$[ebp]
; Line 329
	mov	esp, ebp
	pop	ebp
	ret	0
??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx
; Line 240
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+4]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx+4]
	sete	al
; Line 242
	mov	esp, ebp
	pop	ebp
	ret	4
??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx
; Line 245
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 246
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 247
	mov	esp, ebp
	pop	ebp
	ret	4
??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::_List_val<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~_List_val<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
PUBLIC	?_Tidy@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAEXXZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAEXXZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Tidy
; Line 522
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
__ehhandler$??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
PUBLIC	??0?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::_Iterator<1>
PUBLIC	?_Nextnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Nextnode
; Function compile flags: /Odtp
;	COMDAT ?begin@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::begin, COMDAT
; _this$ = ecx
; Line 533
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	?_Nextnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 535
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::end, COMDAT
; _this$ = ecx
; Line 543
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 545
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::end
_TEXT	ENDS
PUBLIC	??D?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEAAUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator*
; Function compile flags: /Odtp
;	COMDAT ??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator->, COMDAT
; _this$ = ecx
; Line 398
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 399
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEAAUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator*
; Line 400
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEPAUHKPLAYERINFO@@XZ ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator->
_TEXT	ENDS
PUBLIC	??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEAAV012@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV012@H@Z PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 411
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEAAV012@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator++
; Line 412
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 413
	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator++
_TEXT	ENDS
PUBLIC	??8?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator!=, COMDAT
; _this$ = ecx
; Line 302
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 304
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator!=
_TEXT	ENDS
PUBLIC	??D?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEAAUINISECTIONVALUE@@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator*
; Function compile flags: /Odtp
;	COMDAT ??C?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEPAUINISECTIONVALUE@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEPAUINISECTIONVALUE@@XZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator->, COMDAT
; _this$ = ecx
; Line 398
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 399
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEAAUINISECTIONVALUE@@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator*
; Line 400
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEPAUINISECTIONVALUE@@XZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator->
_TEXT	ENDS
PUBLIC	??E?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEAAV012@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV012@H@Z PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 411
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEAAV012@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator++
; Line 412
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 413
	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator++
_TEXT	ENDS
PUBLIC	??8?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBE_NABV012@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBE_NABV012@@Z PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator!=, COMDAT
; _this$ = ecx
; Line 302
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBE_NABV012@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 304
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator!=
_TEXT	ENDS
PUBLIC	??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1INFO@Message@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1INFO@Message@@QAE@XZ$0
__ehfuncinfo$??1INFO@Message@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1INFO@Message@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1INFO@Message@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1INFO@Message@@QAE@XZ PROC				; Message::INFO::~INFO, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1INFO@Message@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	push	eax
	push	10					; 0000000aH
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1INFO@Message@@QAE@XZ$0:
	mov	eax, DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	push	eax
	push	10					; 0000000aH
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__ehhandler$??1INFO@Message@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1INFO@Message@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1INFO@Message@@QAE@XZ ENDP				; Message::INFO::~INFO
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ PROC		; std::pair<unsigned int const ,Message::INFO>::~pair<unsigned int const ,Message::INFO>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1INFO@Message@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1INFO@Message@@QAE@XZ
__ehhandler$??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ ENDP		; std::pair<unsigned int const ,Message::INFO>::~pair<unsigned int const ,Message::INFO>
PUBLIC	??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::_List_ptr<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~_List_ptr<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ PROC ; std::_List_val<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~_List_val<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~_List_val<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
PUBLIC	??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ PROC ; std::_List_ptr<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~_List_ptr<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_ptr@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ENDP ; std::_List_ptr<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~_List_ptr<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
__ehhandler$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<HKPLAYERINFO> >::~_Container_base_aux_alloc_real<std::allocator<HKPLAYERINFO> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<HKPLAYERINFO> >::~_Container_base_aux_alloc_real<std::allocator<HKPLAYERINFO> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<HKPLAYERINFO> >::~_Container_base_aux_alloc_real<std::allocator<HKPLAYERINFO> >
__ehhandler$??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::~_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >
; Function compile flags: /Odtp
;	COMDAT ??R?$less@I@std@@QBE_NABI0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@I@std@@QBE_NABI0@Z PROC			; std::less<unsigned int>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\functional
; Line 142
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 143
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	sbb	eax, eax
	neg	eax
; Line 144
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@I@std@@QBE_NABI0@Z ENDP			; std::less<unsigned int>::operator()
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 114
	push	ebp
	mov	ebp, esp
; Line 115
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 116
	pop	ebp
	ret	0
?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode, COMDAT
; Line 119
	push	ebp
	mov	ebp, esp
; Line 120
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 121
	pop	ebp
	ret	0
?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
_TEXT	ENDS
PUBLIC	?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Incsize
PUBLIC	?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode
PUBLIC	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
; Function compile flags: /Odtp
;	COMDAT ?_Insert@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__Newnode$ = -4						; size = 4
__Where$ = 8						; size = 8
__Val$ = 16						; size = 4
?_Insert@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Insert, COMDAT
; _this$ = ecx
; Line 710
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 717
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 718
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax
; Line 719
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Incsize
; Line 720
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 721
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 722
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Insert@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Insert
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocate
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$0
__unwindtable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode, COMDAT
; _this$ = ecx
; Line 1171
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1172
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1173
	mov	DWORD PTR __Linkcnt$[ebp], 0
; Line 1175
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1176
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct
; Line 1177
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1178
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct
	jmp	SHORT $LN5@Buynode
__catch$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$0:
; Line 1180
	cmp	DWORD PTR __Linkcnt$[ebp], 0
	jle	SHORT $LN1@Buynode
; Line 1181
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
$LN1@Buynode:
; Line 1182
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
; Line 1183
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1184
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$1
	ret	0
$LN5@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$1:
; Line 1185
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode:
; Line 1186
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Tidy, COMDAT
; _this$ = ecx
; Line 1212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1213
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear
; Line 1214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
; Line 1215
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
; Line 1216
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
; Line 1217
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 1218
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T153054 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T153054[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Line 86
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??1_Container_base_aux@std@@QAE@XZ		; std::_Container_base_aux::~_Container_base_aux
PUBLIC	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ$0
__ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 439
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
; Line 440
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
; Function compile flags: /Odtp
;	COMDAT ??1_Container_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base_aux@std@@QAE@XZ PROC			; std::_Container_base_aux::~_Container_base_aux, COMDAT
; _this$ = ecx
; Line 402
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base_aux@std@@QAE@XZ ENDP			; std::_Container_base_aux::~_Container_base_aux
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBIVINFO@Message@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Myval
; Function compile flags: /Odtp
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key, COMDAT
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 141
	push	ebp
	mov	ebp, esp
; Line 142
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBIVINFO@Message@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
; Line 143
	pop	ebp
	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::insert
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator--
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::size
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
; Function compile flags: /Odtp
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBIVINFO@Message@@@2@@Z
_TEXT	SEGMENT
_this$ = -72						; size = 4
$T153089 = -68						; size = 12
$T153088 = -56						; size = 8
$T153087 = -48						; size = 8
$T153086 = -40						; size = 8
$T153085 = -32						; size = 8
$T153084 = -24						; size = 8
$T153083 = -16						; size = 8
__Next$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
__Val$ = 20						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBIVINFO@Message@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::insert, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	DWORD PTR _this$[ebp], ecx
; Line 510
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
; Line 512
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::size
	test	eax, eax
	jne	SHORT $LN32@insert
; Line 513
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
	jmp	$LN31@insert
$LN32@insert:
; Line 514
	xor	ecx, ecx
	je	$LN30@insert
; Line 516
	lea	edx, DWORD PTR $T153083[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN29@insert
; Line 518
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN28@insert
; Line 519
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN28@insert:
; Line 520
	jmp	$LN27@insert
$LN29@insert:
; Line 521
	lea	edx, DWORD PTR $T153084[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@insert
; Line 523
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN25@insert
; Line 524
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	edx, DWORD PTR [eax]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN25@insert:
; Line 526
	jmp	$LN27@insert
$LN26@insert:
; Line 528
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	$LN23@insert
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR __Next$[ebp+4], ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??Fiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator--
	mov	ecx, eax
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN23@insert
; Line 530
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN22@insert
; Line 531
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
; Line 532
	jmp	SHORT $LN21@insert
$LN22@insert:
; Line 533
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN21@insert:
; Line 535
	jmp	$LN27@insert
$LN23@insert:
; Line 538
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	$LN27@insert
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR __Next$[ebp+4], ecx
	lea	edx, DWORD PTR $T153085[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
	mov	ecx, eax
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN18@insert
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN27@insert
$LN18@insert:
; Line 540
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN17@insert
; Line 541
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
; Line 542
	jmp	SHORT $LN27@insert
$LN17@insert:
; Line 543
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN27@insert:
; Line 546
	jmp	$LN31@insert
$LN30@insert:
; Line 548
	lea	eax, DWORD PTR $T153086[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@insert
; Line 550
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@insert
; Line 551
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN13@insert:
; Line 552
	jmp	$LN31@insert
$LN14@insert:
; Line 553
	lea	eax, DWORD PTR $T153087[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@insert
; Line 555
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@insert
; Line 556
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	eax, DWORD PTR [eax]
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN10@insert:
; Line 558
	jmp	$LN31@insert
$LN11@insert:
; Line 560
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	je	$LN8@insert
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR __Next$[ebp+4], edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??Fiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator--
	mov	ecx, eax
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@insert
; Line 562
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN7@insert
; Line 563
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	push	0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
; Line 564
	jmp	SHORT $LN6@insert
$LN7@insert:
; Line 565
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN6@insert:
; Line 567
	jmp	$LN31@insert
$LN8@insert:
; Line 570
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	je	$LN31@insert
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR __Next$[ebp+4], edx
	lea	eax, DWORD PTR $T153088[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
	mov	ecx, eax
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@insert
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN31@insert
$LN3@insert:
; Line 572
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN2@insert
; Line 573
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN33@insert
; Line 574
	jmp	SHORT $LN31@insert
$LN2@insert:
; Line 575
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN33@insert
$LN31@insert:
; Line 579
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T153089[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::insert
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN33@insert:
; Line 580
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::insert
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::clear
; Function compile flags: /Odtp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T153095 = -32						; size = 8
$T153094 = -24						; size = 8
$T153093 = -16						; size = 8
$T153092 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase, COMDAT
; _this$ = ecx
; Line 750
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx
; Line 751
	lea	eax, DWORD PTR $T153092[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@erase
	lea	edx, DWORD PTR $T153093[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@erase
; Line 753
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::clear
; Line 754
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase
; Line 756
	jmp	SHORT $LN5@erase
$LN2@erase:
; Line 758
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@erase
; Line 759
	push	0
	lea	ecx, DWORD PTR $T153094[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T153095[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase
	jmp	SHORT $LN2@erase
$LN1@erase:
; Line 760
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase:
; Line 762
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lbound
; Function compile flags: /Odtp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::lower_bound, COMDAT
; _this$ = ecx
; Line 809
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 810
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lbound
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 811
	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::upper_bound
; Function compile flags: /Odtp
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@V123@@2@ABI@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T153101 = -16						; size = 8
$T153100 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@V123@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::equal_range, COMDAT
; _this$ = ecx
; Line 829
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 830
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153100[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?upper_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::upper_bound
	push	eax
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	lea	eax, DWORD PTR $T153101[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::lower_bound
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 831
	mov	esp, ebp
	pop	ebp
	ret	8
?equal_range@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@V123@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
; Function compile flags: /Odtp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost, COMDAT
; _this$ = ecx
; Line 1004
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1005
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
; Line 1006
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 114
	push	ebp
	mov	ebp, esp
; Line 115
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 116
	pop	ebp
	ret	0
?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?capacity@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 634
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 635
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN3@capacity
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@capacity
$LN3@capacity:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	sub	eax, DWORD PTR [edx+12]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR tv70[ebp], eax
$LN4@capacity:
	mov	eax, DWORD PTR tv70[ebp]
; Line 636
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::capacity
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::begin, COMDAT
; _this$ = ecx
; Line 640
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 641
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 642
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::end, COMDAT
; _this$ = ecx
; Line 650
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 651
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 652
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::end
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+
PUBLIC	?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Insert_n
PUBLIC	??G?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator-
; Function compile flags: /Odtp
;	COMDAT ?insert@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@ABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
tv77 = -28						; size = 4
_this$ = -24						; size = 4
$T153119 = -20						; size = 8
$T153116 = -12						; size = 8
__Off$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
__Val$ = 20						; size = 4
?insert@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@ABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::insert, COMDAT
; _this$ = ecx
; Line 875
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 876
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
	test	eax, eax
	jne	SHORT $LN3@insert@2
	mov	DWORD PTR tv77[ebp], 0
	jmp	SHORT $LN4@insert@2
$LN3@insert@2:
	lea	eax, DWORD PTR $T153116[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??G?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator-
	mov	DWORD PTR tv77[ebp], eax
$LN4@insert@2:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR __Off$[ebp], ecx
; Line 877
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR __Where$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Insert_n
; Line 878
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153119[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::begin
	mov	ecx, eax
	call	??H?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 879
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@ABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::insert
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@0@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Destroy
PUBLIC	??$unchecked_copy@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00@Z ; stdext::unchecked_copy<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
PUBLIC	??9?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator!=
PUBLIC	?_Make_iter@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Make_iter
; Function compile flags: /Odtp
;	COMDAT ?erase@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Ptr$147861 = -20					; size = 4
__Last$ = -16						; size = 8
__First$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 8
__Last_arg$ = 20					; size = 8
?erase@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@0@Z PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::erase, COMDAT
; _this$ = ecx
; Line 1028
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1029
	mov	eax, DWORD PTR __First_arg$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __First_arg$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Make_iter
; Line 1030
	mov	eax, DWORD PTR __Last_arg$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Last_arg$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Make_iter
; Line 1032
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@erase@2
; Line 1045
	mov	edx, DWORD PTR __First$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp+4]
	push	edx
	call	??$unchecked_copy@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00@Z ; stdext::unchecked_copy<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$147861[ebp], eax
; Line 1048
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR __Ptr$147861[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@0@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Destroy
; Line 1049
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$147861[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN1@erase@2:
; Line 1054
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1056
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?erase@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@0@Z ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::erase
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@stdext@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IABV12@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@Z ; stdext::unchecked_uninitialized_fill_n<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,unsigned int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ?_Ufill@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAV32@IABV32@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAV32@IABV32@@Z PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Ufill, COMDAT
; _this$ = ecx
; Line 1253
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1254
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$unchecked_uninitialized_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@stdext@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IABV12@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@Z ; stdext::unchecked_uninitialized_fill_n<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,unsigned int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	add	esp, 16					; 00000010H
; Line 1255
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR __Ptr$[ebp]
; Line 1256
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Ufill@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAV32@IABV32@@Z ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Ufill
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 361
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Const_iterator<1>
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 403
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
; Line 406
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
_TEXT	ENDS
PUBLIC	?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Myval
PUBLIC	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
PUBLIC	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ	; std::_Iterator_base_aux::_Has_container
; Function compile flags: /Odtp
;	COMDAT ??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator*, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@3
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@3:
	xor	edx, edx
	jne	SHORT $LN7@operator@3
$LN10@operator@3:
; Line 223
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@3
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@3:
	xor	eax, eax
	jne	SHORT $LN2@operator@3
$LN5@operator@3:
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Myval
	add	esp, 4
; Line 227
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator*
_TEXT	ENDS
PUBLIC	?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Aux_cont::_Getcont
; Function compile flags: /Odtp
;	COMDAT ?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ PROC ; std::_Iterator_base_aux::_Getmycont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 457
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 458
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Aux_cont::_Getcont
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $LN4@Getmycont
$LN3@Getmycont:
	mov	DWORD PTR tv67[ebp], 0
$LN4@Getmycont:
	mov	eax, DWORD PTR tv67[ebp]
; Line 459
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ENDP ; std::_Iterator_base_aux::_Getmycont
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ PROC ; std::_Aux_cont::_Getcont, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 369
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 370
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ENDP ; std::_Aux_cont::_Getcont
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Has_container@_Iterator_base_aux@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Has_container@_Iterator_base_aux@std@@QBE_NXZ PROC	; std::_Iterator_base_aux::_Has_container, COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	setne	cl
	mov	al, cl
; Line 469
	mov	esp, ebp
	pop	ebp
	ret	0
?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ENDP	; std::_Iterator_base_aux::_Has_container
_TEXT	ENDS
PUBLIC	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
; Function compile flags: /Odtp
;	COMDAT ??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 290
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 295
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN6@operator@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@operator@4
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@operator@4
$LN4@operator@4:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@4:
	xor	ecx, ecx
	jne	SHORT $LN2@operator@4
$LN6@operator@4:
; Line 298
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	sete	dl
	mov	al, dl
; Line 299
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z PROC ; std::_Iterator_base_aux::_Same_container, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 462
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx]
	sete	al
; Line 464
	mov	esp, ebp
	pop	ebp
	ret	4
?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ENDP ; std::_Iterator_base_aux::_Same_container
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::const_iterator
; Function compile flags: /Odtp
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 312
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::const_iterator
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator*
; Function compile flags: /Odtp
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBIVINFO@Message@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Diterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBIVINFO@Message@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx
; Line 316
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 317
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBIVINFO@Message@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator*
; Line 318
	mov	esp, ebp
	pop	ebp
	ret	0
??Diterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBIVINFO@Message@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Inc
; Function compile flags: /Odtp
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Econst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx
; Line 214
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 215
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Inc
; Line 216
	mov	eax, DWORD PTR _this$[ebp]
; Line 217
	mov	esp, ebp
	pop	ebp
	ret	0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx
; Line 283
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 285
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 114
	push	ebp
	mov	ebp, esp
; Line 115
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 116
	pop	ebp
	ret	0
?_Nextnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Nextnode
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>::deallocate
PUBLIC	?_Prevnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Prevnode
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node *>::destroy
PUBLIC	?clear@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEXXZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::clear
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAEXXZ PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1213
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEXXZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::clear
; Line 1214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node *>::destroy
; Line 1215
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node *>::destroy
; Line 1216
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>::deallocate
; Line 1217
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 1218
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAEXXZ ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Tidy
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ$0
__ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<HKPLAYERINFO> >::~_Container_base_aux_alloc_real<std::allocator<HKPLAYERINFO> >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 439
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
; Line 440
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_base_aux_alloc_real@V?$allocator@UHKPLAYERINFO@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<HKPLAYERINFO> >::~_Container_base_aux_alloc_real<std::allocator<HKPLAYERINFO> >
PUBLIC	??0?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::_Iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 361
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::_Const_iterator<1>
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::_Iterator<1>
_TEXT	ENDS
PUBLIC	??D?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEABUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator*
; Function compile flags: /Odtp
;	COMDAT ??D?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEAAUHKPLAYERINFO@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEAAUHKPLAYERINFO@@XZ PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator*, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEABUHKPLAYERINFO@@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator*
; Line 395
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEAAUHKPLAYERINFO@@XZ ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator*
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEAAV012@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 403
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEAAV012@XZ ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator++
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
; Line 406
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Iterator<1>::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator==, COMDAT
; _this$ = ecx
; Line 290
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 295
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN6@operator@5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@operator@5
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@operator@5
$LN4@operator@5:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@5:
	xor	ecx, ecx
	jne	SHORT $LN2@operator@5
$LN6@operator@5:
; Line 298
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	sete	dl
	mov	al, dl
; Line 299
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator==
_TEXT	ENDS
PUBLIC	??0INFO@Message@@QAE@ABV01@@Z			; Message::INFO::INFO
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
xdata$x	SEGMENT
__unwindtable$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z$0
__ehfuncinfo$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z PROC ; std::pair<unsigned int const ,Message::INFO>::pair<unsigned int const ,Message::INFO>, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR __Val2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0INFO@Message@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 51
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1INFO@Message@@QAE@XZ
__ehhandler$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABIABVINFO@Message@@@Z ENDP ; std::pair<unsigned int const ,Message::INFO>::pair<unsigned int const ,Message::INFO>
PUBLIC	??0?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::_Iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 361
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::_Const_iterator<1>
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::_Iterator<1>
_TEXT	ENDS
PUBLIC	??D?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEABUINISECTIONVALUE@@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator*
; Function compile flags: /Odtp
;	COMDAT ??D?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEAAUINISECTIONVALUE@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEAAUINISECTIONVALUE@@XZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator*, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEABUINISECTIONVALUE@@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator*
; Line 395
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEAAUINISECTIONVALUE@@XZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator*
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEAAV012@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 403
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEAAV012@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator++
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
; Line 406
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Iterator<1>::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBE_NABV012@@Z PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator==, COMDAT
; _this$ = ecx
; Line 290
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 295
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN6@operator@6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@operator@6
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@operator@6
$LN4@operator@6:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@6:
	xor	ecx, ecx
	jne	SHORT $LN2@operator@6
$LN6@operator@6:
; Line 298
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	sete	dl
	mov	al, dl
; Line 299
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator==
_TEXT	ENDS
EXTRN	??__C@YGXPAX0IHP6EX00@ZP6EX0@Z@Z:PROC		; `eh vector copy constructor iterator'
; Function compile flags: /Odtp
;	COMDAT ??0INFO@Message@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0INFO@Message@@QAE@ABV01@@Z PROC			; Message::INFO::INFO, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	push	eax
	mov	ecx, DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z
	push	ecx
	push	10					; 0000000aH
	push	28					; 0000001cH
	mov	edx, DWORD PTR ___that$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??__C@YGXPAX0IHP6EX00@ZP6EX0@Z@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+280]
	mov	DWORD PTR [ecx+280], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+284]
	mov	DWORD PTR [ecx+284], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+288]
	mov	BYTE PTR [ecx+288], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	al, BYTE PTR [edx+289]
	mov	BYTE PTR [ecx+289], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+292]
	mov	DWORD PTR [ecx+292], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0INFO@Message@@QAE@ABV01@@Z ENDP			; Message::INFO::INFO
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z PROC ; std::allocator<std::_Aux_cont>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ENDP ; std::allocator<std::_Aux_cont>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 124
	push	ebp
	mov	ebp, esp
; Line 125
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 126
	pop	ebp
	ret	0
?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Myval
_TEXT	ENDS
PUBLIC	?construct@?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAEXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV32@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::construct
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z$0
__unwindtable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z$2
__ehfuncinfo$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode, COMDAT
; _this$ = ecx
; Line 1190
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1191
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1192
	mov	DWORD PTR __Linkcnt$[ebp], 0
; Line 1194
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1195
	lea	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct
; Line 1196
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1197
	lea	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct
; Line 1198
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1199
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Myval
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?construct@?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAEXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV32@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::construct
	jmp	SHORT $LN6@Buynode@2
__catch$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z$0:
; Line 1201
	cmp	DWORD PTR __Linkcnt$[ebp], 1
	jle	SHORT $LN2@Buynode@2
; Line 1202
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
$LN2@Buynode@2:
; Line 1203
	cmp	DWORD PTR __Linkcnt$[ebp], 0
	jle	SHORT $LN1@Buynode@2
; Line 1204
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
$LN1@Buynode@2:
; Line 1205
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
; Line 1206
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1207
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z$1
	ret	0
$LN6@Buynode@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z$1:
; Line 1208
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN5@Buynode@2:
; Line 1209
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@0ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEIXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::max_size
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z$0
__ehfuncinfo$?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -84						; size = 4
$T153212 = -80						; size = 28
$T153211 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Incsize, COMDAT
; _this$ = ecx
; Line 1239
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1240
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEIXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+24]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize
; Line 1241
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T153212[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR $T153212[ebp]
	push	edx
	lea	ecx, DWORD PTR $T153211[ebp]
	call	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	eax, DWORD PTR $T153211[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T153212[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@Incsize:
; Line 1242
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN3@Incsize:
; Line 1243
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T153212[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Incsize
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@length_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@EA@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT
; _this$ = ecx
; Line 105
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7length_error@std@@6B@
; Line 106
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR __Message$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 27
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1logic_error@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1logic_error@std@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1logic_error@std@@UAE@XZ$1
__ehfuncinfo$??1logic_error@std@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1logic_error@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1logic_error@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 31
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1logic_error@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__unwindfunclet$??1logic_error@std@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??1logic_error@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1logic_error@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Odtp
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 35
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
; Line 36
	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1length_error@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1length_error@std@@UAE@XZ$0
__ehfuncinfo$??1length_error@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1length_error@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx
; Line 109
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1length_error@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 110
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1length_error@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??1length_error@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1length_error@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1length_error@std@@UAE@XZ		; std::length_error::~length_error
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
PUBLIC	??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T153276 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T153276[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Line 68
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocate, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *,std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *,std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil, COMDAT
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 136
	push	ebp
	mov	ebp, esp
; Line 137
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 313				; 00000139H
; Line 138
	pop	ebp
	ret	0
?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left, COMDAT
; Line 146
	push	ebp
	mov	ebp, esp
; Line 147
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 148
	pop	ebp
	ret	0
?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right, COMDAT
; Line 156
	push	ebp
	mov	ebp, esp
; Line 157
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 158
	pop	ebp
	ret	0
?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBIVINFO@Message@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBIVINFO@Message@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Myval, COMDAT
; Line 161
	push	ebp
	mov	ebp, esp
; Line 162
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 12					; 0000000cH
; Line 163
	pop	ebp
	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBIVINFO@Message@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Myval
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::size, COMDAT
; _this$ = ecx
; Line 447
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 448
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 449
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::size
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
; Function compile flags: /Odtp
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z
_TEXT	SEGMENT
tv90 = -76						; size = 4
_this$ = -72						; size = 4
$T153313 = -65						; size = 1
$T153312 = -64						; size = 8
$T153311 = -53						; size = 1
$T153310 = -52						; size = 8
$T153309 = -41						; size = 1
$T153308 = -40						; size = 8
$T153307 = -32						; size = 8
$T153306 = -21						; size = 1
__Where$148328 = -20					; size = 8
__Trynode$ = -12					; size = 4
__Wherenode$ = -8					; size = 4
__Addleft$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::insert, COMDAT
; _this$ = ecx
; Line 477
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 478
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$[ebp], eax
; Line 479
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Wherenode$[ebp], edx
; Line 480
	mov	BYTE PTR __Addleft$[ebp], 1
$LN10@insert@3:
; Line 481
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN9@insert@3
; Line 483
	mov	edx, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], edx
; Line 484
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	mov	BYTE PTR __Addleft$[ebp], al
; Line 485
	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN13@insert@3
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv90[ebp], ecx
	jmp	SHORT $LN14@insert@3
$LN13@insert@3:
	mov	edx, DWORD PTR __Trynode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv90[ebp], eax
$LN14@insert@3:
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR __Trynode$[ebp], ecx
; Line 486
	jmp	SHORT $LN10@insert@3
$LN9@insert@3:
; Line 488
	xor	edx, edx
	je	SHORT $LN8@insert@3
; Line 489
	mov	BYTE PTR $T153306[ebp], 1
	lea	eax, DWORD PTR $T153306[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153307[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@insert@3
; Line 490
	jmp	$LN11@insert@3
$LN8@insert@3:
; Line 492
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$148328[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
; Line 493
	movzx	eax, BYTE PTR __Addleft$[ebp]
	test	eax, eax
	jne	SHORT $LN6@insert@3
	jmp	SHORT $LN5@insert@3
$LN6@insert@3:
; Line 495
	lea	ecx, DWORD PTR $T153308[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$148328[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@insert@3
; Line 496
	mov	BYTE PTR $T153309[ebp], 1
	lea	eax, DWORD PTR $T153309[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T153310[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@insert@3
; Line 497
	jmp	SHORT $LN5@insert@3
$LN4@insert@3:
; Line 498
	lea	ecx, DWORD PTR __Where$148328[ebp]
	call	??Fiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator--
$LN5@insert@3:
; Line 500
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$148328[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@insert@3
; Line 501
	mov	BYTE PTR $T153311[ebp], 1
	lea	eax, DWORD PTR $T153311[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153312[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN11@insert@3
; Line 502
	jmp	SHORT $LN11@insert@3
$LN2@insert@3:
; Line 503
	mov	BYTE PTR $T153313[ebp], 0
	lea	edx, DWORD PTR $T153313[ebp]
	push	edx
	lea	eax, DWORD PTR __Where$148328[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN11@insert@3:
; Line 505
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::insert
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::deallocate
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::destroy
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lrotate
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Max
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Min
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
tv189 = -108						; size = 4
tv177 = -104						; size = 4
_this$ = -100						; size = 4
$T153317 = -96						; size = 28
$T153316 = -68						; size = 40
__Fixnodeparent$ = -28					; size = 4
__Pnode$ = -24						; size = 4
__Fixnode$ = -20					; size = 4
__Erasednode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase, COMDAT
; _this$ = ecx
; Line 590
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 591
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN40@erase@3
; Line 592
	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	lea	ecx, DWORD PTR $T153317[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T153317[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T153316[ebp]
	call	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
	push	OFFSET __TI3?AVout_of_range@std@@
	lea	edx, DWORD PTR $T153316[ebp]
	push	edx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T153317[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN40@erase@3:
; Line 593
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	mov	DWORD PTR __Erasednode$[ebp], eax
; Line 594
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
; Line 598
	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 600
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN39@erase@3
; Line 601
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], edx
	jmp	SHORT $LN38@erase@3
$LN39@erase@3:
; Line 602
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN37@erase@3
; Line 603
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx
; Line 604
	jmp	SHORT $LN38@erase@3
$LN37@erase@3:
; Line 606
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 607
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], eax
$LN38@erase@3:
; Line 610
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	$LN35@erase@3
; Line 612
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax
; Line 613
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN34@erase@3
; Line 614
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN34@erase@3:
; Line 616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN33@erase@3
; Line 617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN32@erase@3
$LN33@erase@3:
; Line 618
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN31@erase@3
; Line 619
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 620
	jmp	SHORT $LN32@erase@3
$LN31@erase@3:
; Line 621
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN32@erase@3:
; Line 623
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN29@erase@3
; Line 626
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN43@erase@3
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv177[ebp], edx
	jmp	SHORT $LN44@erase@3
$LN43@erase@3:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Min@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Min
	add	esp, 4
	mov	DWORD PTR tv177[ebp], eax
$LN44@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost
	mov	ecx, DWORD PTR tv177[ebp]
	mov	DWORD PTR [eax], ecx
$LN29@erase@3:
; Line 628
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN28@erase@3
; Line 631
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN45@erase@3
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv189[ebp], edx
	jmp	SHORT $LN46@erase@3
$LN45@erase@3:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Max@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Max
	add	esp, 4
	mov	DWORD PTR tv189[ebp], eax
$LN46@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	ecx, DWORD PTR tv189[ebp]
	mov	DWORD PTR [eax], ecx
$LN28@erase@3:
; Line 633
	jmp	$LN27@erase@3
$LN35@erase@3:
; Line 635
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 636
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 638
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN26@erase@3
; Line 639
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], edx
; Line 640
	jmp	$LN25@erase@3
$LN26@erase@3:
; Line 642
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
; Line 643
	mov	edx, DWORD PTR __Fixnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN24@erase@3
; Line 644
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], edx
$LN24@erase@3:
; Line 645
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 646
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 647
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN25@erase@3:
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN23@erase@3
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN22@erase@3
$LN23@erase@3:
; Line 652
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN21@erase@3
; Line 653
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 654
	jmp	SHORT $LN22@erase@3
$LN21@erase@3:
; Line 655
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@erase@3:
; Line 657
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 658
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	push	eax
	call	??$swap@D@std@@YAXAAD0@Z		; std::swap<char>
	add	esp, 8
$LN27@erase@3:
; Line 661
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	$LN19@erase@3
; Line 664
	jmp	SHORT $LN18@erase@3
$LN17@erase@3:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
$LN18@erase@3:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	edx, DWORD PTR __Fixnode$[ebp]
	cmp	edx, DWORD PTR [eax]
	je	$LN16@erase@3
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN16@erase@3
; Line 665
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN15@erase@3
; Line 667
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 668
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN14@erase@3
; Line 670
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 671
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 672
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lrotate
; Line 673
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN14@erase@3:
; Line 676
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN13@erase@3
; Line 677
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx
; Line 678
	jmp	$LN12@erase@3
$LN13@erase@3:
; Line 679
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase@3
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase@3
; Line 681
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 682
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax
; Line 684
	jmp	$LN12@erase@3
$LN11@erase@3:
; Line 686
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 1
	jne	SHORT $LN9@erase@3
; Line 688
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 689
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 690
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rrotate
; Line 691
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN9@erase@3:
; Line 694
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl
; Line 695
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 696
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 697
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lrotate
; Line 698
	jmp	$LN16@erase@3
$LN12@erase@3:
; Line 701
	jmp	$LN8@erase@3
$LN15@erase@3:
; Line 703
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 704
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN7@erase@3
; Line 706
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 707
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 708
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rrotate
; Line 709
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN7@erase@3:
; Line 711
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@erase@3
; Line 712
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], edx
; Line 713
	jmp	$LN8@erase@3
$LN6@erase@3:
; Line 714
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase@3
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase@3
; Line 716
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 717
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx
; Line 719
	jmp	$LN8@erase@3
$LN4@erase@3:
; Line 721
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN2@erase@3
; Line 723
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 724
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 725
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lrotate
; Line 726
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN2@erase@3:
; Line 729
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl
; Line 730
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 731
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 732
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rrotate
; Line 733
	jmp	SHORT $LN16@erase@3
$LN8@erase@3:
; Line 735
	jmp	$LN17@erase@3
$LN16@erase@3:
; Line 737
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
$LN19@erase@3:
; Line 740
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::destroy
; Line 741
	push	1
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::deallocate
; Line 743
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jbe	SHORT $LN1@erase@3
; Line 744
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN1@erase@3:
; Line 746
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN42@erase@3:
; Line 747
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z$0:
	lea	ecx, DWORD PTR $T153317[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@
; Line 130
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1out_of_range@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1out_of_range@std@@UAE@XZ$0
__ehfuncinfo$??1out_of_range@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1out_of_range@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1out_of_range@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 134
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1out_of_range@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??1out_of_range@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1out_of_range@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
; Function compile flags: /Odtp
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ		; std::out_of_range::~out_of_range
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0out_of_range@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0out_of_range@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0out_of_range@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0out_of_range@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0out_of_range@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0out_of_range@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??0out_of_range@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0out_of_range@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
; Function compile flags: /Odtp
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent, COMDAT
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 151
	push	ebp
	mov	ebp, esp
; Line 152
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 153
	pop	ebp
	ret	0
?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Erase
; Function compile flags: /Odtp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::clear, COMDAT
; _this$ = ecx
; Line 780
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 781
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Erase
; Line 782
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 783
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 784
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::clear
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Ubound
; Function compile flags: /Odtp
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::upper_bound, COMDAT
; _this$ = ecx
; Line 819
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 820
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ubound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Ubound
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 821
	mov	esp, ebp
	pop	ebp
	ret	8
?upper_bound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Buynode
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::max_size
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z$0
__ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z
_TEXT	SEGMENT
_this$ = -92						; size = 4
$T153367 = -88						; size = 28
$T153366 = -60						; size = 40
__Pnode$148424 = -20					; size = 4
__Newnode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert, COMDAT
; _this$ = ecx
; Line 911
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 912
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::max_size
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+8]
	ja	SHORT $LN17@Insert
; Line 913
	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T153367[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR $T153367[ebp]
	push	edx
	lea	ecx, DWORD PTR $T153366[ebp]
	call	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	eax, DWORD PTR $T153366[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T153367[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN17@Insert:
; Line 915
	push	0
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax
; Line 917
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 918
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	jne	SHORT $LN16@Insert
; Line 920
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 921
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN15@Insert
$LN16@Insert:
; Line 923
	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN14@Insert
; Line 925
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 926
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN13@Insert
; Line 927
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN13@Insert:
; Line 929
	jmp	SHORT $LN15@Insert
$LN14@Insert:
; Line 931
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 932
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN15@Insert
; Line 933
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN15@Insert:
; Line 936
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$148424[ebp], edx
$LN10@Insert:
	mov	eax, DWORD PTR __Pnode$148424[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN9@Insert
; Line 937
	mov	eax, DWORD PTR __Pnode$148424[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN8@Insert
; Line 939
	mov	edx, DWORD PTR __Pnode$148424[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], edx
; Line 940
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@Insert
; Line 942
	mov	edx, DWORD PTR __Pnode$148424[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 943
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 944
	mov	edx, DWORD PTR __Pnode$148424[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 945
	mov	edx, DWORD PTR __Pnode$148424[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$148424[ebp], ecx
; Line 947
	jmp	$LN6@Insert
$LN7@Insert:
; Line 949
	mov	edx, DWORD PTR __Pnode$148424[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@Insert
; Line 951
	mov	edx, DWORD PTR __Pnode$148424[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$148424[ebp], eax
; Line 952
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lrotate
$LN5@Insert:
; Line 954
	mov	edx, DWORD PTR __Pnode$148424[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 955
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 956
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rrotate
$LN6@Insert:
; Line 959
	jmp	$LN4@Insert
$LN8@Insert:
; Line 961
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], ecx
; Line 962
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN3@Insert
; Line 964
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 965
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 966
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 967
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$148424[ebp], eax
; Line 969
	jmp	$LN4@Insert
$LN3@Insert:
; Line 971
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@Insert
; Line 973
	mov	edx, DWORD PTR __Pnode$148424[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$148424[ebp], eax
; Line 974
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rrotate
$LN1@Insert:
; Line 976
	mov	edx, DWORD PTR __Pnode$148424[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 977
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 978
	mov	ecx, DWORD PTR __Pnode$148424[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lrotate
$LN4@Insert:
; Line 980
	jmp	$LN10@Insert
$LN9@Insert:
; Line 982
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 983
	mov	edx, DWORD PTR __Newnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert:
; Line 984
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z$0:
	lea	ecx, DWORD PTR $T153367[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABU?$pair@$$CBIVINFO@Message@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Insert
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
; Function compile flags: /Odtp
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABI@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__Wherenode$ = -4					; size = 4
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lbound, COMDAT
; _this$ = ecx
; Line 987
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 988
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 989
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Wherenode$[ebp], edx
$LN4@Lbound:
; Line 991
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound
; Line 992
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Lbound
; Line 993
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 994
	jmp	SHORT $LN1@Lbound
$LN2@Lbound:
; Line 996
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], ecx
; Line 997
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN1@Lbound:
; Line 998
	jmp	SHORT $LN4@Lbound
$LN3@Lbound:
; Line 1000
	mov	eax, DWORD PTR __Wherenode$[ebp]
; Line 1001
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lbound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lbound
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost, COMDAT
; _this$ = ecx
; Line 1048
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1049
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
; Line 1050
	mov	esp, ebp
	pop	ebp
	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z PROC ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn, COMDAT
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\mapvc7.h
; Line 63
	push	ebp
	mov	ebp, esp
; Line 64
	mov	eax, DWORD PTR __Val$[ebp]
; Line 65
	pop	ebp
	ret	0
?_Kfn@?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@SAABIABU?$pair@$$CBIVINFO@Message@@@2@@Z ENDP ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Kfn
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?_Make_iter@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 660
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 661
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 662
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Make_iter@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Make_iter
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@0@Z PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Destroy, COMDAT
; _this$ = ecx
; Line 1118
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1119
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	add	esp, 12					; 0000000cH
; Line 1120
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@0@Z ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00@Z ; stdext::_Unchecked_move_backward<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
PUBLIC	??$fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z ; std::fill<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
PUBLIC	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	?deallocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::deallocate
PUBLIC	??$_Umove@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PAV21@00@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Umove<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
PUBLIC	?allocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocate
PUBLIC	?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Xlen
PUBLIC	?max_size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::max_size
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$7 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$2
__catchsym$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$6 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$0
__ehfuncinfo$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__tryblocktable$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$6
	DD	03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$7
__unwindtable$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$4
	DD	02H
	DD	00H
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$5
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
tv84 = -100						; size = 4
_this$ = -96						; size = 4
__Tmp$148556 = -92					; size = 28
__Oldend$148557 = -64					; size = 4
__Tmp$148546 = -60					; size = 28
__Ncopied$148533 = -32					; size = 4
__Newvec$148531 = -28					; size = 4
__Whereoff$148532 = -24					; size = 4
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 8
__Count$ = 16						; size = 4
__Val$ = 20						; size = 4
?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Insert_n, COMDAT
; _this$ = ecx
; Line 1153
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 84					; 00000054H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1161
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1163
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN14@Insert_n
	jmp	$LN16@Insert_n
$LN14@Insert_n:
; Line 1165
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN12@Insert_n
; Line 1166
	call	?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Xlen
	jmp	$LN16@Insert_n
$LN12@Insert_n:
; Line 1167
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	$LN10@Insert_n
; Line 1170
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv84[ebp], edx
$LN18@Insert_n:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1171
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	SHORT $LN9@Insert_n
; Line 1172
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
$LN9@Insert_n:
; Line 1173
	mov	ecx, DWORD PTR __Capacity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocate
	mov	DWORD PTR __Newvec$148531[ebp], eax
; Line 1174
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Where$[ebp+4]
	sub	eax, DWORD PTR [edx+12]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR __Whereoff$148532[ebp], eax
; Line 1175
	mov	DWORD PTR __Ncopied$148533[ebp], 0
; Line 1177
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1178
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Whereoff$148532[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR __Newvec$148531[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAV32@IABV32@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Ufill
; Line 1179
	mov	edx, DWORD PTR __Ncopied$148533[ebp]
	add	edx, 1
	mov	DWORD PTR __Ncopied$148533[ebp], edx
; Line 1181
	mov	eax, DWORD PTR __Newvec$148531[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PAV21@00@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Umove<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
; Line 1182
	mov	ecx, DWORD PTR __Ncopied$148533[ebp]
	add	ecx, 1
	mov	DWORD PTR __Ncopied$148533[ebp], ecx
; Line 1184
	mov	edx, DWORD PTR __Whereoff$148532[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR __Newvec$148531[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PAV21@00@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Umove<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	jmp	SHORT $LN19@Insert_n
__catch$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$0:
; Line 1186
	cmp	DWORD PTR __Ncopied$148533[ebp], 1
	jle	SHORT $LN7@Insert_n
; Line 1187
	mov	eax, DWORD PTR __Whereoff$148532[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR __Newvec$148531[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$148531[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@0@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Destroy
$LN7@Insert_n:
; Line 1188
	cmp	DWORD PTR __Ncopied$148533[ebp], 0
	jle	SHORT $LN6@Insert_n
; Line 1189
	mov	edx, DWORD PTR __Whereoff$148532[ebp]
	imul	edx, 28					; 0000001cH
	add	edx, DWORD PTR __Newvec$148531[ebp]
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 28					; 0000001cH
	add	edx, eax
	push	edx
	mov	ecx, DWORD PTR __Whereoff$148532[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR __Newvec$148531[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@0@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Destroy
$LN6@Insert_n:
; Line 1190
	mov	edx, DWORD PTR __Capacity$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newvec$148531[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::deallocate
; Line 1191
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1192
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$1
	ret	0
$LN19@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$1:
; Line 1194
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
; Line 1195
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN5@Insert_n
; Line 1197
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@0@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Destroy
; Line 1198
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	sub	eax, DWORD PTR [ecx+12]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::deallocate
$LN5@Insert_n:
; Line 1205
	mov	ecx, DWORD PTR __Capacity$[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR __Newvec$148531[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], ecx
; Line 1206
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR __Newvec$148531[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 1207
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newvec$148531[ebp]
	mov	DWORD PTR [edx+12], eax
	jmp	$LN16@Insert_n
$LN10@Insert_n:
; Line 1209
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+16]
	sub	eax, DWORD PTR __Where$[ebp+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n
; Line 1211
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Tmp$148546[ebp]
	call	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+12], 2
; Line 1214
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR __Where$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PAV21@00@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Umove<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
; Line 1216
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 1218
	lea	ecx, DWORD PTR __Tmp$148546[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, DWORD PTR __Where$[ebp+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	sub	edx, eax
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAV32@IABV32@@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Ufill
	jmp	SHORT $LN21@Insert_n
__catch$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$2:
; Line 1220
	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+16]
	push	edx
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@0@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Destroy
; Line 1221
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1222
	mov	DWORD PTR __$EHRec$[ebp+12], 2
	mov	eax, __tryend$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$3
	ret	0
$LN21@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 2
__tryend$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$3:
; Line 1224
	mov	edx, DWORD PTR __Count$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+16]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], edx
; Line 1231
	lea	edx, DWORD PTR __Tmp$148546[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, eax
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+4]
	push	eax
	call	??$fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z ; std::fill<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
	add	esp, 12					; 0000000cH
; Line 1232
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Tmp$148546[ebp]
	call	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
; Line 1233
	jmp	$LN16@Insert_n
$LN3@Insert_n:
; Line 1235
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$148556[ebp]
	call	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+12], 5
; Line 1237
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR __Oldend$148557[ebp], eax
; Line 1239
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR __Oldend$148557[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR __Oldend$148557[ebp]
	sub	edx, ecx
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PAV21@00@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Umove<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 1246
	mov	edx, DWORD PTR __Oldend$148557[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	imul	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR __Oldend$148557[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	call	??$_Unchecked_move_backward@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00@Z ; stdext::_Unchecked_move_backward<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 12					; 0000000cH
; Line 1248
	lea	eax, DWORD PTR __Tmp$148556[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 28					; 0000001cH
	add	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	call	??$fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z ; std::fill<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
	add	esp, 12					; 0000000cH
; Line 1249
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Tmp$148556[ebp]
	call	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
$LN16@Insert_n:
; Line 1250
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$4:
	lea	ecx, DWORD PTR __Tmp$148546[ebp]
	jmp	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
__unwindfunclet$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z$5:
	lea	ecx, DWORD PTR __Tmp$148556[ebp]
	jmp	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
__ehhandler$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXV?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@2@IABV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Insert_n
PUBLIC	?max_size@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QBEIXZ ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::max_size, COMDAT
; _this$ = ecx
; Line 730
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 731
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?max_size@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QBEIXZ ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::max_size
; Line 732
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::max_size
_TEXT	ENDS
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ$0
__ehfuncinfo$?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ
_TEXT	SEGMENT
$T153417 = -80						; size = 28
$T153416 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Xlen, COMDAT
; Line 1259
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1260
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T153417[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T153417[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153416[ebp]
	call	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T153416[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T153417[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen:
; Line 1261
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T153417[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Xlen
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z PROC ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ENDP ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAV10@@Z ; std::_Allocate<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z PROC ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocate, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAV10@@Z ; std::_Allocate<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ENDP ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocate
_TEXT	ENDS
PUBLIC	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
PUBLIC	??0?$_Bidit@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@HPBV12@ABV12@@std@@QAE@XZ ; std::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Const_iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 176
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@HPBV12@ABV12@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 177
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@Const_iter
	cmp	DWORD PTR __Plist$[ebp], 0
	jne	SHORT $LN2@Const_iter
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@Const_iter:
	xor	eax, eax
	jne	SHORT $LN2@Const_iter
$LN5@Const_iter:
; Line 178
	mov	ecx, DWORD PTR __Plist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pcont$ = 8						; size = 4
?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z PROC ; std::_Iterator_base_aux::_Set_container, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 452
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pcont$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 454
	mov	esp, ebp
	pop	ebp
	ret	4
?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ENDP ; std::_Iterator_base_aux::_Set_container
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 246
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@7
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@7:
	xor	edx, edx
	jne	SHORT $LN7@operator@7
$LN10@operator@7:
; Line 247
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@7
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@7:
	xor	eax, eax
	jne	SHORT $LN2@operator@7
$LN5@operator@7:
; Line 250
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
; Line 252
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode, COMDAT
; _this$ = ecx
; Line 307
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 309
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::const_iterator
; Function compile flags: /Odtp
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 304
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::const_iterator
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::iterator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 334
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
; Line 335
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 336
	mov	esp, ebp
	pop	ebp
	ret	8
??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator--
; Function compile flags: /Odtp
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Fiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx
; Line 339
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 340
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator--
; Line 341
	mov	eax, DWORD PTR _this$[ebp]
; Line 342
	mov	esp, ebp
	pop	ebp
	ret	0
??Fiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??0?$_Bidit@U?$pair@$$CBIVINFO@Message@@@std@@HPBU12@ABU12@@std@@QAE@XZ ; std::_Bidit<std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &>::_Bidit<std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &>
; Function compile flags: /Odtp
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx
; Line 200
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@U?$pair@$$CBIVINFO@Message@@@std@@HPBU12@ABU12@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::const_iterator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBIVINFO@Message@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBIVINFO@Message@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx
; Line 204
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 205
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Myval@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBIVINFO@Message@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Myval
	add	esp, 4
; Line 206
	mov	esp, ebp
	pop	ebp
	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBIVINFO@Message@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$148640 = -4					; size = 4
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx
; Line 267
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN6@Inc
	jmp	$LN7@Inc
$LN6@Inc:
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN2@Inc
; Line 271
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Min@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 272
	jmp	SHORT $LN7@Inc
$LN2@Inc:
; Line 276
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$148640[ebp], ecx
	mov	edx, DWORD PTR __Pnode$148640[ebp]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN1@Inc
	mov	ecx, DWORD PTR __Pnode$148640[ebp]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@Inc
; Line 277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$148640[ebp]
	mov	DWORD PTR [edx+4], eax
	jmp	SHORT $LN2@Inc
$LN1@Inc:
; Line 278
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$148640[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN7@Inc:
; Line 280
	mov	esp, ebp
	pop	ebp
	ret	0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Inc
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Prevnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 119
	push	ebp
	mov	ebp, esp
; Line 120
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 121
	pop	ebp
	ret	0
?_Prevnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Prevnode
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>::destroy
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEXXZ PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::clear, COMDAT
; _this$ = ecx
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 832
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax], ecx
; Line 834
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax], edx
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 837
	jmp	SHORT $LN3@clear@2
$LN2@clear@2:
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+20]
	je	SHORT $LN4@clear@2
; Line 839
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], edx
; Line 840
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?destroy@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>::destroy
; Line 841
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>::deallocate
; Line 842
	jmp	SHORT $LN2@clear@2
$LN4@clear@2:
; Line 843
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEXXZ ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::clear
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node *>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node *>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??0?$_Bidit@UHKPLAYERINFO@@HPBU1@ABU1@@std@@QAE@XZ ; std::_Bidit<HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &>::_Bidit<HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::_Const_iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 176
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@UHKPLAYERINFO@@HPBU1@ABU1@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 177
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@Const_iter@2
	cmp	DWORD PTR __Plist$[ebp], 0
	jne	SHORT $LN2@Const_iter@2
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@Const_iter@2:
	xor	eax, eax
	jne	SHORT $LN2@Const_iter@2
$LN5@Const_iter@2:
; Line 178
	mov	ecx, DWORD PTR __Plist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PBV12@@Z ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::_Const_iterator<1>
_TEXT	ENDS
PUBLIC	?_Myval@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAUHKPLAYERINFO@@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Myval
; Function compile flags: /Odtp
;	COMDAT ??D?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEABUHKPLAYERINFO@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEABUHKPLAYERINFO@@XZ PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator*, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@8
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@8:
	xor	edx, edx
	jne	SHORT $LN7@operator@8
$LN10@operator@8:
; Line 223
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@8
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@8:
	xor	eax, eax
	jne	SHORT $LN2@operator@8
$LN5@operator@8:
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Myval@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAUHKPLAYERINFO@@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Myval
	add	esp, 4
; Line 227
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QBEABUHKPLAYERINFO@@XZ ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 246
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@9
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@9:
	xor	edx, edx
	jne	SHORT $LN7@operator@9
$LN10@operator@9:
; Line 247
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@9
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@9:
	xor	eax, eax
	jne	SHORT $LN2@operator@9
$LN5@operator@9:
; Line 250
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@PAU342@@Z ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
; Line 252
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Const_iterator@$00@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Const_iterator<1>::operator++
_TEXT	ENDS
PUBLIC	??0?$_Bidit@UINISECTIONVALUE@@HPBU1@ABU1@@std@@QAE@XZ ; std::_Bidit<INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &>::_Bidit<INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::_Const_iterator<1>, COMDAT
; _this$ = ecx
; Line 176
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@UINISECTIONVALUE@@HPBU1@ABU1@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 177
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@Const_iter@3
	cmp	DWORD PTR __Plist$[ebp], 0
	jne	SHORT $LN2@Const_iter@3
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@Const_iter@3:
	xor	eax, eax
	jne	SHORT $LN2@Const_iter@3
$LN5@Const_iter@3:
; Line 178
	mov	ecx, DWORD PTR __Plist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PBV12@@Z ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::_Const_iterator<1>
_TEXT	ENDS
PUBLIC	?_Myval@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAUINISECTIONVALUE@@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Myval
; Function compile flags: /Odtp
;	COMDAT ??D?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEABUINISECTIONVALUE@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEABUINISECTIONVALUE@@XZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator*, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@10
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@10
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@10:
	xor	edx, edx
	jne	SHORT $LN7@operator@10
$LN10@operator@10:
; Line 223
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@10
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@10
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@10:
	xor	eax, eax
	jne	SHORT $LN2@operator@10
$LN5@operator@10:
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Myval@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAUINISECTIONVALUE@@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Myval
	add	esp, 4
; Line 227
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QBEABUINISECTIONVALUE@@XZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 246
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@11
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@11
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@11:
	xor	edx, edx
	jne	SHORT $LN7@operator@11
$LN10@operator@11:
; Line 247
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@11
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@11
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@11:
	xor	eax, eax
	jne	SHORT $LN2@operator@11
$LN5@operator@11:
; Line 250
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
; Line 252
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Const_iterator@$00@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@0@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+12], eax
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 327
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Line 328
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+=
; Function compile flags: /Odtp
;	COMDAT ??H?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+, COMDAT
; _this$ = ecx
; Line 380
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 381
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 382
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+=
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 383
	mov	esp, ebp
	pop	ebp
	ret	8
??H?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??G?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator-, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@operator@12
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@operator@12
$LN4@operator@12:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@12:
	xor	eax, eax
	jne	SHORT $LN2@operator@12
; Line 194
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
; Line 195
	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator-
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator!=, COMDAT
; _this$ = ecx
; Line 215
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 217
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator!=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7length_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Bidit@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@HPBV12@ABV12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Bidit@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@HPBV12@ABV12@@std@@QAE@XZ PROC ; std::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Bidit@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@HPBV12@ABV12@@std@@QAE@XZ ENDP ; std::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>
_TEXT	ENDS
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIVINFO@Message@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Bidit@U?$pair@$$CBIVINFO@Message@@@std@@HPBU12@ABU12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Bidit@U?$pair@$$CBIVINFO@Message@@@std@@HPBU12@ABU12@@std@@QAE@XZ PROC ; std::_Bidit<std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &>::_Bidit<std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIVINFO@Message@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Bidit@U?$pair@$$CBIVINFO@Message@@@std@@HPBU12@ABU12@@std@@QAE@XZ ENDP ; std::_Bidit<std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &>::_Bidit<std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &>
_TEXT	ENDS
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UHKPLAYERINFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Bidit@UHKPLAYERINFO@@HPBU1@ABU1@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Bidit@UHKPLAYERINFO@@HPBU1@ABU1@@std@@QAE@XZ PROC	; std::_Bidit<HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &>::_Bidit<HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UHKPLAYERINFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Bidit@UHKPLAYERINFO@@HPBU1@ABU1@@std@@QAE@XZ ENDP	; std::_Bidit<HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &>::_Bidit<HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &>
_TEXT	ENDS
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UINISECTIONVALUE@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Bidit@UINISECTIONVALUE@@HPBU1@ABU1@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Bidit@UINISECTIONVALUE@@HPBU1@ABU1@@std@@QAE@XZ PROC ; std::_Bidit<INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &>::_Bidit<INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UINISECTIONVALUE@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Bidit@UINISECTIONVALUE@@HPBU1@ABU1@@std@@QAE@XZ ENDP ; std::_Bidit<INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &>::_Bidit<INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &>
_TEXT	ENDS
PUBLIC	??0_Iterator_base_aux@std@@QAE@XZ		; std::_Iterator_base_aux::_Iterator_base_aux
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0_Iterator_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base_aux@std@@QAE@XZ PROC			; std::_Iterator_base_aux::_Iterator_base_aux, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 448
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base_aux@std@@QAE@XZ ENDP			; std::_Iterator_base_aux::_Iterator_base_aux
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIVINFO@Message@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIVINFO@Message@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBIVINFO@Message@@@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,Message::INFO>,int,std::pair<unsigned int const ,Message::INFO> const *,std::pair<unsigned int const ,Message::INFO> const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UHKPLAYERINFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UHKPLAYERINFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UHKPLAYERINFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,HKPLAYERINFO,int,HKPLAYERINFO const *,HKPLAYERINFO const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UINISECTIONVALUE@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UINISECTIONVALUE@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UINISECTIONVALUE@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,INISECTIONVALUE,int,INISECTIONVALUE const *,INISECTIONVALUE const &,std::_Iterator_base_aux>
_TEXT	ENDS
PUBLIC	??$insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::insert<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
PUBLIC	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
PUBLIC	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__catchsym$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z$3 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z$3
__unwindtable$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -56						; size = 4
$T153512 = -52						; size = 8
$T153511 = -44						; size = 8
$T153510 = -36						; size = 8
$T153509 = -28						; size = 8
$T153508 = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 16					; 00000010H
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T153508[ebp], esp
	push	eax
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 468
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 469
	lea	eax, DWORD PTR $T153512[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T153511[ebp], ecx
	mov	DWORD PTR $T153511[ebp+4], edx
	lea	eax, DWORD PTR $T153509[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T153510[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR $T153511[ebp+4]
	push	eax
	mov	ecx, DWORD PTR $T153511[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::insert<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
	jmp	SHORT $LN4@list
__catch$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z$0:
; Line 471
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Tidy
; Line 472
	push	0
	push	0
	call	__CxxThrowException@8
; Line 473
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, $LN2@list
	ret	0
$LN4@list:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN2@list:
; Line 474
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN3@list:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	?max_size@?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEIXZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::max_size, COMDAT
; _this$ = ecx
; Line 624
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 625
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?max_size@?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QBEIXZ ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::max_size
; Line 626
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEIXZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::max_size
_TEXT	ENDS
PUBLIC	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T153531 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T153531[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Line 48
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
__ehhandler$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAEXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV32@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAEXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV32@@Z PROC ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z ; std::_Construct<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAEXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV32@@Z ENDP ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::construct
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color, COMDAT
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 131
	push	ebp
	mov	ebp, esp
; Line 132
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 312				; 00000138H
; Line 133
	pop	ebp
	ret	0
?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::max_size, COMDAT
; _this$ = ecx
; Line 452
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 453
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3
	call	?max_size@?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::max_size
; Line 454
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$148908 = -4					; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Erase, COMDAT
; _this$ = ecx
; Line 890
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 891
	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$148908[ebp], eax
	jmp	SHORT $LN3@Erase
$LN2@Erase:
	mov	ecx, DWORD PTR __Pnode$148908[ebp]
	mov	DWORD PTR __Rootnode$[ebp], ecx
$LN3@Erase:
	mov	edx, DWORD PTR __Pnode$148908[ebp]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN4@Erase
; Line 893
	mov	ecx, DWORD PTR __Pnode$148908[ebp]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Erase
; Line 894
	mov	eax, DWORD PTR __Pnode$148908[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$148908[ebp], ecx
; Line 895
	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::destroy
; Line 896
	push	1
	mov	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::deallocate
; Line 897
	jmp	SHORT $LN2@Erase
$LN4@Erase:
; Line 898
	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lrotate, COMDAT
; _this$ = ecx
; Line 1014
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1016
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1018
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Lrotate
; Line 1019
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Lrotate:
; Line 1020
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1022
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Lrotate
; Line 1023
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Lrotate
$LN4@Lrotate:
; Line 1024
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Lrotate
; Line 1025
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1026
	jmp	SHORT $LN3@Lrotate
$LN2@Lrotate:
; Line 1027
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Lrotate:
; Line 1029
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1030
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1031
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lrotate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Max, COMDAT
; Line 1034
	push	ebp
	mov	ebp, esp
$LN2@Max:
; Line 1035
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Max
; Line 1036
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Max
$LN1@Max:
; Line 1037
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 1038
	pop	ebp
	ret	0
?_Max@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Max
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Min, COMDAT
; Line 1041
	push	ebp
	mov	ebp, esp
$LN2@Min:
; Line 1042
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Min
; Line 1043
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN1@Min:
; Line 1044
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 1045
	pop	ebp
	ret	0
?_Min@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Min
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root, COMDAT
; _this$ = ecx
; Line 1058
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1059
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
; Line 1060
	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root, COMDAT
; _this$ = ecx
; Line 1063
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1064
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
; Line 1065
	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rrotate, COMDAT
; _this$ = ecx
; Line 1068
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1069
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1070
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1072
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Rrotate
; Line 1073
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Rrotate:
; Line 1074
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1076
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Rrotate
; Line 1077
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Rrotate
$LN4@Rrotate:
; Line 1078
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Rrotate
; Line 1079
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1080
	jmp	SHORT $LN3@Rrotate
$LN2@Rrotate:
; Line 1081
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Rrotate:
; Line 1083
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1084
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1085
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rrotate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABI@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__Wherenode$ = -4					; size = 4
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Ubound, COMDAT
; _this$ = ecx
; Line 1088
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1089
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1090
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Wherenode$[ebp], edx
$LN4@Ubound:
; Line 1092
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Ubound
; Line 1093
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Key@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Ubound
; Line 1095
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], edx
; Line 1096
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1098
	jmp	SHORT $LN1@Ubound
$LN2@Ubound:
; Line 1099
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN1@Ubound:
	jmp	SHORT $LN4@Ubound
$LN3@Ubound:
; Line 1101
	mov	eax, DWORD PTR __Wherenode$[ebp]
; Line 1102
	mov	esp, ebp
	pop	ebp
	ret	4
?_Ubound@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node::_Node
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z$3 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z$0
__tryblocktable$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z$3
__unwindtable$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z
_TEXT	SEGMENT
tv86 = -36						; size = 4
_this$ = -32						; size = 4
$T153564 = -28						; size = 4
$T153563 = -24						; size = 4
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Buynode, COMDAT
; _this$ = ecx
; Line 1130
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1131
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::allocate
	mov	DWORD PTR __Wherenode$[ebp], eax
; Line 1132
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1133
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	push	316					; 0000013cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T153564[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T153564[ebp], 0
	je	SHORT $LN4@Buynode@3
	movzx	ecx, BYTE PTR __Carg$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Rarg$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Larg$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T153564[ebp]
	call	??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node::_Node
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN5@Buynode@3
$LN4@Buynode@3:
	mov	DWORD PTR tv86[ebp], 0
$LN5@Buynode@3:
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T153563[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN6@Buynode@3
__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z$0:
; Line 1135
	push	1
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::deallocate
; Line 1136
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1137
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z$1
	ret	0
$LN6@Buynode@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z$1:
; Line 1138
	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN3@Buynode@3:
; Line 1139
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z$2:
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T153564[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Buynode
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
; Line 58
	push	ebp
	mov	ebp, esp
; Line 59
	mov	eax, DWORD PTR __Where$[ebp]
; Line 60
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
; Line 64
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAUINISECTIONVALUE@@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAUINISECTIONVALUE@@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 124
	push	ebp
	mov	ebp, esp
; Line 125
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 126
	pop	ebp
	ret	0
?_Myval@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAUINISECTIONVALUE@@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Myval
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 165
	mov	DWORD PTR __Count$[ebp], 153391689	; 09249249H
; Line 166
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size:
	mov	eax, DWORD PTR tv65[ebp]
; Line 167
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 193
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@U?$pair@$$CBIVINFO@Message@@@std@@HPBU12@ABU12@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Dec
; Function compile flags: /Odtp
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx
; Line 227
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Dec
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
; Line 230
	mov	esp, ebp
	pop	ebp
	ret	0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator--
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAUHKPLAYERINFO@@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAUHKPLAYERINFO@@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z PROC ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 124
	push	ebp
	mov	ebp, esp
; Line 125
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 126
	pop	ebp
	ret	0
?_Myval@?$list@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@KAAAUHKPLAYERINFO@@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z ENDP ; std::list<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Myval
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+=
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 374
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 375
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+=
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
; Line 377
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+=
_TEXT	ENDS
PUBLIC	??0?$_Ranit@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@HPBV12@ABV12@@std@@QAE@XZ ; std::_Ranit<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &>::_Ranit<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; _this$ = ecx
; Line 76
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ranit@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@HPBV12@ABV12@@std@@QAE@XZ
; Line 78
	cmp	DWORD PTR __Pvector$[ebp], 0
	je	SHORT $LN4@Vector_con
	mov	eax, DWORD PTR __Pvector$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN4@Vector_con
	mov	edx, DWORD PTR __Pvector$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jbe	SHORT $LN2@Vector_con
$LN4@Vector_con:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@Vector_con:
	xor	ecx, ecx
	jne	SHORT $LN2@Vector_con
; Line 79
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator==, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@operator@13
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@operator@13
$LN4@operator@13:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@13:
	xor	eax, eax
	jne	SHORT $LN2@operator@13
; Line 211
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	sete	cl
	mov	al, cl
; Line 212
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@AB_N@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx+8], al
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::random_access_iterator_tag,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Ranit@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@HPBV12@ABV12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Ranit@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@HPBV12@ABV12@@std@@QAE@XZ PROC ; std::_Ranit<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &>::_Ranit<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ranit@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@HPBV12@ABV12@@std@@QAE@XZ ENDP ; std::_Ranit<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &>::_Ranit<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::random_access_iterator_tag,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::random_access_iterator_tag,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 538
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 539
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Const_iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 540
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end, COMDAT
; _this$ = ecx
; Line 548
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 549
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Const_iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 550
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
_TEXT	ENDS
PUBLIC	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
PUBLIC	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
PUBLIC	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
PUBLIC	??0_Container_base_aux@std@@QAE@XZ		; std::_Container_base_aux::_Container_base_aux
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$1
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
tv133 = -32						; size = 4
_this$ = -28						; size = 4
$T153621 = -24						; size = 4
$T153620 = -20						; size = 4
$T153619 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::_Container_base_aux
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Line 420
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
	mov	DWORD PTR $T153621[ebp], eax
	mov	ecx, DWORD PTR $T153621[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T153620[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T153620[ebp], 0
	je	SHORT $LN3@Container_
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T153620[ebp]
	call	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN4@Container_
$LN3@Container_:
	mov	DWORD PTR tv133[ebp], 0
$LN4@Container_:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T153619[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T153619[ebp]
	mov	DWORD PTR [ecx], edx
; Line 421
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$1:
	mov	eax, DWORD PTR $T153621[ebp]
	push	eax
	mov	ecx, DWORD PTR $T153620[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
; Function compile flags: /Odtp
;	COMDAT ??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pcont$ = 8						; size = 4
??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z PROC	; std::_Aux_cont::_Aux_cont, COMDAT
; _this$ = ecx
; Line 364
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pcont$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ENDP	; std::_Aux_cont::_Aux_cont
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0_Container_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base_aux@std@@QAE@XZ PROC			; std::_Container_base_aux::_Container_base_aux, COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 382
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base_aux@std@@QAE@XZ ENDP			; std::_Container_base_aux::_Container_base_aux
_TEXT	ENDS
PUBLIC	??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ; std::_Allocate<std::_Aux_cont>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z PROC ; std::allocator<std::_Aux_cont>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ; std::_Allocate<std::_Aux_cont>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ENDP ; std::allocator<std::_Aux_cont>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::max_size, COMDAT
; _this$ = ecx
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 165
	mov	DWORD PTR __Count$[ebp], 153391689	; 09249249H
; Line 166
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@2
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
	mov	eax, DWORD PTR tv65[ebp]
; Line 167
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::max_size, COMDAT
; _this$ = ecx
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 165
	mov	DWORD PTR __Count$[ebp], 14316557	; 00da740dH
; Line 166
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@3
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@3
$LN3@max_size@3:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@3:
	mov	eax, DWORD PTR tv65[ebp]
; Line 167
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::max_size
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$149173 = -4					; size = 4
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN7@Dec
; Line 252
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], eax
	jmp	$LN8@Dec
$LN7@Dec:
; Line 253
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Dec
; Line 254
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Max@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Max
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 255
	jmp	SHORT $LN8@Dec
$LN3@Dec:
; Line 259
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$149173[ebp], edx
	mov	eax, DWORD PTR __Pnode$149173[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@Dec
	mov	edx, DWORD PTR __Pnode$149173[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN2@Dec
; Line 260
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$149173[ebp]
	mov	DWORD PTR [eax+4], ecx
	jmp	SHORT $LN3@Dec
$LN2@Dec:
; Line 261
	mov	edx, DWORD PTR __Pnode$149173[ebp]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN8@Dec
; Line 262
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$149173[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN8@Dec:
; Line 264
	mov	esp, ebp
	pop	ebp
	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::_Dec
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Y?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@operator@14
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@14:
	xor	ecx, ecx
	jne	SHORT $LN7@operator@14
; Line 161
	mov	esi, DWORD PTR __Off$[ebp]
	imul	esi, 28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	add	esi, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	cmp	esi, DWORD PTR [eax+16]
	ja	SHORT $LN4@operator@14
	mov	esi, DWORD PTR __Off$[ebp]
	imul	esi, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	esi, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN2@operator@14
$LN4@operator@14:
; Line 163
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@14:
	xor	ecx, ecx
	jne	SHORT $LN2@operator@14
; Line 164
	mov	edx, DWORD PTR __Off$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
; Line 166
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::operator+=
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z ; std::pair<unsigned int const ,Message::INFO>::pair<unsigned int const ,Message::INFO>
;	COMDAT xdata$x
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
xdata$x	SEGMENT
__unwindtable$??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z$0
__ehfuncinfo$??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Larg$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Rarg$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR __Carg$[ebp]
	mov	BYTE PTR [ecx+312], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+313], 0
; Line 41
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ
__ehhandler$??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBIVINFO@Message@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node::_Node
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z$0
__ehfuncinfo$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z PROC	; std::pair<unsigned int const ,Message::INFO>::pair<unsigned int const ,Message::INFO>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0INFO@Message@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1INFO@Message@@QAE@XZ
__ehhandler$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$pair@$$CBIVINFO@Message@@@std@@QAE@ABU01@@Z ENDP	; std::pair<unsigned int const ,Message::INFO>::pair<unsigned int const ,Message::INFO>
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,unsigned int>
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>
; Function compile flags: /Odtp
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T153672 = -1						; size = 1
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__Off$ = 24						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 1892
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1893
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153672[ebp]
	push	ecx
	call	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>
	add	esp, 8
	movzx	edx, BYTE PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,unsigned int>
	add	esp, 24					; 00000018H
; Line 1894
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??_G_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::`scalar deleting destructor'
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 58
	push	ebp
	mov	ebp, esp
; Line 59
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z
; Line 60
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
PUBLIC	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
PUBLIC	??$_Iter_random@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::_Iter_random<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
PUBLIC	??$_Ptr_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
; Function compile flags: /Odtp
;	COMDAT ??$unchecked_copy@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00@Z
_TEXT	SEGMENT
$T153679 = -3						; size = 1
$T153678 = -2						; size = 1
$T153677 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00@Z PROC ; stdext::unchecked_copy<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 3604
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 3606
	xor	eax, eax
	mov	BYTE PTR $T153677[ebp], al
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Ptr_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 8
	mov	BYTE PTR $T153678[ebp], al
	movzx	eax, BYTE PTR $T153677[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T153678[ebp]
	push	ecx
	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153679[ebp]
	push	ecx
	call	??$_Iter_random@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::_Iter_random<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 12					; 0000000cH
	movzx	edx, BYTE PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	push	eax
	call	??$_Copy_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 24					; 00000018H
; Line 3607
	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_copy@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00@Z ENDP ; stdext::unchecked_copy<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,unsigned int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??$unchecked_uninitialized_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@stdext@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IABV12@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@Z
_TEXT	SEGMENT
$T153683 = -2						; size = 1
$T153682 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@stdext@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IABV12@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@Z PROC ; stdext::unchecked_uninitialized_fill_n<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,unsigned int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
; Line 940
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 942
	xor	eax, eax
	mov	BYTE PTR $T153682[ebp], al
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Ptr_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 8
	mov	BYTE PTR $T153683[ebp], al
	movzx	eax, BYTE PTR $T153682[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T153683[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,unsigned int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	add	esp, 24					; 00000018H
; Line 943
	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@stdext@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IABV12@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,unsigned int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAU120@@Z
_TEXT	SEGMENT
$T153688 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 36					; 00000024H
	jae	SHORT $LN2@Allocate
; Line 40
	push	0
	lea	ecx, DWORD PTR $T153688[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T153688[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 36					; 00000024H
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0bad_alloc@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0bad_alloc@std@@QAE@PBD@Z$0
__ehfuncinfo$??0bad_alloc@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0bad_alloc@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0bad_alloc@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 372
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0bad_alloc@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0bad_alloc@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0bad_alloc@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1bad_alloc@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1bad_alloc@std@@UAE@XZ$0
__ehfuncinfo$??1bad_alloc@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1bad_alloc@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 380
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1bad_alloc@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 381
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1bad_alloc@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??1bad_alloc@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1bad_alloc@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T153711 = -8						; size = 4
__Vptr$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *,std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T153711[ebp], eax
	cmp	DWORD PTR $T153711[ebp], 0
	je	SHORT $LN3@Construct
	mov	edx, DWORD PTR $T153711[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T153711[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN1@Construct
$LN3@Construct:
	mov	DWORD PTR tv68[ebp], 0
$LN1@Construct:
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *,std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$149899 = -1					; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 18
	mov	eax, DWORD PTR __Left$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@swap
; Line 20
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR __Tmp$149899[ebp], dl
; Line 22
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 23
	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR __Tmp$149899[ebp]
	mov	BYTE PTR [eax], cl
$LN2@swap:
; Line 25
	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@@Z
_TEXT	SEGMENT
$T153720 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 224
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 225
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::_Ptr_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 8
	mov	BYTE PTR $T153720[ebp], al
	movzx	edx, BYTE PTR $T153720[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	add	esp, 16					; 00000010H
; Line 226
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@Z ; stdext::_Unchecked_uninitialized_move<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PAV21@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PAV21@00@Z PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Umove<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 1145
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked_uninitialized_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@Z ; stdext::_Unchecked_uninitialized_move<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	add	esp, 16					; 00000010H
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@1@PAV21@00@Z ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Umove<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z ; std::_Fill<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Function compile flags: /Odtp
;	COMDAT ??$fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z PROC ; std::fill<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 3186
	push	ebp
	mov	ebp, esp
; Line 3187
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	push	eax
	call	??$_Fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z ; std::_Fill<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
	add	esp, 12					; 0000000cH
; Line 3188
	pop	ebp
	ret	0
??$fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z ENDP ; std::fill<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
PUBLIC	??$_Move_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AU_Swap_move_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Move_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked_move_backward@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00@Z
_TEXT	SEGMENT
$T153729 = -3						; size = 1
$T153728 = -2						; size = 1
$T153727 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00@Z PROC ; stdext::_Unchecked_move_backward<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>, COMDAT
; Line 3694
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 3696
	xor	eax, eax
	mov	BYTE PTR $T153727[ebp], al
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Move_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AU_Swap_move_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Move_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	mov	BYTE PTR $T153728[ebp], al
	movzx	edx, BYTE PTR $T153727[ebp]
	push	edx
	movzx	eax, BYTE PTR $T153728[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T153729[ebp]
	push	eax
	call	??$_Iter_random@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::_Iter_random<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 12					; 0000000cH
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	push	eax
	call	??$_Move_backward_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 24					; 00000018H
; Line 3697
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked_move_backward@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00@Z ENDP ; stdext::_Unchecked_move_backward<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAV10@@Z
_TEXT	SEGMENT
$T153732 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAV10@@Z PROC ; std::_Allocate<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@2
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@2
$LN3@Allocate@2:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 28					; 0000001cH
	jae	SHORT $LN2@Allocate@2
; Line 40
	push	0
	lea	ecx, DWORD PTR $T153732[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T153732[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate@2:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 28					; 0000001cH
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@2:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node *>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@PAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z
_TEXT	SEGMENT
$T153737 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z PROC ; std::_Allocate<std::_Aux_cont>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@3
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@3
$LN3@Allocate@3:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate@3
; Line 40
	push	0
	lea	ecx, DWORD PTR $T153737[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T153737[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate@3:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@3:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Aux_cont>
_TEXT	ENDS
PUBLIC	??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Insert<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
PUBLIC	??$_Iter_cat@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Iter_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
; Function compile flags: /Odtp
;	COMDAT ??$insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T153741 = -2						; size = 1
$T153740 = -1						; size = 1
__Where$ = 8						; size = 8
__First$ = 16						; size = 8
__Last$ = 24						; size = 8
??$insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::insert<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 730
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 732
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153740[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Iter_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
	add	esp, 8
	movzx	edx, BYTE PTR $T153741[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Insert<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
; Line 733
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??$insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::insert<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z$0
__ehfuncinfo$??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T153747 = -24						; size = 4
$T153746 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z PROC ; std::_Construct<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T153747[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T153747[ebp], 0
	je	SHORT $LN3@Construct@2
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T153747[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Construct@2
$LN3@Construct@2:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Construct@2:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T153746[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 53
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T153747[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@std@@YAXPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@@Z ENDP ; std::_Construct<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
PUBLIC	??_G_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEPAXI@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node::`scalar deleting destructor'
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 59
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEPAXI@Z
; Line 60
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??_G_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEPAXI@Z ; std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node::`scalar deleting destructor'
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 59
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEPAXI@Z
; Line 60
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T153765 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@4
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@4
$LN3@Allocate@4:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 316				; 0000013cH
	jae	SHORT $LN2@Allocate@4
; Line 40
	push	0
	lea	ecx, DWORD PTR $T153765[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T153765[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate@4:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 316				; 0000013cH
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@4:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::~_Node
; Function compile flags: /Odtp
;	COMDAT ??_G_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z PROC ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z ENDP ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0bad_alloc@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0bad_alloc@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0bad_alloc@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0bad_alloc@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0bad_alloc@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0bad_alloc@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0bad_alloc@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0bad_alloc@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
PUBLIC	??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node::~_Node
; Function compile flags: /Odtp
;	COMDAT ??_G_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEPAXI@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEPAXI@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ; std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node::~_Node
; Function compile flags: /Odtp
;	COMDAT ??_G_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEPAXI@Z PROC ; std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAEPAXI@Z ENDP ; std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::~_Node, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::~_Node
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node::~_Node, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$pair@$$CBIVINFO@Message@@@std@@QAE@XZ
__ehhandler$??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node::~_Node
PUBLIC	??1HKPLAYERINFO@@QAE@XZ				; HKPLAYERINFO::~HKPLAYERINFO
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node::~_Node, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1HKPLAYERINFO@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1HKPLAYERINFO@@QAE@XZ
__ehhandler$??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Node@?$_List_nod@UHKPLAYERINFO@@V?$allocator@UHKPLAYERINFO@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<HKPLAYERINFO,std::allocator<HKPLAYERINFO> >::_Node::~_Node
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1HKPLAYERINFO@@QAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1HKPLAYERINFO@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$??1HKPLAYERINFO@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1HKPLAYERINFO@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1HKPLAYERINFO@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1HKPLAYERINFO@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1HKPLAYERINFO@@QAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1HKPLAYERINFO@@QAE@XZ$4
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1HKPLAYERINFO@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1HKPLAYERINFO@@QAE@XZ PROC				; HKPLAYERINFO::~HKPLAYERINFO, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1HKPLAYERINFO@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 188				; 000000bcH
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1HKPLAYERINFO@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$??1HKPLAYERINFO@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$??1HKPLAYERINFO@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$??1HKPLAYERINFO@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 188				; 000000bcH
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$??1HKPLAYERINFO@@QAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$??1HKPLAYERINFO@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1HKPLAYERINFO@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1HKPLAYERINFO@@QAE@XZ ENDP				; HKPLAYERINFO::~HKPLAYERINFO
; Function compile flags: /Odtp
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z PROC ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 952
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 954
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 955
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
__Off$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,unsigned int>, COMDAT
; Line 1857
	push	ebp
	mov	ebp, esp
; Line 1858
	jmp	SHORT $LN3@Distance2
$LN2@Distance2:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??Eiterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator::operator++
$LN3@Distance2:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9const_iterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::const_iterator::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@Distance2
; Line 1859
	mov	edx, DWORD PTR __Off$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN2@Distance2
$LN4@Distance2:
; Line 1860
	pop	ebp
	ret	0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@U_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
; Function compile flags: /Odtp
;	COMDAT ??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z
_TEXT	SEGMENT
__Base_tag$ = -1					; size = 1
__It$ = 8						; size = 4
??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z PROC ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>, COMDAT
; Line 1163
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1165
	movzx	eax, BYTE PTR __Base_tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR __It$[ebp]
	push	ecx
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@U_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 8
; Line 1166
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ENDP ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Iter_random@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z PROC ; std::_Iter_random<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>, COMDAT
; Line 993
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 997
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_random@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ENDP ; std::_Iter_random<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z PROC ; std::_Ptr_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>, COMDAT
; Line 1509
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1511
	mov	al, BYTE PTR __Cat$[ebp]
; Line 1512
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ENDP ; std::_Ptr_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::forward_iterator_tag>
; Function compile flags: /Odtp
;	COMDAT ??$_Copy_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T153835 = -7						; size = 1
$T153834 = -6						; size = 1
$T153833 = -5						; size = 1
__Result$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>, COMDAT
; Line 2481
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 2483
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	imul	eax, 28					; 0000001cH
	add	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Result$[ebp], eax
; Line 2485
	xor	edx, edx
	mov	BYTE PTR $T153833[ebp], dl
	xor	eax, eax
	mov	BYTE PTR $T153834[ebp], al
	movzx	ecx, BYTE PTR $T153833[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T153834[ebp]
	push	edx
	movzx	eax, BYTE PTR $T153835[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Copy_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::forward_iterator_tag>
	add	esp, 24					; 00000018H
; Line 2486
	mov	eax, DWORD PTR __Result$[ebp]
; Line 2487
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::destroy
PUBLIC	?construct@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABV32@@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::construct
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,unsigned int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; Line 393
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 400
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 402
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 403
	jmp	SHORT $LN6@Uninit_fil
$LN5@Uninit_fil:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_fil:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_fil
; Line 404
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABV32@@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::construct
	jmp	SHORT $LN5@Uninit_fil
$LN4@Uninit_fil:
	jmp	SHORT $LN10@Uninit_fil
__catch$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z$0:
; Line 406
	jmp	SHORT $LN3@Uninit_fil
$LN2@Uninit_fil:
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], edx
$LN3@Uninit_fil:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_fil
; Line 407
	mov	ecx, DWORD PTR __Next$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?destroy@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::destroy
	jmp	SHORT $LN2@Uninit_fil
$LN1@Uninit_fil:
; Line 408
	push	0
	push	0
	call	__CxxThrowException@8
; Line 409
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Uninit_fil
	ret	0
$LN10@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_fil:
; Line 410
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IABV10@AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,unsigned int,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 232
	push	ebp
	mov	ebp, esp
; Line 233
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 234
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?destroy@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::destroy
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 235
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked_uninitialized_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@Z
_TEXT	SEGMENT
$T153856 = -2						; size = 1
$T153855 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@Z PROC ; stdext::_Unchecked_uninitialized_move<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
; Line 861
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 864
	xor	eax, eax
	mov	BYTE PTR $T153855[ebp], al
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Move_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AU_Swap_move_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Move_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	mov	BYTE PTR $T153856[ebp], al
	movzx	edx, BYTE PTR $T153855[ebp]
	push	edx
	movzx	eax, BYTE PTR $T153856[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	add	esp, 24					; 00000018H
; Line 865
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked_uninitialized_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@stdext@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@Z ENDP ; stdext::_Unchecked_uninitialized_move<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
_TEXT	ENDS
PUBLIC	??4?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::operator=
; Function compile flags: /Odtp
;	COMDAT ??$_Fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z PROC ; std::_Fill<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 3156
	push	ebp
	mov	ebp, esp
; Line 3158
	jmp	SHORT $LN3@Fill
$LN2@Fill:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], eax
$LN3@Fill:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Fill
; Line 3159
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR __First$[ebp]
	call	??4?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::operator=
	jmp	SHORT $LN2@Fill
$LN4@Fill:
; Line 3160
	pop	ebp
	ret	0
??$_Fill@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0ABV10@@Z ENDP ; std::_Fill<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Move_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AU_Swap_move_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AU_Swap_move_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z PROC ; std::_Move_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>, COMDAT
; Line 1200
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1202
	mov	al, BYTE PTR __Cat$[ebp]
; Line 1203
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move_cat@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AU_Swap_move_tag@0@ABQAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ENDP ; std::_Move_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::forward_iterator_tag>
; Function compile flags: /Odtp
;	COMDAT ??$_Move_backward_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T153864 = -6						; size = 1
$T153863 = -5						; size = 1
__Result$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
__Move_cat$ = 24					; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>, COMDAT
; Line 2773
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 2775
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	imul	eax, 28					; 0000001cH
	mov	edx, DWORD PTR __Dest$[ebp]
	sub	edx, eax
	mov	DWORD PTR __Result$[ebp], edx
; Line 2777
	xor	eax, eax
	mov	BYTE PTR $T153863[ebp], al
	movzx	ecx, BYTE PTR $T153863[ebp]
	push	ecx
	movzx	edx, BYTE PTR __Move_cat$[ebp]
	push	edx
	movzx	eax, BYTE PTR $T153864[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@@Z ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Move_backward_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::forward_iterator_tag>
	add	esp, 24					; 00000018H
; Line 2778
	mov	eax, DWORD PTR __Result$[ebp]
; Line 2779
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move_backward_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Urandom_access_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z PROC ; std::_Iter_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >, COMDAT
; Line 952
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 954
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 955
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ENDP ; std::_Iter_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
_TEXT	ENDS
PUBLIC	?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::erase
PUBLIC	??F?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator--
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__catchsym$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z$0
__unwindtable$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z$2
__ehfuncinfo$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T153869 = -40						; size = 8
__Before$150423 = -32					; size = 8
__Next$ = -24						; size = 8
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 8
__First$ = 16						; size = 8
__Last$ = 24						; size = 8
___formal$ = 32						; size = 1
??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Insert<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >, COMDAT
; _this$ = ecx
; Line 762
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 770
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR __Next$[ebp+4], ecx
; Line 772
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 773
	jmp	SHORT $LN6@Insert@2
$LN5@Insert@2:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
$LN6@Insert@2:
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@Insert@2
; Line 774
	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator*
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Insert
	jmp	SHORT $LN5@Insert@2
$LN4@Insert@2:
	jmp	SHORT $LN10@Insert@2
__catch$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z$0:
; Line 776
	jmp	SHORT $LN3@Insert@2
$LN2@Insert@2:
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
$LN3@Insert@2:
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Insert@2
; Line 778
	mov	edx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Before$150423[ebp], edx
	mov	eax, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR __Before$150423[ebp+4], eax
; Line 779
	lea	ecx, DWORD PTR __Before$150423[ebp]
	call	??F?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator--
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T153869[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::erase
; Line 780
	jmp	SHORT $LN2@Insert@2
$LN1@Insert@2:
; Line 781
	push	0
	push	0
	call	__CxxThrowException@8
; Line 782
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Insert@2
	ret	0
$LN10@Insert@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Insert@2:
; Line 783
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00Uforward_iterator_tag@1@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Insert<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
PUBLIC	??$assign@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@0@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::assign<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
; Function compile flags: /Odtp
;	COMDAT ??4?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T153886 = -16						; size = 8
$T153885 = -8						; size = 8
__Right$ = 8						; size = 4
??4?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::operator=, COMDAT
; _this$ = ecx
; Line 525
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 526
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN1@operator@15
; Line 527
	lea	ecx, DWORD PTR $T153885[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T153886[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Const_iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$assign@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@0@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::assign<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
$LN1@operator@15:
; Line 528
	mov	eax, DWORD PTR _this$[ebp]
; Line 529
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::operator=
_TEXT	ENDS
PUBLIC	?_Make_iter@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Make_iter
PUBLIC	??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T153889 = -12						; size = 8
__Pnode$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::erase, COMDAT
; _this$ = ecx
; Line 786
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 795
	push	0
	lea	eax, DWORD PTR $T153889[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
	mov	ecx, eax
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 798
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx+20]
	je	$LN1@erase@4
; Line 800
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 801
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx
; Line 802
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::destroy
; Line 803
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
; Line 804
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
$LN1@erase@4:
; Line 806
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 807
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::erase
_TEXT	ENDS
PUBLIC	??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z ; std::_Construct<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABV32@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABV32@@Z PROC ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z ; std::_Construct<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABV32@@Z ENDP ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Destroy<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z PROC ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Destroy<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ENDP ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??F?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 262
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 274
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@16
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@16
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@16:
	xor	edx, edx
	jne	SHORT $LN7@operator@16
$LN10@operator@16:
; Line 275
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+4], eax
; Line 276
	mov	ecx, 1
	test	ecx, ecx
	je	SHORT $LN5@operator@16
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@16
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@16:
	xor	edx, edx
	jne	SHORT $LN2@operator@16
$LN5@operator@16:
; Line 279
	mov	eax, DWORD PTR _this$[ebp]
; Line 280
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator--
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?_Make_iter@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Make_iter, COMDAT
; _this$ = ecx
; Line 553
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 555
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Make_iter@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Make_iter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 255
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 256
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 257
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
; Line 258
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 259
	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@U_Unchanged_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@U_Unchanged_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 1146
	push	ebp
	mov	ebp, esp
; Line 1147
	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1148
	pop	ebp
	ret	0
??$_Checked_base@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@AAPAV10@U_Unchanged_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::forward_iterator_tag>, COMDAT
; Line 2469
	push	ebp
	mov	ebp, esp
; Line 2471
	jmp	SHORT $LN3@Copy_opt
$LN2@Copy_opt:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], ecx
$LN3@Copy_opt:
	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Copy_opt
; Line 2472
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	call	??4?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV01@ABV01@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::operator=
	jmp	SHORT $LN2@Copy_opt
$LN1@Copy_opt:
; Line 2473
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2474
	pop	ebp
	ret	0
??$_Copy_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::forward_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Swap_adl@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::_Swap_adl<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$3 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$0
__tryblocktable$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$3
__unwindtable$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T153906 = -52						; size = 4
__Val$ = -48						; size = 28
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; Line 214
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 217
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 219
	lea	ecx, DWORD PTR __Val$[ebp]
	call	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 221
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 222
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 224
	lea	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABV32@@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::construct
; Line 225
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Swap_adl@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::_Swap_adl<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
	add	esp, 8
; Line 226
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$0:
; Line 228
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], edx
$LN3@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 229
	mov	ecx, DWORD PTR __Next$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?destroy@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::destroy
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 230
	push	0
	push	0
	call	__CxxThrowException@8
; Line 231
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	eax, __tryend$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$1
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$1:
; Line 232
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR $T153906[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Val$[ebp]
	call	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	eax, DWORD PTR $T153906[ebp]
$LN9@Uninit_mov:
; Line 233
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z$2:
	lea	ecx, DWORD PTR __Val$[ebp]
	jmp	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
__ehhandler$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00AAV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Move_backward_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::forward_iterator_tag>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 2761
	push	ebp
	mov	ebp, esp
$LN2@Move_backw:
; Line 2763
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Move_backw
; Line 2764
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 28					; 0000001cH
	mov	DWORD PTR __Last$[ebp], ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	sub	edx, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Swap_adl@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::_Swap_adl<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
	add	esp, 8
	jmp	SHORT $LN2@Move_backw
$LN1@Move_backw:
; Line 2765
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2766
	pop	ebp
	ret	0
??$_Move_backward_opt@PAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAV12@Uforward_iterator_tag@2@@std@@YAPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@PAV10@00Uforward_iterator_tag@0@U_Swap_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > *,std::forward_iterator_tag>
_TEXT	ENDS
PUBLIC	??$_Assign@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@0Uinput_iterator_tag@1@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Assign<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
; Function compile flags: /Odtp
;	COMDAT ??$assign@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T153926 = -2						; size = 1
$T153925 = -1						; size = 1
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
??$assign@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@0@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::assign<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 679
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 681
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153925[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Iter_cat<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
	add	esp, 8
	movzx	edx, BYTE PTR $T153926[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Assign@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@0Uinput_iterator_tag@1@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Assign<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
; Line 682
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??$assign@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@0@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::assign<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
xdata$x	SEGMENT
__unwindtable$??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z$0
__ehfuncinfo$??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T153930 = -24						; size = 4
$T153929 = -20						; size = 4
__Vptr$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z PROC ; std::_Construct<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >, COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T153930[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T153930[ebp], 0
	je	SHORT $LN3@Construct@3
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T153930[ebp]
	call	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@ABV01@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@Construct@3
$LN3@Construct@3:
	mov	DWORD PTR tv74[ebp], 0
$LN4@Construct@3:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T153929[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 53
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z$0:
	mov	eax, DWORD PTR __Vptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T153930[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V12@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABV10@@Z ENDP ; std::_Construct<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
PUBLIC	??_G?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::`scalar deleting destructor'
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z PROC ; std::_Destroy<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 59
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z
; Line 60
	pop	ebp
	ret	0
??$_Destroy@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_G?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??$swap@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::swap<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
; Function compile flags: /Odtp
;	COMDAT ??$_Swap_adl@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Swap_adl@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z PROC ; std::_Swap_adl<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
; Line 30
	push	ebp
	mov	ebp, esp
; Line 31
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$swap@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::swap<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	add	esp, 8
; Line 32
	pop	ebp
	ret	0
??$_Swap_adl@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ENDP ; std::_Swap_adl<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Assign@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@0Uinput_iterator_tag@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T153949 = -16						; size = 8
$T153948 = -8						; size = 8
__First$ = 8						; size = 8
__Last$ = 16						; size = 8
___formal$ = 24						; size = 1
??$_Assign@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@0Uinput_iterator_tag@1@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Assign<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 691
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 693
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear
; Line 694
	lea	eax, DWORD PTR $T153949[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T153948[ebp], ecx
	mov	DWORD PTR $T153948[ebp+4], edx
	mov	eax, DWORD PTR __Last$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T153948[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T153948[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::insert<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
; Line 695
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??$_Assign@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@0Uinput_iterator_tag@1@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Assign<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
_TEXT	ENDS
PUBLIC	?swap@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXAAV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::swap
; Function compile flags: /Odtp
;	COMDAT ??$swap@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z PROC ; std::swap<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; Line 1287
	push	ebp
	mov	ebp, esp
; Line 1288
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?swap@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXAAV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::swap
; Line 1289
	pop	ebp
	ret	0
??$swap@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@YAXAAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ENDP ; std::swap<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
_TEXT	ENDS
PUBLIC	?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::splice
PUBLIC	?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::splice
PUBLIC	??$swap@I@std@@YAXAAI0@Z			; std::swap<unsigned int>
PUBLIC	??$swap@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::swap<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
PUBLIC	?_Swap_aux@_Container_base_aux@std@@QAEXAAV12@@Z ; std::_Container_base_aux::_Swap_aux
PUBLIC	??$?8V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@0@0@Z ; std::operator==<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Function compile flags: /Odtp
;	COMDAT ?swap@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -60						; size = 4
$T153959 = -56						; size = 8
$T153958 = -48						; size = 8
$T153957 = -40						; size = 8
$T153956 = -32						; size = 8
$T153955 = -24						; size = 8
$T153954 = -16						; size = 8
__Where$150587 = -8					; size = 8
__Right$ = 8						; size = 4
?swap@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXAAV12@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::swap, COMDAT
; _this$ = ecx
; Line 846
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN4@swap@2
	jmp	$LN5@swap@2
$LN4@swap@2:
; Line 849
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	call	??$?8V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@0@0@Z ; std::operator==<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@swap@2
; Line 856
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_aux@_Container_base_aux@std@@QAEXAAV12@@Z ; std::_Container_base_aux::_Swap_aux
; Line 858
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	??$swap@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ; std::swap<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
	add	esp, 8
; Line 859
	mov	ecx, DWORD PTR __Right$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	call	??$swap@I@std@@YAXAAI0@Z		; std::swap<unsigned int>
	add	esp, 8
; Line 861
	jmp	$LN5@swap@2
$LN2@swap@2:
; Line 863
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_aux@_Container_base_aux@std@@QAEXAAV12@@Z ; std::_Container_base_aux::_Swap_aux
; Line 865
	lea	ecx, DWORD PTR __Where$150587[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
; Line 866
	mov	edx, DWORD PTR __Where$150587[ebp]
	mov	DWORD PTR $T153954[ebp], edx
	mov	eax, DWORD PTR __Where$150587[ebp+4]
	mov	DWORD PTR $T153954[ebp+4], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T153954[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T153954[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::splice
; Line 867
	lea	ecx, DWORD PTR $T153956[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR $T153955[ebp], edx
	mov	DWORD PTR $T153955[ebp+4], eax
	mov	ecx, DWORD PTR __Where$150587[ebp]
	mov	DWORD PTR $T153957[ebp], ecx
	mov	edx, DWORD PTR __Where$150587[ebp+4]
	mov	DWORD PTR $T153957[ebp+4], edx
	lea	eax, DWORD PTR $T153959[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T153958[ebp], ecx
	mov	DWORD PTR $T153958[ebp+4], edx
	mov	eax, DWORD PTR $T153955[ebp+4]
	push	eax
	mov	ecx, DWORD PTR $T153955[ebp]
	push	ecx
	mov	edx, DWORD PTR $T153957[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T153957[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T153958[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T153958[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::splice
$LN5@swap@2:
; Line 869
	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXAAV12@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::swap
_TEXT	ENDS
PUBLIC	??$swap@V_Aux_cont@std@@@std@@YAXAAV_Aux_cont@0@0@Z ; std::swap<std::_Aux_cont>
PUBLIC	??$swap@PAV_Aux_cont@std@@@std@@YAXAAPAV_Aux_cont@0@0@Z ; std::swap<std::_Aux_cont *>
; Function compile flags: /Odtp
;	COMDAT ?_Swap_aux@_Container_base_aux@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_aux@_Container_base_aux@std@@QAEXAAV12@@Z PROC	; std::_Container_base_aux::_Swap_aux, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 396
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 397
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$swap@PAV_Aux_cont@std@@@std@@YAXAAPAV_Aux_cont@0@0@Z ; std::swap<std::_Aux_cont *>
	add	esp, 8
; Line 398
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$swap@V_Aux_cont@std@@@std@@YAXAAV_Aux_cont@0@0@Z ; std::swap<std::_Aux_cont>
	add	esp, 8
; Line 399
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_aux@_Container_base_aux@std@@QAEXAAV12@@Z ENDP	; std::_Container_base_aux::_Swap_aux
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$swap@PAV_Aux_cont@std@@@std@@YAXAAPAV_Aux_cont@0@0@Z
_TEXT	SEGMENT
__Tmp$149212 = -4					; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAV_Aux_cont@std@@@std@@YAXAAPAV_Aux_cont@0@0@Z PROC ; std::swap<std::_Aux_cont *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 18
	mov	eax, DWORD PTR __Left$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@swap@3
; Line 20
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$149212[ebp], edx
; Line 22
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 23
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Tmp$149212[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@swap@3:
; Line 25
	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@PAV_Aux_cont@std@@@std@@YAXAAPAV_Aux_cont@0@0@Z ENDP ; std::swap<std::_Aux_cont *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$swap@V_Aux_cont@std@@@std@@YAXAAV_Aux_cont@0@0@Z
_TEXT	SEGMENT
__Tmp$149215 = -4					; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@V_Aux_cont@std@@@std@@YAXAAV_Aux_cont@0@0@Z PROC ; std::swap<std::_Aux_cont>, COMDAT
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 18
	mov	eax, DWORD PTR __Left$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@swap@4
; Line 20
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$149215[ebp], edx
; Line 22
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 23
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Tmp$149215[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@swap@4:
; Line 25
	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@V_Aux_cont@std@@@std@@YAXAAV_Aux_cont@0@0@Z ENDP ; std::swap<std::_Aux_cont>
_TEXT	ENDS
PUBLIC	?_Splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Splice
PUBLIC	?empty@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::empty
; Function compile flags: /Odtp
;	COMDAT ?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T153971 = -32						; size = 8
$T153970 = -24						; size = 8
$T153969 = -16						; size = 8
$T153968 = -8						; size = 8
__Where$ = 8						; size = 8
__Right$ = 16						; size = 4
?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::splice, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 874
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx
; Line 875
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@splice
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?empty@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::empty
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@splice
; Line 878
	lea	edx, DWORD PTR $T153969[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T153968[ebp], ecx
	mov	DWORD PTR $T153968[ebp+4], edx
	lea	eax, DWORD PTR $T153971[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T153970[ebp], ecx
	mov	DWORD PTR $T153970[ebp+4], edx
	push	0
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR $T153968[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T153968[ebp]
	push	eax
	mov	ecx, DWORD PTR $T153970[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T153970[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Splice
$LN2@splice:
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::splice
_TEXT	ENDS
PUBLIC	??_C@_0BD@IPGJINKL@list?$DMT?$DO?5bad?5splice?$AA@ ; `string'
;	COMDAT ??_C@_0BD@IPGJINKL@list?$DMT?$DO?5bad?5splice?$AA@
CONST	SEGMENT
??_C@_0BD@IPGJINKL@list?$DMT?$DO?5bad?5splice?$AA@ DB 'list<T> bad splice'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z$0
__ehfuncinfo$?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z
_TEXT	SEGMENT
_this$ = -128						; size = 4
$T153979 = -124						; size = 28
$T153978 = -96						; size = 40
$T153977 = -56						; size = 8
$T153976 = -48						; size = 8
$T153975 = -40						; size = 8
$T153974 = -32						; size = 8
__Next$150613 = -24					; size = 8
__Count$150606 = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 8
__Right$ = 16						; size = 4
__First$ = 20						; size = 8
__Last$ = 28						; size = 8
?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::splice, COMDAT
; _this$ = ecx
; Line 905
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 116				; 00000074H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 906
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN13@splice@2
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN10@splice@2
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN13@splice@2
$LN10@splice@2:
; Line 908
	mov	DWORD PTR __Count$150606[ebp], 0
; Line 909
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN9@splice@2
	jmp	$LN8@splice@2
$LN9@splice@2:
; Line 911
	lea	eax, DWORD PTR $T153974[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@splice@2
	lea	edx, DWORD PTR $T153975[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@splice@2
; Line 912
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR __Count$150606[ebp], edx
; Line 913
	jmp	$LN8@splice@2
$LN7@splice@2:
; Line 915
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$150613[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR __Next$150613[ebp+4], ecx
; Line 917
	jmp	SHORT $LN5@splice@2
$LN4@splice@2:
	lea	ecx, DWORD PTR __Next$150613[ebp]
	call	??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
	mov	edx, DWORD PTR __Count$150606[ebp]
	add	edx, 1
	mov	DWORD PTR __Count$150606[ebp], edx
$LN5@splice@2:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$150613[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@splice@2
; Line 918
	lea	edx, DWORD PTR $T153976[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	push	eax
	lea	ecx, DWORD PTR __Next$150613[ebp]
	call	??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@splice@2
; Line 919
	lea	ecx, DWORD PTR $T153977[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@splice@2
; Line 920
	push	OFFSET ??_C@_0BD@IPGJINKL@list?$DMT?$DO?5bad?5splice?$AA@
	lea	ecx, DWORD PTR $T153979[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T153979[ebp]
	push	eax
	lea	ecx, DWORD PTR $T153978[ebp]
	call	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T153978[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T153979[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@splice@2:
; Line 921
	jmp	$LN4@splice@2
$LN8@splice@2:
; Line 922
	push	0
	mov	edx, DWORD PTR __Count$150606[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Splice
$LN13@splice@2:
; Line 924
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z$0:
	lea	ecx, DWORD PTR $T153979[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::splice
; Function compile flags: /Odtp
;	COMDAT ?empty@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?empty@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NXZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::empty, COMDAT
; _this$ = ecx
; Line 629
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 630
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+24], 0
	sete	cl
	mov	al, cl
; Line 631
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NXZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::empty
_TEXT	ENDS
PUBLIC	?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@0@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::erase
; Function compile flags: /Odtp
;	COMDAT ?_Splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
$T153991 = -12						; size = 8
__Pnode$150631 = -4					; size = 4
__Where$ = 8						; size = 8
__Right$ = 16						; size = 4
__First$ = 20						; size = 8
__Last$ = 28						; size = 8
__Count$ = 36						; size = 4
__Keep$ = 40						; size = 1
?_Splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Splice, COMDAT
; _this$ = ecx
; Line 1126
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1138
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	??$?8V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@0@0@Z ; std::operator==<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN3@Splice
; Line 1142
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@Splice
; Line 1144
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXI@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Incsize
; Line 1145
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+24]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx+24], eax
$LN2@Splice:
; Line 1147
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi
; Line 1148
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi
; Line 1149
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	mov	esi, eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	DWORD PTR [eax], esi
; Line 1150
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$150631[ebp], edx
; Line 1151
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1152
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	esi, eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx
; Line 1153
	lea	ecx, DWORD PTR __First$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Mynode
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$150631[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1155
	jmp	SHORT $LN4@Splice
$LN3@Splice:
; Line 1157
	mov	edx, DWORD PTR __Last$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$insert@V?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@01@00@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::insert<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1> >
; Line 1158
	mov	edx, DWORD PTR __Last$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T153991[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@0@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::erase
$LN4@Splice:
; Line 1160
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?_Splice@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXV?$_Const_iterator@$00@12@AAV12@00I_N@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Splice
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@0@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T153996 = -24						; size = 8
$T153995 = -16						; size = 8
$T153994 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@0@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::erase, COMDAT
; _this$ = ecx
; Line 810
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 811
	lea	eax, DWORD PTR $T153994[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@erase@5
	lea	edx, DWORD PTR $T153995[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@erase@5
; Line 813
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear
; Line 814
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase@5
; Line 816
	jmp	SHORT $LN5@erase@5
$LN2@erase@5:
; Line 818
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@erase@5
; Line 819
	mov	ecx, DWORD PTR __First$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T153996[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::erase
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __First$[ebp], ecx
	mov	DWORD PTR __First$[ebp+4], edx
	jmp	SHORT $LN2@erase@5
$LN1@erase@5:
; Line 820
	mov	eax, DWORD PTR __Last$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase@5:
; Line 822
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?erase@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@V?$_Const_iterator@$00@12@0@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::erase
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?8V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@0@0@Z PROC ; std::operator==<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 174
	push	ebp
	mov	ebp, esp
; Line 175
	mov	al, 1
; Line 176
	pop	ebp
	ret	0
??$?8V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V01@@std@@YA_NABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@0@0@Z ENDP ; std::operator==<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$swap@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z
_TEXT	SEGMENT
__Tmp$150650 = -4					; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z PROC ; std::swap<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 18
	mov	eax, DWORD PTR __Left$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@swap@5
; Line 20
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$150650[ebp], edx
; Line 22
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 23
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Tmp$150650[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@swap@5:
; Line 25
	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@0@Z ENDP ; std::swap<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$swap@I@std@@YAXAAI0@Z
_TEXT	SEGMENT
__Tmp$150653 = -4					; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@I@std@@YAXAAI0@Z PROC				; std::swap<unsigned int>, COMDAT
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 18
	mov	eax, DWORD PTR __Left$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@swap@6
; Line 20
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$150653[ebp], edx
; Line 22
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 23
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Tmp$150653[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@swap@6:
; Line 25
	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@I@std@@YAXAAI0@Z ENDP				; std::swap<unsigned int>
_TEXT	ENDS
EXTRN	_atexit:PROC
; Function compile flags: /Odtp
;	COMDAT ??__EMSG_LOG@Message@@YAXXZ
text$yc	SEGMENT
??__EMSG_LOG@Message@@YAXXZ PROC			; Message::`dynamic initializer for 'MSG_LOG'', COMDAT
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\message.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	push	OFFSET $SG141119
	mov	ecx, OFFSET _MSG_LOG
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	push	OFFSET ??__FMSG_LOG@Message@@YAXXZ	; Message::`dynamic atexit destructor for 'MSG_LOG''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EMSG_LOG@Message@@YAXXZ ENDP			; Message::`dynamic initializer for 'MSG_LOG''
text$yc	ENDS
PUBLIC	??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >
; Function compile flags: /Odtp
;	COMDAT ??__EmapInfo@Message@@YAXXZ
text$yc	SEGMENT
??__EmapInfo@Message@@YAXXZ PROC			; Message::`dynamic initializer for 'mapInfo'', COMDAT
; Line 69
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _mapInfo
	call	??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >
	push	OFFSET ??__FmapInfo@Message@@YAXXZ	; Message::`dynamic atexit destructor for 'mapInfo''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EmapInfo@Message@@YAXXZ ENDP			; Message::`dynamic initializer for 'mapInfo''
text$yc	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
PUBLIC	??0?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
PUBLIC	??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >
;	COMDAT xdata$x
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\mapvc7.h
xdata$x	SEGMENT
__unwindtable$??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ$0
__ehfuncinfo$??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154011 = -14						; size = 1
$T154010 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ PROC ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >, COMDAT
; _this$ = ecx
; Line 102
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T154010[ebp]
	call	??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >
	push	eax
	lea	eax, DWORD PTR $T154011[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 103
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
__ehhandler$??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tidy
; Function compile flags: /Odtp
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >, COMDAT
; _this$ = ecx
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 391
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tidy
; Line 393
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Init
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
PUBLIC	??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >, COMDAT
; _this$ = ecx
; Line 361
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
; Line 362
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Init
; Line 363
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::destroy
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T154028 = -24						; size = 8
$T154027 = -16						; size = 8
$T154026 = -8						; size = 8
?_Tidy@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1142
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1143
	lea	eax, DWORD PTR $T154026[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::end
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T154027[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::begin
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	lea	eax, DWORD PTR $T154028[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::erase
; Line 1144
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::destroy
; Line 1145
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::destroy
; Line 1146
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::destroy
; Line 1147
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::deallocate
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@XZ PROC ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Buynode
; Function compile flags: /Odtp
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Init@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Init, COMDAT
; _this$ = ecx
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
; Line 901
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 902
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Buynode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 903
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 904
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Root
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 905
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Lmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Rmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 906
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 907
	mov	esp, ebp
	pop	ebp
	ret	0
?_Init@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >, COMDAT
; _this$ = ecx
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_ptr@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
	lea	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3
	call	??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_val@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::construct
;	COMDAT xdata$x
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\xtreevc7.h
xdata$x	SEGMENT
__catchsym$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ$0
__unwindtable$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ$2
__ehfuncinfo$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T154044 = -36						; size = 4
$T154043 = -32						; size = 4
$T154042 = -28						; size = 4
__Wherenode$ = -24					; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Buynode, COMDAT
; _this$ = ecx
; Line 1105
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1106
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::allocate
	mov	DWORD PTR __Wherenode$[ebp], eax
; Line 1107
	mov	DWORD PTR __Linkcnt$[ebp], 0
; Line 1109
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1110
	mov	DWORD PTR $T154042[ebp], 0
	lea	eax, DWORD PTR $T154042[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::construct
; Line 1111
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1112
	mov	DWORD PTR $T154043[ebp], 0
	lea	eax, DWORD PTR $T154043[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::construct
; Line 1113
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1114
	mov	DWORD PTR $T154044[ebp], 0
	lea	eax, DWORD PTR $T154044[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Right
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::construct
	jmp	SHORT $LN6@Buynode@4
__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ$0:
; Line 1116
	cmp	DWORD PTR __Linkcnt$[ebp], 1
	jle	SHORT $LN2@Buynode@4
; Line 1117
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Parent
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::destroy
$LN2@Buynode@4:
; Line 1118
	cmp	DWORD PTR __Linkcnt$[ebp], 0
	jle	SHORT $LN1@Buynode@4
; Line 1119
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Left
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::destroy
$LN1@Buynode@4:
; Line 1120
	push	1
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::deallocate
; Line 1121
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1122
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ$1
	ret	0
$LN6@Buynode@4:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ$1:
; Line 1123
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1124
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1125
	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN5@Buynode@4:
; Line 1126
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Buynode
PUBLIC	??$?0U?$pair@$$CBIVINFO@Message@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *><std::pair<unsigned int const ,Message::INFO> >
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >, COMDAT
; _this$ = ecx
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,Message::INFO> >::allocator<std::pair<unsigned int const ,Message::INFO> >
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
	lea	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2
	call	??$?0U?$pair@$$CBIVINFO@Message@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *><std::pair<unsigned int const ,Message::INFO> >
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_ptr@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBIVINFO@Message@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node><std::pair<unsigned int const ,Message::INFO> >
PUBLIC	??0?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@QAE@U?$less@I@1@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >, COMDAT
; _this$ = ecx
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Parg$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@QAE@U?$less@I@1@@Z ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>
	lea	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1
	call	??$?0U?$pair@$$CBIVINFO@Message@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node><std::pair<unsigned int const ,Message::INFO> >
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::construct
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@QAE@U?$less@I@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@QAE@U?$less@I@1@@Z PROC ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>, COMDAT
; _this$ = ecx
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\flhookplugin_sdk\headers\mapvc7.h
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@QAE@U?$less@I@1@@Z ENDP ; std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIVINFO@Message@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBIVINFO@Message@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *><std::pair<unsigned int const ,Message::INFO> >, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBIVINFO@Message@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *><std::pair<unsigned int const ,Message::INFO> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBIVINFO@Message@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBIVINFO@Message@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node><std::pair<unsigned int const ,Message::INFO> >, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBIVINFO@Message@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node><std::pair<unsigned int const ,Message::INFO> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T154075 = -8						; size = 4
__Vptr$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>, COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T154075[ebp], eax
	cmp	DWORD PTR $T154075[ebp], 0
	je	SHORT $LN3@Construct@4
	mov	edx, DWORD PTR $T154075[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T154075[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN1@Construct@4
$LN3@Construct@4:
	mov	DWORD PTR tv68[ebp], 0
$LN1@Construct@4:
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
; Function compile flags: /Odtp
;	COMDAT ??__Eset_lstHelpLines@Message@@YAXXZ
text$yc	SEGMENT
??__Eset_lstHelpLines@Message@@YAXXZ PROC		; Message::`dynamic initializer for 'set_lstHelpLines'', COMDAT
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\message.cpp
; Line 72
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_lstHelpLines
	call	??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
	push	OFFSET ??__Fset_lstHelpLines@Message@@YAXXZ ; Message::`dynamic atexit destructor for 'set_lstHelpLines''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__Eset_lstHelpLines@Message@@YAXXZ ENDP		; Message::`dynamic initializer for 'set_lstHelpLines''
text$yc	ENDS
PUBLIC	??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ; std::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
PUBLIC	?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Buynode
PUBLIC	??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ; std::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
PUBLIC	??0?$allocator@UINISECTIONVALUE@@@std@@QAE@XZ	; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154082 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154082[ebp], esp
	call	??0?$allocator@UINISECTIONVALUE@@@std@@QAE@XZ ; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ; std::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Buynode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 437
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
__ehhandler$??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
PUBLIC	??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ; std::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ PROC ; std::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
PUBLIC	??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ PROC ; std::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ENDP ; std::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >::~_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >::~_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >::~_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >
__ehhandler$??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::deallocate
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::destroy
PUBLIC	?_Prevnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Prevnode
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::construct
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ$0
__unwindtable$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Buynode, COMDAT
; _this$ = ecx
; Line 1171
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1172
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1173
	mov	DWORD PTR __Linkcnt$[ebp], 0
; Line 1175
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1176
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::construct
; Line 1177
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1178
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::construct
	jmp	SHORT $LN5@Buynode@5
__catch$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ$0:
; Line 1180
	cmp	DWORD PTR __Linkcnt$[ebp], 0
	jle	SHORT $LN1@Buynode@5
; Line 1181
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::destroy
$LN1@Buynode@5:
; Line 1182
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::deallocate
; Line 1183
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1184
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ$1
	ret	0
$LN5@Buynode@5:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ$1:
; Line 1185
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode@5:
; Line 1186
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@XZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Buynode
PUBLIC	??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ; std::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
PUBLIC	??0?$allocator@UINISECTIONVALUE@@@std@@QAE@ABV01@@Z ; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z$0
__ehfuncinfo$??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154134 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z PROC ; std::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >, COMDAT
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154134[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UINISECTIONVALUE@@@std@@QAE@ABV01@@Z ; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ; std::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$allocator@UINISECTIONVALUE@@@std@@QAE@ABV01@@Z ; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>
; Line 86
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ENDP ; std::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_val<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ$0
__ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >::~_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 439
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
; Line 440
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >::~_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@UINISECTIONVALUE@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UINISECTIONVALUE@@@std@@QAE@XZ PROC	; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UINISECTIONVALUE@@@std@@QAE@XZ ENDP	; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Prevnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 119
	push	ebp
	mov	ebp, esp
; Line 120
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 121
	pop	ebp
	ret	0
?_Prevnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Prevnode
_TEXT	ENDS
PUBLIC	??$?0UINISECTIONVALUE@@@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *><INISECTIONVALUE>
PUBLIC	??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z$0
__ehfuncinfo$??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154157 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z PROC ; std::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154157[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UINISECTIONVALUE@@@std@@QAE@ABV01@@Z ; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0UINISECTIONVALUE@@@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *><INISECTIONVALUE>
; Line 68
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_ptr@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ENDP ; std::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_ptr<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@UINISECTIONVALUE@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@UINISECTIONVALUE@@@std@@QAE@ABV01@@Z PROC ; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@UINISECTIONVALUE@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::allocate, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *,std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::construct, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *,std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??$?0UINISECTIONVALUE@@@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node><INISECTIONVALUE>
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z$0
__ehfuncinfo$??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154177 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z PROC ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154177[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UINISECTIONVALUE@@@std@@QAE@ABV01@@Z ; std::allocator<INISECTIONVALUE>::allocator<INISECTIONVALUE>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0UINISECTIONVALUE@@@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node><INISECTIONVALUE>
; Line 48
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >::~_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >
__ehhandler$??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ENDP ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
PUBLIC	??$?0UINISECTIONVALUE@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><INISECTIONVALUE>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z$1
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
_TEXT	SEGMENT
tv133 = -32						; size = 4
_this$ = -28						; size = 4
$T154189 = -24						; size = 4
$T154188 = -20						; size = 4
$T154187 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::_Container_base_aux
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0UINISECTIONVALUE@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><INISECTIONVALUE>
; Line 420
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
	mov	DWORD PTR $T154189[ebp], eax
	mov	ecx, DWORD PTR $T154189[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T154188[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T154188[ebp], 0
	je	SHORT $LN3@Container_@2
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T154188[ebp]
	call	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN4@Container_@2
$LN3@Container_@2:
	mov	DWORD PTR tv133[ebp], 0
$LN4@Container_@2:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T154187[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T154187[ebp]
	mov	DWORD PTR [ecx], edx
; Line 421
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z$1:
	mov	eax, DWORD PTR $T154189[ebp]
	push	eax
	mov	ecx, DWORD PTR $T154188[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAE@V?$allocator@UINISECTIONVALUE@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >::_Container_base_aux_alloc_real<std::allocator<INISECTIONVALUE> >
; Function compile flags: /Odtp
;	COMDAT ??$?0UINISECTIONVALUE@@@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UINISECTIONVALUE@@@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z PROC ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *><INISECTIONVALUE>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UINISECTIONVALUE@@@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z ENDP ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *><INISECTIONVALUE>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T154204 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@5
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@5
$LN3@Allocate@5:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 64					; 00000040H
	jae	SHORT $LN2@Allocate@5
; Line 40
	push	0
	lea	ecx, DWORD PTR $T154204[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T154204[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate@5:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 6
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@5:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T154207 = -8						; size = 4
__Vptr$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *,std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>, COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T154207[ebp], eax
	cmp	DWORD PTR $T154207[ebp], 0
	je	SHORT $LN3@Construct@5
	mov	edx, DWORD PTR $T154207[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T154207[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN1@Construct@5
$LN3@Construct@5:
	mov	DWORD PTR tv68[ebp], 0
$LN1@Construct@5:
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *,std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0UINISECTIONVALUE@@@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UINISECTIONVALUE@@@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z PROC ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node><INISECTIONVALUE>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UINISECTIONVALUE@@@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z ENDP ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node><INISECTIONVALUE>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0UINISECTIONVALUE@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UINISECTIONVALUE@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><INISECTIONVALUE>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UINISECTIONVALUE@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UINISECTIONVALUE@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><INISECTIONVALUE>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??__Eset_lstGreetingBannerLines@Message@@YAXXZ
text$yc	SEGMENT
??__Eset_lstGreetingBannerLines@Message@@YAXXZ PROC	; Message::`dynamic initializer for 'set_lstGreetingBannerLines'', COMDAT
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\message.cpp
; Line 75
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_lstGreetingBannerLines
	call	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	push	OFFSET ??__Fset_lstGreetingBannerLines@Message@@YAXXZ ; Message::`dynamic atexit destructor for 'set_lstGreetingBannerLines''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__Eset_lstGreetingBannerLines@Message@@YAXXZ ENDP	; Message::`dynamic initializer for 'set_lstGreetingBannerLines''
; Function compile flags: /Odtp
text$yc	ENDS
;	COMDAT ??__Eset_lstSpecialBannerLines@Message@@YAXXZ
text$yc	SEGMENT
??__Eset_lstSpecialBannerLines@Message@@YAXXZ PROC	; Message::`dynamic initializer for 'set_lstSpecialBannerLines'', COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_lstSpecialBannerLines
	call	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	push	OFFSET ??__Fset_lstSpecialBannerLines@Message@@YAXXZ ; Message::`dynamic atexit destructor for 'set_lstSpecialBannerLines''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__Eset_lstSpecialBannerLines@Message@@YAXXZ ENDP	; Message::`dynamic initializer for 'set_lstSpecialBannerLines''
text$yc	ENDS
PUBLIC	??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??__Eset_vctStandardBannerLines@Message@@YAXXZ
text$yc	SEGMENT
??__Eset_vctStandardBannerLines@Message@@YAXXZ PROC	; Message::`dynamic initializer for 'set_vctStandardBannerLines'', COMDAT
; Line 81
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_vctStandardBannerLines
	call	??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	push	OFFSET ??__Fset_vctStandardBannerLines@Message@@YAXXZ ; Message::`dynamic atexit destructor for 'set_vctStandardBannerLines''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__Eset_vctStandardBannerLines@Message@@YAXXZ ENDP	; Message::`dynamic initializer for 'set_vctStandardBannerLines''
text$yc	ENDS
PUBLIC	??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
PUBLIC	?_Buy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Buy
PUBLIC	??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z ; std::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
PUBLIC	??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@XZ ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154224 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; _this$ = ecx
; Line 470
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154224[ebp], esp
	call	??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@XZ ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z ; std::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 471
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE_NI@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Buy
; Line 472
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ PROC ; std::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
__ehhandler$??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE_NI@Z PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Buy, COMDAT
; _this$ = ecx
; Line 1102
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1103
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
; Line 1104
	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy
; Line 1105
	xor	al, al
	jmp	SHORT $LN5@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:
; Line 1106
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QBEIXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy
; Line 1107
	call	?_Xlen@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@KAXXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Xlen
; Line 1108
	jmp	SHORT $LN3@Buy
$LN2@Buy:
; Line 1110
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1111
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+16], ecx
; Line 1112
	mov	edx, DWORD PTR __Capacity$[ebp]
	imul	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+12]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], edx
$LN3@Buy:
; Line 1114
	mov	al, 1
$LN5@Buy:
; Line 1115
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE_NI@Z ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Buy
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
PUBLIC	??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154245 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z PROC ; std::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; _this$ = ecx
; Line 425
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154245[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Line 426
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
__ehhandler$??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z ENDP ; std::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Vector_val<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ$0
__ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 439
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
; Line 440
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
_TEXT	ENDS
PUBLIC	??$?0V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z$1
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
tv133 = -32						; size = 4
_this$ = -28						; size = 4
$T154268 = -24						; size = 4
$T154267 = -20						; size = 4
$T154266 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::_Container_base_aux
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Line 420
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
	mov	DWORD PTR $T154268[ebp], eax
	mov	ecx, DWORD PTR $T154268[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T154267[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T154267[ebp], 0
	je	SHORT $LN3@Container_@3
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T154267[ebp]
	call	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN4@Container_@3
$LN3@Container_@3:
	mov	DWORD PTR tv133[ebp], 0
$LN4@Container_@3:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T154266[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T154266[ebp]
	mov	DWORD PTR [ecx], edx
; Line 421
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z$1:
	mov	eax, DWORD PTR $T154268[ebp]
	push	eax
	mov	ecx, DWORD PTR $T154267[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@@std@@IAE@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Container_base_aux_alloc_real<std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??__Eset_wscCmdEchoStyle@Message@@YAXXZ
text$yc	SEGMENT
??__Eset_wscCmdEchoStyle@Message@@YAXXZ PROC		; Message::`dynamic initializer for 'set_wscCmdEchoStyle'', COMDAT
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\message.cpp
; Line 102
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_wscCmdEchoStyle
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	push	OFFSET ??__Fset_wscCmdEchoStyle@Message@@YAXXZ ; Message::`dynamic atexit destructor for 'set_wscCmdEchoStyle''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__Eset_wscCmdEchoStyle@Message@@YAXXZ ENDP		; Message::`dynamic initializer for 'set_wscCmdEchoStyle''
; Function compile flags: /Odtp
text$yc	ENDS
;	COMDAT ??__Eset_wscDisconnectSwearingInSpaceMsg@Message@@YAXXZ
text$yc	SEGMENT
??__Eset_wscDisconnectSwearingInSpaceMsg@Message@@YAXXZ PROC ; Message::`dynamic initializer for 'set_wscDisconnectSwearingInSpaceMsg'', COMDAT
; Line 104
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_wscDisconnectSwearingInSpaceMsg
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	push	OFFSET ??__Fset_wscDisconnectSwearingInSpaceMsg@Message@@YAXXZ ; Message::`dynamic atexit destructor for 'set_wscDisconnectSwearingInSpaceMsg''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__Eset_wscDisconnectSwearingInSpaceMsg@Message@@YAXXZ ENDP ; Message::`dynamic initializer for 'set_wscDisconnectSwearingInSpaceMsg''
; Function compile flags: /Odtp
text$yc	ENDS
;	COMDAT ??__Eset_lstSwearWords@Message@@YAXXZ
text$yc	SEGMENT
??__Eset_lstSwearWords@Message@@YAXXZ PROC		; Message::`dynamic initializer for 'set_lstSwearWords'', COMDAT
; Line 109
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_lstSwearWords
	call	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	push	OFFSET ??__Fset_lstSwearWords@Message@@YAXXZ ; Message::`dynamic atexit destructor for 'set_lstSwearWords''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__Eset_lstSwearWords@Message@@YAXXZ ENDP		; Message::`dynamic initializer for 'set_lstSwearWords''
; Function compile flags: /Odtp
text$yc	ENDS
;	COMDAT ??__FMSG_LOG@Message@@YAXXZ
text$yd	SEGMENT
??__FMSG_LOG@Message@@YAXXZ PROC			; Message::`dynamic atexit destructor for 'MSG_LOG'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _MSG_LOG
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	pop	ebp
	ret	0
??__FMSG_LOG@Message@@YAXXZ ENDP			; Message::`dynamic atexit destructor for 'MSG_LOG''
text$yd	ENDS
PUBLIC	??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::~map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >
; Function compile flags: /Odtp
;	COMDAT ??__FmapInfo@Message@@YAXXZ
text$yd	SEGMENT
??__FmapInfo@Message@@YAXXZ PROC			; Message::`dynamic atexit destructor for 'mapInfo'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _mapInfo
	call	??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ
	pop	ebp
	ret	0
??__FmapInfo@Message@@YAXXZ ENDP			; Message::`dynamic atexit destructor for 'mapInfo''
text$yd	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ$0
__ehfuncinfo$??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ PROC ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::~map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree@V?$_Tmap_traits@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> >,0> >
__ehhandler$??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$map@IVINFO@Message@@U?$less@I@std@@V?$allocator@U?$pair@$$CBIVINFO@Message@@@std@@@4@@std@@QAE@XZ ENDP ; std::map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >::~map<unsigned int,Message::INFO,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,Message::INFO> > >
PUBLIC	??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
; Function compile flags: /Odtp
;	COMDAT ??__Fset_lstHelpLines@Message@@YAXXZ
text$yd	SEGMENT
??__Fset_lstHelpLines@Message@@YAXXZ PROC		; Message::`dynamic atexit destructor for 'set_lstHelpLines'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_lstHelpLines
	call	??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
	pop	ebp
	ret	0
??__Fset_lstHelpLines@Message@@YAXXZ ENDP		; Message::`dynamic atexit destructor for 'set_lstHelpLines''
text$yd	ENDS
PUBLIC	?_Tidy@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEXXZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEXXZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Tidy
; Line 522
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
__ehhandler$??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::~list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >
PUBLIC	?clear@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEXXZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::clear
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEXXZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1213
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEXXZ ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::clear
; Line 1214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::destroy
; Line 1215
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node *>::destroy
; Line 1216
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::deallocate
; Line 1217
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 1218
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@IAEXXZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Tidy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::destroy
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEXXZ PROC ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::clear, COMDAT
; _this$ = ecx
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 832
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax], ecx
; Line 834
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax], edx
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 837
	jmp	SHORT $LN3@clear@3
$LN2@clear@3:
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear@3:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+20]
	je	SHORT $LN4@clear@3
; Line 839
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@PAU342@@Z ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], edx
; Line 840
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?destroy@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::destroy
; Line 841
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@I@Z ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::deallocate
; Line 842
	jmp	SHORT $LN2@clear@3
$LN4@clear@3:
; Line 843
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEXXZ ENDP ; std::list<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::clear
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??_G_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEPAXI@Z ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node::`scalar deleting destructor'
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 59
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEPAXI@Z
; Line 60
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node>
_TEXT	ENDS
PUBLIC	??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node::~_Node
; Function compile flags: /Odtp
;	COMDAT ??_G_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEPAXI@Z PROC ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAEPAXI@Z ENDP ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1INISECTIONVALUE@@QAE@XZ			; INISECTIONVALUE::~INISECTIONVALUE
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node::~_Node, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1INISECTIONVALUE@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1INISECTIONVALUE@@QAE@XZ
__ehhandler$??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Node@?$_List_nod@UINISECTIONVALUE@@V?$allocator@UINISECTIONVALUE@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<INISECTIONVALUE,std::allocator<INISECTIONVALUE> >::_Node::~_Node
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1INISECTIONVALUE@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1INISECTIONVALUE@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1INISECTIONVALUE@@QAE@XZ$1
__ehfuncinfo$??1INISECTIONVALUE@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1INISECTIONVALUE@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1INISECTIONVALUE@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1INISECTIONVALUE@@QAE@XZ PROC				; INISECTIONVALUE::~INISECTIONVALUE, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1INISECTIONVALUE@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1INISECTIONVALUE@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$??1INISECTIONVALUE@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??1INISECTIONVALUE@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1INISECTIONVALUE@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1INISECTIONVALUE@@QAE@XZ ENDP				; INISECTIONVALUE::~INISECTIONVALUE
; Function compile flags: /Odtp
;	COMDAT ??__Fset_lstGreetingBannerLines@Message@@YAXXZ
text$yd	SEGMENT
??__Fset_lstGreetingBannerLines@Message@@YAXXZ PROC	; Message::`dynamic atexit destructor for 'set_lstGreetingBannerLines'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_lstGreetingBannerLines
	call	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	pop	ebp
	ret	0
??__Fset_lstGreetingBannerLines@Message@@YAXXZ ENDP	; Message::`dynamic atexit destructor for 'set_lstGreetingBannerLines''
; Function compile flags: /Odtp
text$yd	ENDS
;	COMDAT ??__Fset_lstSpecialBannerLines@Message@@YAXXZ
text$yd	SEGMENT
??__Fset_lstSpecialBannerLines@Message@@YAXXZ PROC	; Message::`dynamic atexit destructor for 'set_lstSpecialBannerLines'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_lstSpecialBannerLines
	call	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	pop	ebp
	ret	0
??__Fset_lstSpecialBannerLines@Message@@YAXXZ ENDP	; Message::`dynamic atexit destructor for 'set_lstSpecialBannerLines''
text$yd	ENDS
PUBLIC	??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ??__Fset_vctStandardBannerLines@Message@@YAXXZ
text$yd	SEGMENT
??__Fset_vctStandardBannerLines@Message@@YAXXZ PROC	; Message::`dynamic atexit destructor for 'set_vctStandardBannerLines'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_vctStandardBannerLines
	call	??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
	pop	ebp
	ret	0
??__Fset_vctStandardBannerLines@Message@@YAXXZ ENDP	; Message::`dynamic atexit destructor for 'set_vctStandardBannerLines''
text$yd	ENDS
PUBLIC	?_Tidy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >, COMDAT
; _this$ = ecx
; Line 558
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 559
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXXZ ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Tidy
; Line 560
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::~vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXXZ PROC ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Tidy, COMDAT
; _this$ = ecx
; Line 1123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1124
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@Tidy
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@0@Z ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Destroy
; Line 1132
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	sub	ecx, DWORD PTR [eax+12]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > >::deallocate
$LN1@Tidy:
; Line 1134
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 1135
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@V?$allocator@V?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@2@@std@@IAEXXZ ENDP ; std::vector<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >,std::allocator<std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > > > >::_Tidy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??__Fset_wscCmdEchoStyle@Message@@YAXXZ
text$yd	SEGMENT
??__Fset_wscCmdEchoStyle@Message@@YAXXZ PROC		; Message::`dynamic atexit destructor for 'set_wscCmdEchoStyle'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_wscCmdEchoStyle
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	pop	ebp
	ret	0
??__Fset_wscCmdEchoStyle@Message@@YAXXZ ENDP		; Message::`dynamic atexit destructor for 'set_wscCmdEchoStyle''
; Function compile flags: /Odtp
text$yd	ENDS
;	COMDAT ??__Fset_wscDisconnectSwearingInSpaceMsg@Message@@YAXXZ
text$yd	SEGMENT
??__Fset_wscDisconnectSwearingInSpaceMsg@Message@@YAXXZ PROC ; Message::`dynamic atexit destructor for 'set_wscDisconnectSwearingInSpaceMsg'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_wscDisconnectSwearingInSpaceMsg
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	pop	ebp
	ret	0
??__Fset_wscDisconnectSwearingInSpaceMsg@Message@@YAXXZ ENDP ; Message::`dynamic atexit destructor for 'set_wscDisconnectSwearingInSpaceMsg''
; Function compile flags: /Odtp
text$yd	ENDS
;	COMDAT ??__Fset_lstSwearWords@Message@@YAXXZ
text$yd	SEGMENT
??__Fset_lstSwearWords@Message@@YAXXZ PROC		; Message::`dynamic atexit destructor for 'set_lstSwearWords'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET _set_lstSwearWords
	call	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	pop	ebp
	ret	0
??__Fset_lstSwearWords@Message@@YAXXZ ENDP		; Message::`dynamic atexit destructor for 'set_lstSwearWords''
text$yd	ENDS
_BSS	SEGMENT
	ALIGN	4

_set_lstGreetingBannerLines DB 01cH DUP (?)
_set_vctStandardBannerLines DB 018H DUP (?)
_mapInfo DB	0cH DUP (?)
_MSG_LOG DB	01cH DUP (?)
_set_lstSpecialBannerLines DB 01cH DUP (?)
_set_wscCmdEchoStyle DB 01cH DUP (?)
_set_lstSwearWords DB 01cH DUP (?)
_set_lstHelpLines DB 01cH DUP (?)
_set_wscDisconnectSwearingInSpaceMsg DB 01cH DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_MSG_LOG$initializer$ DD FLAT:??__EMSG_LOG@Message@@YAXXZ
_mapInfo$initializer$ DD FLAT:??__EmapInfo@Message@@YAXXZ
_set_lstHelpLines$initializer$ DD FLAT:??__Eset_lstHelpLines@Message@@YAXXZ
_set_lstGreetingBannerLines$initializer$ DD FLAT:??__Eset_lstGreetingBannerLines@Message@@YAXXZ
_set_lstSpecialBannerLines$initializer$ DD FLAT:??__Eset_lstSpecialBannerLines@Message@@YAXXZ
_set_vctStandardBannerLines$initializer$ DD FLAT:??__Eset_vctStandardBannerLines@Message@@YAXXZ
_set_wscCmdEchoStyle$initializer$ DD FLAT:??__Eset_wscCmdEchoStyle@Message@@YAXXZ
_set_wscDisconnectSwearingInSpaceMsg$initializer$ DD FLAT:??__Eset_wscDisconnectSwearingInSpaceMsg@Message@@YAXXZ
_set_lstSwearWords$initializer$ DD FLAT:??__Eset_lstSwearWords@Message@@YAXXZ
CRT$XCU	ENDS
END
