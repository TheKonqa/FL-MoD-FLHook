; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	g:\Max\Bastelstube\FL\FLHook Source\flhookplugin_MoD\plugins\playercntl_plugin\src\PluginUtilities.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB ; std::_Is_swap_move<std::_Swap_move_tag>::_Value
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB
CONST	SEGMENT
?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB DB 01H ; std::_Is_swap_move<std::_Swap_move_tag>::_Value
CONST	ENDS
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:$SG63979
_DATA	ENDS
CONST	SEGMENT
$SG63979 DB	'bad allocation', 00H
$SG142739 DB	00H
$SG142668 DB	00H, 00H
$SG142761 DB	00H
$SG142763 DB	00H
$SG142672 DB	'r', 00H, 'a', 00H, 'n', 00H, 'k', 00H, 00H, 00H
$SG147499 DB	00H
	ORG $+1
$SG142692 DB	'.fl', 00H
$SG142693 DB	'\', 00H
	ORG $+2
$SG142697 DB	'.ini', 00H
	ORG $+3
$SG142703 DB	'total_time_played', 00H
	ORG $+2
$SG142704 DB	'mPlayer', 00H
$SG142709 DB	'total_time_played', 00H
	ORG $+2
$SG142710 DB	'mPlayer', 00H
$SG142729 DB	00H, 00H
	ORG $+2
$SG142757 DB	'\Accts\MultiPlayer\', 00H
$SG142770 DB	'\', 00H
	ORG $+6
$SG142780 DB	'<', 00H, '?', 00H, 'x', 00H, 'm', 00H, 'l', 00H, ' ', 00H
	DB	'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, '=', 00H, '"', 00H, '1', 00H, '.', 00H, '0', 00H, '"', 00H
	DB	' ', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i'
	DB	00H, 'n', 00H, 'g', 00H, '=', 00H, '"', 00H, 'U', 00H, 'T', 00H
	DB	'F', 00H, '-', 00H, '1', 00H, '6', 00H, '"', 00H, '?', 00H, '>'
	DB	00H, '<', 00H, 'R', 00H, 'D', 00H, 'L', 00H, '>', 00H, '<', 00H
	DB	'P', 00H, 'U', 00H, 'S', 00H, 'H', 00H, '/', 00H, '>', 00H, 00H
	DB	00H
$SG142784 DB	'<', 00H, '/', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
$SG142785 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '=', 00H, '"', 00H, '0', 00H, 'x'
	DB	00H, 'E', 00H, '6', 00H, 'C', 00H, '6', 00H, '8', 00H, '4', 00H
	DB	'0', 00H, '0', 00H, '"', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's'
	DB	00H, 'k', 00H, '=', 00H, '"', 00H, '-', 00H, '1', 00H, '"', 00H
	DB	'/', 00H, '>', 00H, '<', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T'
	DB	00H, '>', 00H, 00H, 00H
	ORG $+2
$SG142786 DB	'<', 00H, 'P', 00H, 'A', 00H, 'R', 00H, 'A', 00H, '/', 00H
	DB	'>', 00H, '<', 00H, 'P', 00H, 'O', 00H, 'P', 00H, '/', 00H, '>'
	DB	00H, '<', 00H, '/', 00H, 'R', 00H, 'D', 00H, 'L', 00H, '>', 00H
	DB	0aH, 00H, 0aH, 00H, 00H, 00H
$SG142804 DB	'%08X', 00H
	ORG $+3
$SG142826 DB	'%', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143558 DB	'..\DATA\CHARACTERS\newcharacter.ini', 00H
$SG143567 DB	'Faction', 00H
$SG143572 DB	'nickname', 00H
	ORG $+3
$SG143575 DB	'base', 00H
	ORG $+3
$SG143578 DB	'package', 00H
$SG143581 DB	'pilot', 00H
	ORG $+2
$SG143583 DB	'new_player', 00H
	ORG $+1
$SG143585 DB	'Li01_01_Base', 00H
	ORG $+3
$SG143587 DB	'ge_fighter', 00H
	ORG $+1
$SG143589 DB	'trent', 00H
	ORG $+2
$SG143600 DB	'\Accts\MultiPlayer\', 00H
$SG143613 DB	'\', 00H
	ORG $+2
$SG143645 DB	'i', 00H, 'd', 00H, ' ', 00H, 00H, 00H
$SG143651 DB	'i', 00H, 'd', 00H, ' ', 00H, 00H, 00H
$SG143659 DB	'i', 00H, 'd', 00H, ' ', 00H, 00H, 00H
$SG143665 DB	'i', 00H, 'd', 00H, ' ', 00H, 00H, 00H
$SG143823 DB	'i', 00H, 00H, 00H
$SG143829 DB	'i', 00H, 00H, 00H
$SG143853 DB	'%', 00H, '0', 00H, '2', 00H, 'X', 00H, 00H, 00H
	ORG $+2
$SG143856 DB	'F', 00H, 'F', 00H, 'F', 00H, 'F', 00H, 'F', 00H, 'F', 00H
	DB	00H, 00H
	ORG $+2
$SG143871 DB	'<', 00H, '/', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H
	DB	'>', 00H, 00H, 00H
$SG143872 DB	'"', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's', 00H, 'k', 00H
	DB	'=', 00H, '"', 00H, '-', 00H, '1', 00H, '"', 00H, '/', 00H, '>'
	DB	00H, '<', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H, '>', 00H
	DB	00H, 00H
$SG143873 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '=', 00H, '"', 00H, '0', 00H, 'x'
	DB	00H, 00H, 00H
$SG143874 DB	':', 00H, ' ', 00H, '<', 00H, '/', 00H, 'T', 00H, 'E', 00H
	DB	'X', 00H, 'T', 00H, '>', 00H, 00H, 00H
$SG143875 DB	'"', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 's', 00H, 'k', 00H
	DB	'=', 00H, '"', 00H, '-', 00H, '1', 00H, '"', 00H, '/', 00H, '>'
	DB	00H, '<', 00H, 'T', 00H, 'E', 00H, 'X', 00H, 'T', 00H, '>', 00H
	DB	00H, 00H
$SG143876 DB	'<', 00H, 'T', 00H, 'R', 00H, 'A', 00H, ' ', 00H, 'd', 00H
	DB	'a', 00H, 't', 00H, 'a', 00H, '=', 00H, '"', 00H, '0', 00H, 'x'
	DB	00H, 00H, 00H
$SG143897 DB	'p', 00H, 00H, 00H
$SG143899 DB	'1', 00H, '9', 00H, 'B', 00H, 'D', 00H, '3', 00H, 'A', 00H
	DB	00H, 00H
	ORG $+2
$SG143901 DB	'1', 00H, '9', 00H, 'B', 00H, 'D', 00H, '3', 00H, 'A', 00H
	DB	00H, 00H
	ORG $+2
$SG143917 DB	'E', 00H, '6', 00H, 'C', 00H, '6', 00H, '8', 00H, '4', 00H
	DB	00H, 00H
	ORG $+2
$SG143941 DB	'F', 00H, 'F', 00H, '8', 00H, 'F', 00H, '4', 00H, '0', 00H
	DB	00H, 00H
	ORG $+2
$SG143967 DB	'F', 00H, 'F', 00H, '7', 00H, 'B', 00H, 'F', 00H, 'F', 00H
	DB	00H, 00H
	ORG $+6
$SG143982 DB	'%', 00H, '0', 00H, '4', 00H, 'd', 00H, '-', 00H, '%', 00H
	DB	'0', 00H, '2', 00H, 'd', 00H, '-', 00H, '%', 00H, '0', 00H, '2'
	DB	00H, 'd', 00H, ' ', 00H, '%', 00H, '0', 00H, '2', 00H, 'd', 00H
	DB	':', 00H, '%', 00H, '0', 00H, '2', 00H, 'd', 00H, ':', 00H, '%'
	DB	00H, '0', 00H, '2', 00H, 'd', 00H, ' ', 00H, 'S', 00H, 'M', 00H
	DB	'T', 00H, ' ', 00H, 00H, 00H
	ORG $+2
$SG143990 DB	'i', 00H, 'd', 00H, ' ', 00H, 00H, 00H
$SG144004 DB	'1', 00H, ':', 00H, ' ', 00H, '%', 00H, 'u', 00H, ' ', 00H
	DB	'%', 00H, 'u', 00H, 0aH, 00H, 00H, 00H
$SG144021 DB	'X', 00H, 00H, 00H
$SG144024 DB	'A', 00H, 00H, 00H
$SG144025 DB	'B', 00H, 00H, 00H
$SG144026 DB	'C', 00H, 00H, 00H
$SG144027 DB	'D', 00H, 00H, 00H
$SG144028 DB	'E', 00H, 00H, 00H
$SG144029 DB	'F', 00H, 00H, 00H
$SG144030 DB	'G', 00H, 00H, 00H
$SG144031 DB	'H', 00H, 00H, 00H
$SG144033 DB	'X', 00H, 00H, 00H
$SG144036 DB	'1', 00H, 00H, 00H
$SG144037 DB	'2', 00H, 00H, 00H
$SG144038 DB	'3', 00H, 00H, 00H
$SG144039 DB	'4', 00H, 00H, 00H
$SG144040 DB	'5', 00H, 00H, 00H
$SG144041 DB	'6', 00H, 00H, 00H
$SG144042 DB	'7', 00H, 00H, 00H
$SG144043 DB	'8', 00H, 00H, 00H
$SG144045 DB	'%', 00H, 's', 00H, '-', 00H, '%', 00H, 's', 00H, 00H, 00H
$SG144055 DB	'E', 00H, 'R', 00H, 'R', 00H, ' ', 00H, 'N', 00H, 'o', 00H
	DB	't', 00H, ' ', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 's', 00H, 'p'
	DB	00H, 'a', 00H, 'c', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG144427 DB	'resources.dll', 00H
	ORG $+2
$SG144431 DB	'freelancer.ini', 00H
	ORG $+1
$SG144436 DB	'Resources', 00H
	ORG $+2
$SG144441 DB	'DLL', 00H
$SG144455 DB	00H, 00H
	ORG $+2
$SG147465 DB	'DBGHELP.DLL', 00H
$SG147469 DB	'MiniDumpWriteDump', 00H
	ORG $+2
$SG147474 DB	'./flhook_logs/debug/flserver_%d.%m.%Y_%H.%M.dmp', 00H
$SG147502 DB	'Code=%x Offset=%x Module="%s"', 00H
	ORG $+2
$SG147504 DB	'No exception information available', 00H
	ORG $+1
$SG147506 DB	'eax=%x ebx=%x ecx=%x edx=%x edi=%x esi=%x ebp=%x eip=%x '
	DB	'esp=%x', 00H
	ORG $+1
$SG147508 DB	'No register information available', 00H
	ORG $+2
$SG147509 DB	'Exception in AddExceptionInfoLog!', 00H
	ORG $+2
$SG147521 DB	00H, 00H
	ORG $+2
$SG147695 DB	'=', 00H, 00H, 00H
$SG147698 DB	'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG147699 DB	'l', 00H, 'a', 00H, 's', 00H, 't', 00H, '_', 00H, 'b', 00H
	DB	'a', 00H, 's', 00H, 'e', 00H, 00H, 00H
$SG147701 DB	'=', 00H, 00H, 00H
$SG147724 DB	'=', 00H, 00H, 00H
$SG147727 DB	'c', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'o', 00H, 00H, 00H
$SG147728 DB	'e', 00H, 'q', 00H, 'u', 00H, 'i', 00H, 'p', 00H, 00H, 00H
$SG147730 DB	'=', 00H, 00H, 00H
$SG147733 DB	',', 00H, 00H, 00H
$SG147743 DB	',', 00H, 00H, 00H
$SG147753 DB	'm', 00H, 'o', 00H, 'n', 00H, 'e', 00H, 'y', 00H, 00H, 00H
$SG147755 DB	'=', 00H, 00H, 00H
$SG147763 DB	's', 00H, 'h', 00H, 'i', 00H, 'p', 00H, '_', 00H, 'a', 00H
	DB	'r', 00H, 'c', 00H, 'h', 00H, 'e', 00H, 't', 00H, 'y', 00H, 'p'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG147768 DB	'=', 00H, 00H, 00H
CONST	ENDS
PUBLIC	?GetCurrentExceptionRecord@@YAPBU_EXCEPTION_RECORD@@XZ ; GetCurrentExceptionRecord
EXTRN	__getptd:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p$ = -4						; size = 4
?GetCurrentExceptionRecord@@YAPBU_EXCEPTION_RECORD@@XZ PROC ; GetCurrentExceptionRecord
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\exceptioninfo.h
; Line 136
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 137
	call	__getptd
	mov	DWORD PTR _p$[ebp], eax
; Line 138
	mov	eax, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [eax+136]
; Line 139
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCurrentExceptionRecord@@YAPBU_EXCEPTION_RECORD@@XZ ENDP ; GetCurrentExceptionRecord
_TEXT	ENDS
PUBLIC	?GetCurrentExceptionContext@@YAPBU_CONTEXT@@XZ	; GetCurrentExceptionContext
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p$ = -4						; size = 4
?GetCurrentExceptionContext@@YAPBU_CONTEXT@@XZ PROC	; GetCurrentExceptionContext
; Line 141
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 142
	call	__getptd
	mov	DWORD PTR _p$[ebp], eax
; Line 143
	mov	eax, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [eax+140]
; Line 144
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCurrentExceptionContext@@YAPBU_CONTEXT@@XZ ENDP	; GetCurrentExceptionContext
_TEXT	ENDS
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	?HkDistance3D@@YAMVVector@@0@Z			; HkDistance3D
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv93 = -16						; size = 4
_sq3$ = -12						; size = 4
_sq2$ = -8						; size = 4
_sq1$ = -4						; size = 4
_v1$ = 8						; size = 12
_v2$ = 20						; size = 12
?HkDistance3D@@YAMVVector@@0@Z PROC			; HkDistance3D
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\pluginutilities.cpp
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 43
	fld	DWORD PTR _v1$[ebp]
	fsub	DWORD PTR _v2$[ebp]
	fstp	DWORD PTR _sq1$[ebp]
	fld	DWORD PTR _v1$[ebp+4]
	fsub	DWORD PTR _v2$[ebp+4]
	fstp	DWORD PTR _sq2$[ebp]
	fld	DWORD PTR _v1$[ebp+8]
	fsub	DWORD PTR _v2$[ebp+8]
	fstp	DWORD PTR _sq3$[ebp]
; Line 44
	fld	DWORD PTR _sq1$[ebp]
	fmul	DWORD PTR _sq1$[ebp]
	fld	DWORD PTR _sq2$[ebp]
	fmul	DWORD PTR _sq2$[ebp]
	faddp	ST(1), ST(0)
	fld	DWORD PTR _sq3$[ebp]
	fmul	DWORD PTR _sq3$[ebp]
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv93[ebp]
	fld	DWORD PTR tv93[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
; Line 45
	mov	esp, ebp
	pop	ebp
	ret	0
?HkDistance3D@@YAMVVector@@0@Z ENDP			; HkDistance3D
_TEXT	ENDS
PUBLIC	_sqrtf
; Function compile flags: /Odtp
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\math.h
; Line 534
	push	ebp
	mov	ebp, esp
	push	ecx
	fld	DWORD PTR __X$[ebp]
	fstp	DWORD PTR [esp]
	call	_sqrtf
	add	esp, 4
	pop	ebp
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
EXTRN	_sqrt:PROC
; Function compile flags: /Odtp
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv73 = -4						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT
; Line 423
	push	ebp
	mov	ebp, esp
	push	ecx
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sqrt
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
PUBLIC	?HkTempBan@@YAXII@Z				; HkTempBan
EXTRN	__imp_?Plugin_Communication@@YAXW4PLUGIN_MESSAGE@@PAX@Z:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_tempban$ = -8						; size = 8
_iClientID$ = 8						; size = 4
_iDuration$ = 12					; size = 4
?HkTempBan@@YAXII@Z PROC				; HkTempBan
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\pluginutilities.cpp
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 52
	mov	eax, DWORD PTR _iClientID$[ebp]
	mov	DWORD PTR _tempban$[ebp], eax
; Line 53
	mov	ecx, DWORD PTR _iDuration$[ebp]
	mov	DWORD PTR _tempban$[ebp+4], ecx
; Line 54
	lea	edx, DWORD PTR _tempban$[ebp]
	push	edx
	push	20					; 00000014H
	call	DWORD PTR __imp_?Plugin_Communication@@YAXW4PLUGIN_MESSAGE@@PAX@Z
	add	esp, 8
; Line 55
	mov	esp, ebp
	pop	ebp
	ret	0
?HkTempBan@@YAXII@Z ENDP				; HkTempBan
_TEXT	ENDS
PUBLIC	??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ		; DSACE_CHANGE_INFOCARD_STRUCT::~DSACE_CHANGE_INFOCARD_STRUCT
PUBLIC	??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ		; DSACE_CHANGE_INFOCARD_STRUCT::DSACE_CHANGE_INFOCARD_STRUCT
PUBLIC	__$ArrayPad$
PUBLIC	?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; HkChangeIDSString
EXTRN	__imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
xdata$x	SEGMENT
__unwindtable$?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
__ehfuncinfo$?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
_info$ = -52						; size = 36
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_ids$ = 12						; size = 4
_text$ = 16						; size = 4
?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; HkChangeIDSString
; Line 59
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 60
	lea	ecx, DWORD PTR _info$[ebp]
	call	??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 61
	mov	eax, DWORD PTR _iClientID$[ebp]
	mov	DWORD PTR _info$[ebp], eax
; Line 62
	mov	ecx, DWORD PTR _ids$[ebp]
	mov	DWORD PTR _info$[ebp+4], ecx
; Line 63
	mov	edx, DWORD PTR _text$[ebp]
	push	edx
	lea	ecx, DWORD PTR _info$[ebp+8]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
; Line 64
	lea	eax, DWORD PTR _info$[ebp]
	push	eax
	push	40					; 00000028H
	call	DWORD PTR __imp_?Plugin_Communication@@YAXW4PLUGIN_MESSAGE@@PAX@Z
	add	esp, 8
; Line 65
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _info$[ebp]
	call	??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _info$[ebp]
	jmp	??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
__ehhandler$?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkChangeIDSString@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; HkChangeIDSString
EXTRN	__imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ$0
__ehfuncinfo$??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ PROC		; DSACE_CHANGE_INFOCARD_STRUCT::DSACE_CHANGE_INFOCARD_STRUCT, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ ENDP		; DSACE_CHANGE_INFOCARD_STRUCT::DSACE_CHANGE_INFOCARD_STRUCT
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ$0
__ehfuncinfo$??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ PROC		; DSACE_CHANGE_INFOCARD_STRUCT::~DSACE_CHANGE_INFOCARD_STRUCT, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DSACE_CHANGE_INFOCARD_STRUCT@@QAE@XZ ENDP		; DSACE_CHANGE_INFOCARD_STRUCT::~DSACE_CHANGE_INFOCARD_STRUCT
PUBLIC	__real@4000000000000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	?HkMatrixToQuaternion@@YA?AVQuaternion@@VMatrix@@@Z ; HkMatrixToQuaternion
EXTRN	__imp___copysign:PROC
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Odtp
CONST	ENDS
_TEXT	SEGMENT
tv283 = -64						; size = 4
tv194 = -60						; size = 8
tv268 = -52						; size = 4
tv168 = -48						; size = 8
tv253 = -40						; size = 4
tv142 = -36						; size = 8
tv238 = -28						; size = 4
tv84 = -24						; size = 8
_quaternion$ = -16					; size = 16
$T153971 = 8						; size = 4
_m$ = 12						; size = 36
?HkMatrixToQuaternion@@YA?AVQuaternion@@VMatrix@@@Z PROC ; HkMatrixToQuaternion
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
; Line 70
	fld	DWORD PTR _m$[ebp]
	fld1
	faddp	ST(1), ST(0)
	fadd	DWORD PTR _m$[ebp+16]
	fadd	DWORD PTR _m$[ebp+32]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN3@HkMatrixTo
	fldz
	fstp	QWORD PTR tv84[ebp]
	jmp	SHORT $LN4@HkMatrixTo
$LN3@HkMatrixTo:
	fld	DWORD PTR _m$[ebp]
	fld1
	faddp	ST(1), ST(0)
	fadd	DWORD PTR _m$[ebp+16]
	fadd	DWORD PTR _m$[ebp+32]
	fstp	QWORD PTR tv84[ebp]
$LN4@HkMatrixTo:
	fld	QWORD PTR tv84[ebp]
	fstp	DWORD PTR tv238[ebp]
	fld	DWORD PTR tv238[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fdiv	QWORD PTR __real@4000000000000000
	fstp	DWORD PTR _quaternion$[ebp]
; Line 71
	fld	DWORD PTR _m$[ebp]
	fld1
	faddp	ST(1), ST(0)
	fsub	DWORD PTR _m$[ebp+16]
	fsub	DWORD PTR _m$[ebp+32]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN5@HkMatrixTo
	fldz
	fstp	QWORD PTR tv142[ebp]
	jmp	SHORT $LN6@HkMatrixTo
$LN5@HkMatrixTo:
	fld	DWORD PTR _m$[ebp]
	fld1
	faddp	ST(1), ST(0)
	fsub	DWORD PTR _m$[ebp+16]
	fsub	DWORD PTR _m$[ebp+32]
	fstp	QWORD PTR tv142[ebp]
$LN6@HkMatrixTo:
	fld	QWORD PTR tv142[ebp]
	fstp	DWORD PTR tv253[ebp]
	fld	DWORD PTR tv253[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fdiv	QWORD PTR __real@4000000000000000
	fstp	DWORD PTR _quaternion$[ebp+4]
; Line 72
	fld	DWORD PTR _m$[ebp]
	fld1
	fsubrp	ST(1), ST(0)
	fadd	DWORD PTR _m$[ebp+16]
	fsub	DWORD PTR _m$[ebp+32]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN7@HkMatrixTo
	fldz
	fstp	QWORD PTR tv168[ebp]
	jmp	SHORT $LN8@HkMatrixTo
$LN7@HkMatrixTo:
	fld	DWORD PTR _m$[ebp]
	fld1
	fsubrp	ST(1), ST(0)
	fadd	DWORD PTR _m$[ebp+16]
	fsub	DWORD PTR _m$[ebp+32]
	fstp	QWORD PTR tv168[ebp]
$LN8@HkMatrixTo:
	fld	QWORD PTR tv168[ebp]
	fstp	DWORD PTR tv268[ebp]
	fld	DWORD PTR tv268[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fdiv	QWORD PTR __real@4000000000000000
	fstp	DWORD PTR _quaternion$[ebp+8]
; Line 73
	fld	DWORD PTR _m$[ebp]
	fld1
	fsubrp	ST(1), ST(0)
	fsub	DWORD PTR _m$[ebp+16]
	fadd	DWORD PTR _m$[ebp+32]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN9@HkMatrixTo
	fldz
	fstp	QWORD PTR tv194[ebp]
	jmp	SHORT $LN10@HkMatrixTo
$LN9@HkMatrixTo:
	fld	DWORD PTR _m$[ebp]
	fld1
	fsubrp	ST(1), ST(0)
	fsub	DWORD PTR _m$[ebp+16]
	fadd	DWORD PTR _m$[ebp+32]
	fstp	QWORD PTR tv194[ebp]
$LN10@HkMatrixTo:
	fld	QWORD PTR tv194[ebp]
	fstp	DWORD PTR tv283[ebp]
	fld	DWORD PTR tv283[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fdiv	QWORD PTR __real@4000000000000000
	fstp	DWORD PTR _quaternion$[ebp+12]
; Line 74
	fld	DWORD PTR _m$[ebp+28]
	fsub	DWORD PTR _m$[ebp+20]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR _quaternion$[ebp+4]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp___copysign
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _quaternion$[ebp+4]
; Line 75
	fld	DWORD PTR _m$[ebp+8]
	fsub	DWORD PTR _m$[ebp+24]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR _quaternion$[ebp+8]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp___copysign
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _quaternion$[ebp+8]
; Line 76
	fld	DWORD PTR _m$[ebp+12]
	fsub	DWORD PTR _m$[ebp+4]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR _quaternion$[ebp+12]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp___copysign
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _quaternion$[ebp+12]
; Line 77
	mov	eax, DWORD PTR $T153971[ebp]
	mov	ecx, DWORD PTR _quaternion$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _quaternion$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _quaternion$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _quaternion$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR $T153971[ebp]
; Line 78
	mov	esp, ebp
	pop	ebp
	ret	0
?HkMatrixToQuaternion@@YA?AVQuaternion@@VMatrix@@@Z ENDP ; HkMatrixToQuaternion
_TEXT	ENDS
PUBLIC	?HkRelocateClient@@YAXIVVector@@VMatrix@@@Z	; HkRelocateClient
EXTRN	__imp_?Relocate@SpaceObj@pub@@YAHABI0ABVVector@@ABVMatrix@@@Z:PROC
EXTRN	__imp_?GetSystem@Player@pub@@YAHABIAAI@Z:PROC
EXTRN	__imp_?HookClient@@3PAUHkIClientImpl@@A:DWORD
EXTRN	__imp_?ClientInfo@@3PAUCLIENT_INFO@@A:BYTE
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T153988 = -96						; size = 16
$T153987 = -76						; size = 16
_qRotation$ = -60					; size = 16
_pLaunch$ = -44						; size = 40
_iSystem$ = -4						; size = 4
_iClientID$ = 8						; size = 4
_vDestination$ = 12					; size = 12
_mOrientation$ = 24					; size = 36
?HkRelocateClient@@YAXIVVector@@VMatrix@@@Z PROC	; HkRelocateClient
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	esi
	push	edi
; Line 83
	sub	esp, 36					; 00000024H
	mov	ecx, 9
	lea	esi, DWORD PTR _mOrientation$[ebp]
	mov	edi, esp
	rep movsd
	lea	eax, DWORD PTR $T153988[ebp]
	push	eax
	call	?HkMatrixToQuaternion@@YA?AVQuaternion@@VMatrix@@@Z ; HkMatrixToQuaternion
	add	esp, 40					; 00000028H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T153987[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T153987[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T153987[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR $T153987[ebp+12], edx
	mov	eax, DWORD PTR $T153987[ebp]
	mov	DWORD PTR _qRotation$[ebp], eax
	mov	ecx, DWORD PTR $T153987[ebp+4]
	mov	DWORD PTR _qRotation$[ebp+4], ecx
	mov	edx, DWORD PTR $T153987[ebp+8]
	mov	DWORD PTR _qRotation$[ebp+8], edx
	mov	eax, DWORD PTR $T153987[ebp+12]
	mov	DWORD PTR _qRotation$[ebp+12], eax
; Line 86
	mov	ecx, DWORD PTR _iClientID$[ebp]
	imul	ecx, 2368				; 00000940H
	mov	edx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR _pLaunch$[ebp], eax
; Line 87
	mov	DWORD PTR _pLaunch$[ebp+4], 0
; Line 88
	mov	DWORD PTR _pLaunch$[ebp+8], -1
; Line 89
	fld	DWORD PTR _qRotation$[ebp]
	fstp	DWORD PTR _pLaunch$[ebp+12]
; Line 90
	fld	DWORD PTR _qRotation$[ebp+4]
	fstp	DWORD PTR _pLaunch$[ebp+16]
; Line 91
	fld	DWORD PTR _qRotation$[ebp+8]
	fstp	DWORD PTR _pLaunch$[ebp+20]
; Line 92
	fld	DWORD PTR _qRotation$[ebp+12]
	fstp	DWORD PTR _pLaunch$[ebp+24]
; Line 93
	fld	DWORD PTR _vDestination$[ebp]
	fstp	DWORD PTR _pLaunch$[ebp+28]
; Line 94
	fld	DWORD PTR _vDestination$[ebp+4]
	fstp	DWORD PTR _pLaunch$[ebp+32]
; Line 95
	fld	DWORD PTR _vDestination$[ebp+8]
	fstp	DWORD PTR _pLaunch$[ebp+36]
; Line 97
	lea	ecx, DWORD PTR _pLaunch$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	eax, DWORD PTR __imp_?HookClient@@3PAUHkIClientImpl@@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __imp_?HookClient@@3PAUHkIClientImpl@@A
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+240]
	call	eax
; Line 100
	lea	ecx, DWORD PTR _iSystem$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 101
	lea	eax, DWORD PTR _mOrientation$[ebp]
	push	eax
	lea	ecx, DWORD PTR _vDestination$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iSystem$[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$[ebp]
	imul	eax, 2368				; 00000940H
	add	eax, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	push	eax
	call	DWORD PTR __imp_?Relocate@SpaceObj@pub@@YAHABI0ABVVector@@ABVMatrix@@@Z
	add	esp, 16					; 00000010H
; Line 102
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?HkRelocateClient@@YAXIVVector@@VMatrix@@@Z ENDP	; HkRelocateClient
_TEXT	ENDS
PUBLIC	?HkInstantDock@@YA?AW4HK_ERROR@@II@Z		; HkInstantDock
EXTRN	__imp_?InstantDock@SpaceObj@pub@@YAHABI0H@Z:PROC
EXTRN	__imp_?GetSystem@SpaceObj@pub@@YAHIAAI@Z:PROC
EXTRN	__imp_?GetShip@Player@pub@@YAHABIAAI@Z:PROC
xdata$x	SEGMENT
__catchsym$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z$0
__unwindtable$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z$2
__ehfuncinfo$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z
	DD	01H
	DD	FLAT:__tryblocktable$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T153990 = -32						; size = 4
_iShip$ = -28						; size = 4
_iSystem$ = -24						; size = 4
_iSystem2$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_iClientID$ = 8						; size = 4
_iDockObj$ = 12						; size = 4
?HkInstantDock@@YA?AW4HK_ERROR@@II@Z PROC		; HkInstantDock
; Line 106
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 108
	cmp	DWORD PTR _iClientID$[ebp], -1
	jne	SHORT $LN4@HkInstantD
; Line 109
	mov	eax, 1
	jmp	$LN5@HkInstantD
$LN4@HkInstantD:
; Line 112
	lea	eax, DWORD PTR _iShip$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetShip@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 113
	cmp	DWORD PTR _iShip$[ebp], 0
	jne	SHORT $LN3@HkInstantD
; Line 114
	mov	eax, 9
	jmp	SHORT $LN5@HkInstantD
$LN3@HkInstantD:
; Line 117
	lea	edx, DWORD PTR _iSystem$[ebp]
	push	edx
	mov	eax, DWORD PTR _iShip$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetSystem@SpaceObj@pub@@YAHIAAI@Z
	add	esp, 8
; Line 118
	lea	ecx, DWORD PTR _iSystem2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iDockObj$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetSystem@SpaceObj@pub@@YAHIAAI@Z
	add	esp, 8
; Line 119
	mov	eax, DWORD PTR _iSystem$[ebp]
	cmp	eax, DWORD PTR _iSystem2$[ebp]
	je	SHORT $LN2@HkInstantD
; Line 121
	mov	eax, 9
	jmp	SHORT $LN5@HkInstantD
$LN2@HkInstantD:
; Line 124
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 125
	push	1
	lea	ecx, DWORD PTR _iDockObj$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iShip$[ebp]
	push	edx
	call	DWORD PTR __imp_?InstantDock@SpaceObj@pub@@YAHABI0H@Z
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@HkInstantD
__catch$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z$0:
; Line 126
	mov	DWORD PTR $T153990[ebp], 9
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN10@HkInstantD
	ret	0
	mov	eax, $LN7@HkInstantD
	ret	0
$LN7@HkInstantD:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN9@HkInstantD
$LN10@HkInstantD:
	mov	eax, DWORD PTR $T153990[ebp]
	jmp	SHORT $LN5@HkInstantD
$LN9@HkInstantD:
; Line 128
	xor	eax, eax
$LN5@HkInstantD:
; Line 129
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkInstantDock@@YA?AW4HK_ERROR@@II@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkInstantDock@@YA?AW4HK_ERROR@@II@Z ENDP		; HkInstantDock
PUBLIC	__$ArrayPad$
PUBLIC	?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z ; HkGetRank
EXTRN	__imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC
EXTRN	__imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ:PROC
EXTRN	__imp_?HkFLIniGet@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0AAV23@@Z:PROC
EXTRN	__imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z:PROC
xdata$x	SEGMENT
__unwindtable$?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$1
__ehfuncinfo$?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154007 = -88						; size = 4
$T154006 = -84						; size = 4
$T154005 = -80						; size = 28
$T154004 = -49						; size = 1
_err$ = -48						; size = 4
_wscRet$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_wscCharname$ = 8					; size = 4
_iRank$ = 12						; size = 4
?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z PROC ; HkGetRank
; Line 132
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 134
	push	OFFSET $SG142668
	lea	ecx, DWORD PTR _wscRet$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 135
	push	OFFSET $SG142672
	lea	ecx, DWORD PTR $T154005[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR _wscRet$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154005[ebp]
	push	ecx
	mov	edx, DWORD PTR _wscCharname$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkFLIniGet@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0AAV23@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _err$[ebp], eax
	xor	eax, eax
	cmp	DWORD PTR _err$[ebp], 0
	setne	al
	mov	BYTE PTR $T154004[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T154005[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T154004[ebp]
	test	ecx, ecx
	je	SHORT $LN3@HkGetRank
; Line 136
	mov	edx, DWORD PTR _err$[ebp]
	mov	DWORD PTR $T154006[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscRet$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T154006[ebp]
	jmp	SHORT $LN4@HkGetRank
$LN3@HkGetRank:
; Line 137
	lea	ecx, DWORD PTR _wscRet$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	je	SHORT $LN2@HkGetRank
; Line 138
	lea	eax, DWORD PTR _wscRet$[ebp]
	push	eax
	call	DWORD PTR __imp_?ToInt@@YAHABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	ecx, DWORD PTR _iRank$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 139
	jmp	SHORT $LN1@HkGetRank
$LN2@HkGetRank:
; Line 140
	mov	edx, DWORD PTR _iRank$[ebp]
	mov	DWORD PTR [edx], 0
$LN1@HkGetRank:
; Line 141
	mov	DWORD PTR $T154007[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscRet$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T154007[ebp]
$LN4@HkGetRank:
; Line 142
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$0:
	lea	ecx, DWORD PTR _wscRet$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$1:
	lea	ecx, DWORD PTR $T154005[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkGetRank@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z ENDP ; HkGetRank
PUBLIC	__real@00000000
PUBLIC	__$ArrayPad$
PUBLIC	?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z ; HkGetOnLineTime
EXTRN	__imp__DeleteFileA@4:PROC
EXTRN	__imp_?IniGetF@@YAMABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00M@Z:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__imp_?flc_decode@@YA_NPBD0@Z:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	__imp_?HkIsEncoded@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z:PROC
EXTRN	__imp_?scAcctPath@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE
EXTRN	__imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z:PROC
EXTRN	__imp_?HkGetCharFileName@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV23@@Z:PROC
EXTRN	__imp_?HkGetAccountDirName@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV23@@Z:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
xdata$x	SEGMENT
__ehfuncinfo$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z DD 019930522H
	DD	012H
	DD	FLAT:__unwindtable$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$7
	DD	05H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$7
	DD	04H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$7
	DD	03H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$7
	DD	0cH
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$8
	DD	0dH
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$9
	DD	0eH
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$10
	DD	0cH
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$11
	DD	010H
	DD	FLAT:__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$12
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv202 = -432						; size = 4
tv218 = -428						; size = 4
tv200 = -424						; size = 4
tv217 = -420						; size = 4
tv198 = -416						; size = 4
tv216 = -412						; size = 4
tv196 = -408						; size = 4
tv65 = -404						; size = 4
tv194 = -400						; size = 4
tv72 = -396						; size = 4
$T154027 = -392						; size = 4
$T154026 = -388						; size = 28
$T154025 = -360						; size = 28
$T154024 = -332						; size = 28
$T154023 = -304						; size = 28
$T154022 = -276						; size = 4
$T154021 = -272						; size = 28
$T154020 = -244						; size = 28
$T154019 = -216						; size = 28
$T154018 = -188						; size = 28
$T154017 = -160						; size = 28
$T154016 = -132						; size = 4
_scCharFileNew$142695 = -128				; size = 28
_wscDir$ = -100						; size = 28
_scCharFile$ = -72					; size = 28
_wscFile$ = -44						; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_wscCharname$ = 8					; size = 4
_iSecs$ = 12						; size = 4
?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z PROC ; HkGetOnLineTime
; Line 146
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 420				; 000001a4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 147
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 148
	lea	eax, DWORD PTR _wscDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscCharname$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkGetAccountDirName@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV23@@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@HkGetOnLin
; Line 149
	mov	DWORD PTR $T154016[ebp], 2
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T154016[ebp]
	jmp	$LN5@HkGetOnLin
$LN4@HkGetOnLin:
; Line 151
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 152
	lea	edx, DWORD PTR _wscFile$[ebp]
	push	edx
	mov	eax, DWORD PTR _wscCharname$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetCharFileName@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV23@@Z
	add	esp, 8
; Line 154
	push	OFFSET $SG142692
	lea	ecx, DWORD PTR _wscFile$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154017[ebp]
	push	edx
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR tv194[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv194[ebp]
	push	ecx
	push	OFFSET $SG142693
	lea	edx, DWORD PTR _wscDir$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154018[ebp]
	push	eax
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv196[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv196[ebp]
	push	edx
	mov	eax, DWORD PTR __imp_?scAcctPath@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
	push	eax
	lea	ecx, DWORD PTR $T154019[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv216[ebp], eax
	mov	edx, DWORD PTR tv216[ebp]
	mov	DWORD PTR tv198[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv198[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154020[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv217[ebp], eax
	mov	edx, DWORD PTR tv217[ebp]
	mov	DWORD PTR tv200[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv200[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154021[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv218[ebp], eax
	mov	edx, DWORD PTR tv218[ebp]
	mov	DWORD PTR tv202[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv202[ebp]
	push	eax
	lea	ecx, DWORD PTR _scCharFile$[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T154021[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T154020[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T154019[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T154018[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T154017[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 155
	lea	edx, DWORD PTR _scCharFile$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkIsEncoded@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	$LN3@HkGetOnLin
; Line 157
	push	OFFSET $SG142697
	lea	ecx, DWORD PTR _scCharFile$[ebp]
	push	ecx
	lea	edx, DWORD PTR _scCharFileNew$142695[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
; Line 158
	lea	ecx, DWORD PTR _scCharFileNew$142695[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	ecx, DWORD PTR _scCharFile$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	call	DWORD PTR __imp_?flc_decode@@YA_NPBD0@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@HkGetOnLin
; Line 159
	mov	DWORD PTR $T154022[ebp], 4
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR _scCharFileNew$142695[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scCharFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T154022[ebp]
	jmp	$LN5@HkGetOnLin
$LN2@HkGetOnLin:
; Line 161
	push	OFFSET $SG142703
	lea	ecx, DWORD PTR $T154023[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	push	OFFSET $SG142704
	lea	ecx, DWORD PTR $T154024[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T154023[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154024[ebp]
	push	edx
	lea	eax, DWORD PTR _scCharFileNew$142695[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetF@@YAMABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00M@Z
	add	esp, 16					; 00000010H
	call	__ftol2_sse
	mov	ecx, DWORD PTR _iSecs$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T154024[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T154023[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 162
	lea	ecx, DWORD PTR _scCharFileNew$142695[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	call	DWORD PTR __imp__DeleteFileA@4
; Line 163
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR _scCharFileNew$142695[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 164
	jmp	SHORT $LN1@HkGetOnLin
$LN3@HkGetOnLin:
; Line 166
	push	OFFSET $SG142709
	lea	ecx, DWORD PTR $T154025[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	push	OFFSET $SG142710
	lea	ecx, DWORD PTR $T154026[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	edx, DWORD PTR $T154025[ebp]
	push	edx
	lea	eax, DWORD PTR $T154026[ebp]
	push	eax
	lea	ecx, DWORD PTR _scCharFile$[ebp]
	push	ecx
	call	DWORD PTR __imp_?IniGetF@@YAMABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00M@Z
	add	esp, 16					; 00000010H
	call	__ftol2_sse
	mov	edx, DWORD PTR _iSecs$[ebp]
	mov	DWORD PTR [edx], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T154026[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T154025[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@HkGetOnLin:
; Line 169
	mov	DWORD PTR $T154027[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scCharFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	eax, DWORD PTR $T154027[ebp]
$LN5@HkGetOnLin:
; Line 170
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$0:
	lea	ecx, DWORD PTR _wscDir$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$1:
	lea	ecx, DWORD PTR _wscFile$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$2:
	lea	ecx, DWORD PTR $T154017[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$3:
	lea	ecx, DWORD PTR $T154018[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$4:
	lea	ecx, DWORD PTR $T154019[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$5:
	lea	ecx, DWORD PTR $T154020[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$6:
	lea	ecx, DWORD PTR $T154021[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$7:
	lea	ecx, DWORD PTR _scCharFile$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$8:
	lea	ecx, DWORD PTR _scCharFileNew$142695[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$9:
	lea	ecx, DWORD PTR $T154023[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$10:
	lea	ecx, DWORD PTR $T154024[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$11:
	lea	ecx, DWORD PTR $T154025[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z$12:
	lea	ecx, DWORD PTR $T154026[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-424]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkGetOnLineTime@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAH@Z ENDP ; HkGetOnLineTime
PUBLIC	?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z ; GetParamToEnd
EXTRN	__imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z:PROC
EXTRN	__imp_?npos@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@2IB:DWORD
EXTRN	__imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEABGI@Z:PROC
xdata$x	SEGMENT
__unwindtable$?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z$0
__ehfuncinfo$?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154050 = -24						; size = 4
_j$142719 = -20						; size = 4
_i$142718 = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_wscLine$ = 12						; size = 4
_wcSplitChar$ = 16					; size = 2
_iPos$ = 20						; size = 4
?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z PROC ; GetParamToEnd
; Line 181
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154050[ebp], 0
; Line 182
	mov	DWORD PTR _i$142718[ebp], 0
	mov	DWORD PTR _j$142719[ebp], 0
	jmp	SHORT $LN7@GetParamTo
$LN6@GetParamTo:
	mov	eax, DWORD PTR _j$142719[ebp]
	add	eax, 1
	mov	DWORD PTR _j$142719[ebp], eax
$LN7@GetParamTo:
	mov	ecx, DWORD PTR _i$142718[ebp]
	cmp	ecx, DWORD PTR _iPos$[ebp]
	ja	$LN5@GetParamTo
	mov	ecx, DWORD PTR _wscLine$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	cmp	DWORD PTR _j$142719[ebp], eax
	jae	$LN5@GetParamTo
; Line 184
	mov	edx, DWORD PTR _j$142719[ebp]
	push	edx
	mov	ecx, DWORD PTR _wscLine$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEABGI@Z
	movzx	eax, WORD PTR [eax]
	movzx	ecx, WORD PTR _wcSplitChar$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN4@GetParamTo
$LN3@GetParamTo:
; Line 186
	mov	esi, DWORD PTR _j$142719[ebp]
	add	esi, 1
	mov	ecx, DWORD PTR _wscLine$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	cmp	esi, eax
	jae	SHORT $LN2@GetParamTo
	mov	edx, DWORD PTR _j$142719[ebp]
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _wscLine$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEABGI@Z
	movzx	eax, WORD PTR [eax]
	movzx	ecx, WORD PTR _wcSplitChar$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN2@GetParamTo
; Line 187
	mov	edx, DWORD PTR _j$142719[ebp]
	add	edx, 1
	mov	DWORD PTR _j$142719[ebp], edx
	jmp	SHORT $LN3@GetParamTo
$LN2@GetParamTo:
; Line 188
	mov	eax, DWORD PTR _i$142718[ebp]
	add	eax, 1
	mov	DWORD PTR _i$142718[ebp], eax
; Line 189
	jmp	$LN6@GetParamTo
$LN4@GetParamTo:
; Line 191
	mov	ecx, DWORD PTR _i$142718[ebp]
	cmp	ecx, DWORD PTR _iPos$[ebp]
	jne	SHORT $LN1@GetParamTo
; Line 193
	mov	edx, DWORD PTR __imp_?npos@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@2IB
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _j$142719[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _wscLine$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T154050[ebp]
	or	eax, 1
	mov	DWORD PTR $T154050[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN8@GetParamTo
$LN1@GetParamTo:
; Line 195
	jmp	$LN6@GetParamTo
$LN5@GetParamTo:
; Line 196
	push	OFFSET $SG142729
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T154050[ebp]
	or	ecx, 1
	mov	DWORD PTR $T154050[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN8@GetParamTo:
; Line 197
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z$0:
	mov	eax, DWORD PTR $T154050[ebp]
	and	eax, 1
	je	$LN11@GetParamTo
	and	DWORD PTR $T154050[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN11@GetParamTo:
	ret	0
__ehhandler$?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetParamToEnd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@GI@Z ENDP ; GetParamToEnd
PUBLIC	__$ArrayPad$
PUBLIC	?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z ; GetParam
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z:PROC
EXTRN	__imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z:PROC
EXTRN	__imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
xdata$x	SEGMENT
__unwindtable$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z$1
__ehfuncinfo$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154061 = -56						; size = 4
_j$ = -52						; size = 4
_scResult$ = -48					; size = 28
_i$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_scLine$ = 12						; size = 28
_cSplitChar$ = 40					; size = 1
_iPos$ = 44						; size = 4
?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z PROC ; GetParam
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154061[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 202
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
; Line 204
	push	OFFSET $SG142739
	lea	ecx, DWORD PTR _scResult$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 205
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN7@GetParam
$LN6@GetParam:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN7@GetParam:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _iPos$[ebp]
	ja	$LN5@GetParam
	lea	ecx, DWORD PTR _scLine$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	cmp	DWORD PTR _j$[ebp], eax
	jae	$LN5@GetParam
; Line 207
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	lea	ecx, DWORD PTR _scLine$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movsx	eax, BYTE PTR [eax]
	movsx	ecx, BYTE PTR _cSplitChar$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN4@GetParam
$LN3@GetParam:
; Line 209
	mov	esi, DWORD PTR _j$[ebp]
	add	esi, 1
	lea	ecx, DWORD PTR _scLine$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	cmp	esi, eax
	jae	SHORT $LN2@GetParam
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	push	edx
	lea	ecx, DWORD PTR _scLine$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movsx	eax, BYTE PTR [eax]
	movsx	ecx, BYTE PTR _cSplitChar$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN2@GetParam
; Line 210
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
	jmp	SHORT $LN3@GetParam
$LN2@GetParam:
; Line 212
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 213
	jmp	$LN6@GetParam
$LN4@GetParam:
; Line 216
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _iPos$[ebp]
	jne	SHORT $LN1@GetParam
; Line 217
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	lea	ecx, DWORD PTR _scLine$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movzx	eax, BYTE PTR [eax]
	push	eax
	lea	ecx, DWORD PTR _scResult$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z
$LN1@GetParam:
; Line 218
	jmp	$LN6@GetParam
$LN5@GetParam:
; Line 220
	lea	ecx, DWORD PTR _scResult$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T154061[ebp]
	or	edx, 1
	mov	DWORD PTR $T154061[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _scResult$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _scLine$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 221
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z$0:
	lea	ecx, DWORD PTR _scLine$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z$1:
	lea	ecx, DWORD PTR _scResult$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z$2:
	mov	eax, DWORD PTR $T154061[ebp]
	and	eax, 1
	je	$LN13@GetParam
	and	DWORD PTR $T154061[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN13@GetParam:
	ret	0
__ehhandler$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetParam@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@DI@Z ENDP ; GetParam
PUBLIC	__$ArrayPad$
PUBLIC	?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z ; GetUserFilePath
EXTRN	__imp_?GetUserDataPath@@YA_NQAD@Z:PROC
xdata$x	SEGMENT
__ehfuncinfo$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$1
	DD	03H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$2
	DD	04H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$3
	DD	05H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$6
	DD	07H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$7
	DD	08H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$8
	DD	09H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$9
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv187 = -588						; size = 4
tv193 = -584						; size = 4
tv185 = -580						; size = 4
tv64 = -576						; size = 4
tv183 = -572						; size = 4
tv76 = -568						; size = 4
tv181 = -564						; size = 4
tv79 = -560						; size = 4
tv179 = -556						; size = 4
tv94 = -552						; size = 4
tv163 = -548						; size = 4
tv192 = -544						; size = 4
$T154080 = -540						; size = 4
$T154074 = -536						; size = 28
$T154073 = -508						; size = 28
$T154072 = -480						; size = 28
$T154071 = -452						; size = 28
$T154070 = -424						; size = 28
$T154069 = -396						; size = 28
_wscDir$ = -368						; size = 28
_szDataPath$ = -340					; size = 260
_wscFile$ = -72						; size = 28
_scAcctPath$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_wscCharname$ = 12					; size = 4
_scExtension$ = 16					; size = 4
?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z PROC ; GetUserFilePath
; Line 229
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 576				; 00000240H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154080[ebp], 0
; Line 232
	lea	eax, DWORD PTR _szDataPath$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetUserDataPath@@YA_NQAD@Z
	add	esp, 4
; Line 233
	push	OFFSET $SG142757
	lea	ecx, DWORD PTR _szDataPath$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T154069[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv192[ebp], eax
	mov	edx, DWORD PTR tv192[ebp]
	mov	DWORD PTR tv163[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv163[ebp]
	push	eax
	lea	ecx, DWORD PTR _scAcctPath$[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T154069[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 235
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 236
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 237
	lea	edx, DWORD PTR _wscDir$[ebp]
	push	edx
	mov	eax, DWORD PTR _wscCharname$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetAccountDirName@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV23@@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@GetUserFil
; Line 238
	push	OFFSET $SG142761
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T154080[ebp]
	or	ecx, 1
	mov	DWORD PTR $T154080[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _scAcctPath$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN3@GetUserFil
$LN2@GetUserFil:
; Line 239
	lea	edx, DWORD PTR _wscFile$[ebp]
	push	edx
	mov	eax, DWORD PTR _wscCharname$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetCharFileName@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV23@@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@GetUserFil
; Line 240
	push	OFFSET $SG142763
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	ecx, DWORD PTR $T154080[ebp]
	or	ecx, 1
	mov	DWORD PTR $T154080[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _scAcctPath$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN3@GetUserFil
$LN1@GetUserFil:
; Line 242
	mov	edx, DWORD PTR _scExtension$[ebp]
	push	edx
	lea	eax, DWORD PTR _wscFile$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154070[ebp]
	push	ecx
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv94[ebp], eax
	mov	edx, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv179[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR tv179[ebp]
	push	eax
	push	OFFSET $SG142770
	lea	ecx, DWORD PTR _wscDir$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154071[ebp]
	push	edx
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv79[ebp], eax
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv181[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv181[ebp]
	push	ecx
	lea	edx, DWORD PTR _scAcctPath$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154072[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR tv183[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv183[ebp]
	push	edx
	lea	eax, DWORD PTR $T154073[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	mov	DWORD PTR tv185[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	edx, DWORD PTR tv185[ebp]
	push	edx
	lea	eax, DWORD PTR $T154074[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv193[ebp], eax
	mov	ecx, DWORD PTR tv193[ebp]
	mov	DWORD PTR tv187[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR tv187[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR $T154080[ebp]
	or	ecx, 1
	mov	DWORD PTR $T154080[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T154074[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T154073[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T154072[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154071[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T154070[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _scAcctPath$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@GetUserFil:
; Line 243
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$0:
	lea	ecx, DWORD PTR $T154069[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$1:
	lea	ecx, DWORD PTR _scAcctPath$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$2:
	lea	ecx, DWORD PTR _wscDir$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$3:
	lea	ecx, DWORD PTR _wscFile$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$4:
	mov	eax, DWORD PTR $T154080[ebp]
	and	eax, 1
	je	$LN10@GetUserFil
	and	DWORD PTR $T154080[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN10@GetUserFil:
	ret	0
__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$5:
	lea	ecx, DWORD PTR $T154070[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$6:
	lea	ecx, DWORD PTR $T154071[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$7:
	lea	ecx, DWORD PTR $T154072[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$8:
	lea	ecx, DWORD PTR $T154073[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$9:
	lea	ecx, DWORD PTR $T154074[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-580]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetUserFilePath@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z ENDP ; GetUserFilePath
PUBLIC	__$ArrayPad$
PUBLIC	?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z ; HkFMsgEncodeMsg
EXTRN	__imp_?write_buffer@BinaryRDLWriter@@UAE_NABVRenderDisplayList@@PADIAAI@Z:PROC
EXTRN	__imp_??0BinaryRDLWriter@@QAE@XZ:PROC
EXTRN	__imp_??1RenderDisplayList@@QAE@XZ:PROC
EXTRN	__imp_?read_buffer@XMLReader@@UAE_NAAVRenderDisplayList@@PBDI@Z:PROC
EXTRN	__imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ:PROC
EXTRN	__imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z:PROC
EXTRN	__imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z:PROC
EXTRN	__imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z:PROC
EXTRN	__imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z:PROC
EXTRN	__imp_??0RenderDisplayList@@QAE@XZ:PROC
EXTRN	__imp_??0XMLReader@@QAE@XZ:PROC
EXTRN	__chkstk:PROC
xdata$x	SEGMENT
__ehfuncinfo$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z$4
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv150 = -5304						; size = 4
tv155 = -5300						; size = 4
tv148 = -5296						; size = 4
tv66 = -5292						; size = 4
tv146 = -5288						; size = 4
tv69 = -5284						; size = 4
$T154097 = -5280					; size = 4
$T154096 = -5276					; size = 4
$T154095 = -5272					; size = 28
$T154094 = -5244					; size = 28
$T154093 = -5216					; size = 28
_rdr$ = -5188						; size = 2052
_wscMsg$ = -3128					; size = 28
_rdlwrite$ = -3100					; size = 1028
_rdl$ = -2068						; size = 2048
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_wscMessage$ = 8					; size = 4
_szBuf$ = 12						; size = 4
_iSize$ = 16						; size = 4
_iRet$ = 20						; size = 4
?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z PROC ; HkFMsgEncodeMsg
; Line 247
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 5292				; 000014acH
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 248
	lea	ecx, DWORD PTR _rdr$[ebp]
	call	DWORD PTR __imp_??0XMLReader@@QAE@XZ
; Line 249
	lea	ecx, DWORD PTR _rdl$[ebp]
	call	DWORD PTR __imp_??0RenderDisplayList@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 250
	push	OFFSET $SG142780
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 251
	push	OFFSET $SG142784
	mov	eax, DWORD PTR _wscMessage$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154093[ebp]
	push	ecx
	call	DWORD PTR __imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv69[ebp], eax
	mov	edx, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv146[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv146[ebp]
	push	eax
	push	OFFSET $SG142785
	lea	ecx, DWORD PTR $T154094[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv66[ebp], eax
	mov	edx, DWORD PTR tv66[ebp]
	mov	DWORD PTR tv148[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv148[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154095[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv155[ebp], eax
	mov	edx, DWORD PTR tv155[ebp]
	mov	DWORD PTR tv150[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv150[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T154095[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T154094[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T154093[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 252
	push	OFFSET $SG142786
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z
; Line 253
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	shl	eax, 1
	push	eax
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	lea	ecx, DWORD PTR _rdl$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _rdr$[ebp]
	call	DWORD PTR __imp_?read_buffer@XMLReader@@UAE_NAAVRenderDisplayList@@PBDI@Z
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@HkFMsgEnco
; Line 254
	mov	DWORD PTR $T154096[ebp], 11		; 0000000bH
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _rdl$[ebp]
	call	DWORD PTR __imp_??1RenderDisplayList@@QAE@XZ
	mov	eax, DWORD PTR $T154096[ebp]
	jmp	SHORT $LN2@HkFMsgEnco
$LN1@HkFMsgEnco:
; Line 256
	lea	ecx, DWORD PTR _rdlwrite$[ebp]
	call	DWORD PTR __imp_??0BinaryRDLWriter@@QAE@XZ
; Line 257
	mov	eax, DWORD PTR _iRet$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _szBuf$[ebp]
	push	edx
	lea	eax, DWORD PTR _rdl$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rdlwrite$[ebp]
	call	DWORD PTR __imp_?write_buffer@BinaryRDLWriter@@UAE_NABVRenderDisplayList@@PADIAAI@Z
; Line 259
	mov	DWORD PTR $T154097[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _rdl$[ebp]
	call	DWORD PTR __imp_??1RenderDisplayList@@QAE@XZ
	mov	eax, DWORD PTR $T154097[ebp]
$LN2@HkFMsgEnco:
; Line 260
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z$0:
	lea	ecx, DWORD PTR _rdl$[ebp]
	jmp	DWORD PTR __imp_??1RenderDisplayList@@QAE@XZ
__unwindfunclet$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z$1:
	lea	ecx, DWORD PTR _wscMsg$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z$2:
	lea	ecx, DWORD PTR $T154093[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z$3:
	lea	ecx, DWORD PTR $T154094[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z$4:
	lea	ecx, DWORD PTR $T154095[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-5296]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkFMsgEncodeMsg@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PADIAAI@Z ENDP ; HkFMsgEncodeMsg
PUBLIC	?ToInt@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; ToInt
EXTRN	__imp__atoi:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_scStr$ = 8						; size = 4
?ToInt@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; ToInt
; Line 263
	push	ebp
	mov	ebp, esp
; Line 264
	mov	ecx, DWORD PTR _scStr$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
; Line 265
	pop	ebp
	ret	0
?ToInt@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; ToInt
_TEXT	ENDS
PUBLIC	?ToUInt@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; ToUInt
EXTRN	__imp__wcstoul:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wscStr$ = 8						; size = 4
?ToUInt@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; ToUInt
; Line 268
	push	ebp
	mov	ebp, esp
; Line 269
	push	10					; 0000000aH
	push	0
	mov	ecx, DWORD PTR _wscStr$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	call	DWORD PTR __imp__wcstoul
	add	esp, 12					; 0000000cH
; Line 270
	pop	ebp
	ret	0
?ToUInt@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; ToUInt
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; itohexs
EXTRN	__imp__sprintf:PROC
xdata$x	SEGMENT
__unwindtable$?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$0
__ehfuncinfo$?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154113 = -36						; size = 4
_buf$ = -32						; size = 16
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_value$ = 12						; size = 4
?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; itohexs
; Line 273
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154113[ebp], 0
; Line 275
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	push	OFFSET $SG142804
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
; Line 276
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T154113[ebp]
	or	eax, 1
	mov	DWORD PTR $T154113[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 277
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z$0:
	mov	eax, DWORD PTR $T154113[ebp]
	and	eax, 1
	je	$LN4@itohexs
	and	DWORD PTR $T154113[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN4@itohexs:
	ret	0
__ehhandler$?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?itohexs@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; itohexs
PUBLIC	?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z ; PrintLocalUserCmdText
EXTRN	__imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ:PROC
EXTRN	__imp_?HkGetClientIdFromPD@@YAIPAUPlayerData@@@Z:PROC
EXTRN	__imp_?traverse_active@PlayerDB@@QBEPAUPlayerData@@PAU2@@Z:PROC
EXTRN	__imp_?Players@@3VPlayerDB@@A:BYTE
EXTRN	__imp_?GetLocation@SpaceObj@pub@@YAHIAAVVector@@AAVMatrix@@@Z:PROC
xdata$x	SEGMENT
__unwindtable$?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z$0
__ehfuncinfo$?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv143 = -144						; size = 4
tv144 = -140						; size = 4
$T154120 = -136						; size = 4
_rot2$142823 = -132					; size = 36
_iClientID2$142818 = -96				; size = 4
_iShip2$142821 = -92					; size = 4
_iSystem2$142819 = -88					; size = 4
_pos2$142822 = -84					; size = 12
_pos$ = -72						; size = 12
_pPD$ = -60						; size = 4
_rot$ = -56						; size = 36
_iShip$ = -20						; size = 4
_iSystem$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscMsg$ = 12						; size = 4
_fDistance$ = 16					; size = 4
?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z PROC ; PrintLocalUserCmdText
; Line 281
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 132				; 00000084H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 283
	lea	eax, DWORD PTR _iShip$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetShip@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 287
	lea	edx, DWORD PTR _rot$[ebp]
	push	edx
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iShip$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetLocation@SpaceObj@pub@@YAHIAAVVector@@AAVMatrix@@@Z
	add	esp, 12					; 0000000cH
; Line 290
	lea	edx, DWORD PTR _iSystem$[ebp]
	push	edx
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 293
	mov	DWORD PTR _pPD$[ebp], 0
$LN9@PrintLocal:
; Line 294
	mov	ecx, DWORD PTR _pPD$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?traverse_active@PlayerDB@@QBEPAUPlayerData@@PAU2@@Z
	mov	DWORD PTR _pPD$[ebp], eax
	cmp	DWORD PTR _pPD$[ebp], 0
	je	$LN3@PrintLocal
; Line 297
	mov	edx, DWORD PTR _pPD$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkGetClientIdFromPD@@YAIPAUPlayerData@@@Z
	add	esp, 4
	mov	DWORD PTR _iClientID2$142818[ebp], eax
; Line 298
	mov	DWORD PTR _iSystem2$142819[ebp], 0
; Line 299
	lea	eax, DWORD PTR _iSystem2$142819[ebp]
	push	eax
	lea	ecx, DWORD PTR _iClientID2$142818[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 300
	mov	edx, DWORD PTR _iSystem$[ebp]
	cmp	edx, DWORD PTR _iSystem2$142819[ebp]
	je	SHORT $LN2@PrintLocal
; Line 301
	jmp	SHORT $LN9@PrintLocal
$LN2@PrintLocal:
; Line 304
	lea	eax, DWORD PTR _iShip2$142821[ebp]
	push	eax
	lea	ecx, DWORD PTR _iClientID2$142818[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetShip@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 308
	lea	edx, DWORD PTR _rot2$142823[ebp]
	push	edx
	lea	eax, DWORD PTR _pos2$142822[ebp]
	push	eax
	mov	ecx, DWORD PTR _iShip2$142821[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetLocation@SpaceObj@pub@@YAHIAAVVector@@AAVMatrix@@@Z
; Line 311
	mov	edx, esp
	mov	eax, DWORD PTR _pos2$142822[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _pos2$142822[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _pos2$142822[ebp+8]
	mov	DWORD PTR [edx+8], eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _pos$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _pos$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	call	?HkDistance3D@@YAMVVector@@0@Z		; HkDistance3D
	add	esp, 24					; 00000018H
	fld	DWORD PTR _fDistance$[ebp]
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN1@PrintLocal
; Line 312
	jmp	$LN9@PrintLocal
$LN1@PrintLocal:
; Line 314
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T154120[ebp], esp
	push	OFFSET $SG142826
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv143[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _iClientID2$142818[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 36					; 00000024H
; Line 315
	jmp	$LN9@PrintLocal
$LN3@PrintLocal:
; Line 316
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z$0:
	mov	ecx, DWORD PTR $T154120[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-136]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z ENDP ; PrintLocalUserCmdText
PUBLIC	??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
PUBLIC	??C?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEPAUGROUP_MEMBER@@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator->
PUBLIC	??9?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator!=
PUBLIC	?end@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::end
PUBLIC	??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV012@H@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator++
PUBLIC	?begin@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::begin
PUBLIC	??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
PUBLIC	?IsInRange@@YA_NIM@Z				; IsInRange
EXTRN	__imp_?HkGetGroupMembers@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@3@@Z:PROC
EXTRN	__imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z:PROC
xdata$x	SEGMENT
__unwindtable$?IsInRange@@YA_NIM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsInRange@@YA_NIM@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?IsInRange@@YA_NIM@Z$1
__ehfuncinfo$?IsInRange@@YA_NIM@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?IsInRange@@YA_NIM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154133 = -218						; size = 1
$T154132 = -217						; size = 1
$T154131 = -216						; size = 8
$T154130 = -208						; size = 8
$T154129 = -200						; size = 28
_gm$143507 = -172					; size = 8
_rot2$143366 = -164					; size = 36
_bGrouped$143367 = -125					; size = 1
_iClientID2$143361 = -124				; size = 4
_iShip2$143364 = -120					; size = 4
_iSystem2$143362 = -116					; size = 4
_pos2$143365 = -112					; size = 12
_pos$ = -100						; size = 12
_lstMembers$ = -88					; size = 28
_pPD$ = -60						; size = 4
_rot$ = -56						; size = 36
_iShip$ = -20						; size = 4
_iSystem$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_fDistance$ = 12					; size = 4
?IsInRange@@YA_NIM@Z PROC				; IsInRange
; Line 321
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?IsInRange@@YA_NIM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 322
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	call	??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 323
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T154129[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154129[ebp]
	push	edx
	call	DWORD PTR __imp_?HkGetGroupMembers@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@3@@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T154129[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 326
	lea	eax, DWORD PTR _iShip$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetShip@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 330
	lea	edx, DWORD PTR _rot$[ebp]
	push	edx
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iShip$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetLocation@SpaceObj@pub@@YAHIAAVVector@@AAVMatrix@@@Z
	add	esp, 12					; 0000000cH
; Line 333
	lea	edx, DWORD PTR _iSystem$[ebp]
	push	edx
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 336
	mov	DWORD PTR _pPD$[ebp], 0
$LN15@IsInRange:
; Line 337
	mov	ecx, DWORD PTR _pPD$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?traverse_active@PlayerDB@@QBEPAUPlayerData@@PAU2@@Z
	mov	DWORD PTR _pPD$[ebp], eax
	cmp	DWORD PTR _pPD$[ebp], 0
	je	$LN8@IsInRange
; Line 340
	mov	edx, DWORD PTR _pPD$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkGetClientIdFromPD@@YAIPAUPlayerData@@@Z
	add	esp, 4
	mov	DWORD PTR _iClientID2$143361[ebp], eax
; Line 341
	mov	DWORD PTR _iSystem2$143362[ebp], 0
; Line 342
	lea	eax, DWORD PTR _iSystem2$143362[ebp]
	push	eax
	lea	ecx, DWORD PTR _iClientID2$143361[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 343
	mov	edx, DWORD PTR _iSystem$[ebp]
	cmp	edx, DWORD PTR _iSystem2$143362[ebp]
	je	SHORT $LN7@IsInRange
; Line 344
	jmp	SHORT $LN15@IsInRange
$LN7@IsInRange:
; Line 347
	lea	eax, DWORD PTR _iShip2$143364[ebp]
	push	eax
	lea	ecx, DWORD PTR _iClientID2$143361[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetShip@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 351
	lea	edx, DWORD PTR _rot2$143366[ebp]
	push	edx
	lea	eax, DWORD PTR _pos2$143365[ebp]
	push	eax
	mov	ecx, DWORD PTR _iShip2$143364[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetLocation@SpaceObj@pub@@YAHIAAVVector@@AAVMatrix@@@Z
	add	esp, 12					; 0000000cH
; Line 354
	mov	BYTE PTR _bGrouped$143367[ebp], 0
; Line 355
	lea	edx, DWORD PTR _gm$143507[ebp]
	push	edx
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	call	?begin@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::begin
	jmp	SHORT $LN6@IsInRange
$LN5@IsInRange:
	push	0
	lea	eax, DWORD PTR $T154130[ebp]
	push	eax
	lea	ecx, DWORD PTR _gm$143507[ebp]
	call	??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV012@H@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator++
$LN6@IsInRange:
	lea	ecx, DWORD PTR $T154131[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	call	?end@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::end
	push	eax
	lea	ecx, DWORD PTR _gm$143507[ebp]
	call	??9?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN4@IsInRange
; Line 357
	lea	ecx, DWORD PTR _gm$143507[ebp]
	call	??C?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEPAUGROUP_MEMBER@@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator->
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR _iClientID2$143361[ebp]
	jne	SHORT $LN3@IsInRange
; Line 359
	mov	BYTE PTR _bGrouped$143367[ebp], 1
; Line 360
	jmp	SHORT $LN4@IsInRange
$LN3@IsInRange:
; Line 362
	jmp	SHORT $LN5@IsInRange
$LN4@IsInRange:
; Line 363
	movzx	ecx, BYTE PTR _bGrouped$143367[ebp]
	test	ecx, ecx
	je	SHORT $LN2@IsInRange
; Line 364
	jmp	$LN15@IsInRange
$LN2@IsInRange:
; Line 367
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR _pos2$143365[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _pos2$143365[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _pos2$143365[ebp+8]
	mov	DWORD PTR [edx+8], eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _pos$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _pos$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	call	?HkDistance3D@@YAMVVector@@0@Z		; HkDistance3D
	add	esp, 24					; 00000018H
	fld	DWORD PTR _fDistance$[ebp]
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN1@IsInRange
; Line 368
	mov	BYTE PTR $T154132[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	call	??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
	mov	al, BYTE PTR $T154132[ebp]
	jmp	SHORT $LN10@IsInRange
$LN1@IsInRange:
; Line 369
	jmp	$LN15@IsInRange
$LN8@IsInRange:
; Line 370
	mov	BYTE PTR $T154133[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	call	??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
	mov	al, BYTE PTR $T154133[ebp]
$LN10@IsInRange:
; Line 371
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?IsInRange@@YA_NIM@Z$0:
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	jmp	??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
__unwindfunclet$?IsInRange@@YA_NIM@Z$1:
	lea	ecx, DWORD PTR $T154129[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?IsInRange@@YA_NIM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?IsInRange@@YA_NIM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?IsInRange@@YA_NIM@Z ENDP				; IsInRange
PUBLIC	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
EXTRN	__imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z:PROC
xdata$x	SEGMENT
__unwindtable$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z$2
__ehfuncinfo$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv184 = -92						; size = 4
tv191 = -88						; size = 4
tv182 = -84						; size = 4
tv190 = -80						; size = 4
$T154150 = -76						; size = 4
$T154145 = -72						; size = 28
$T154144 = -44						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_wscIn$ = 12						; size = 28
?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z PROC ; Trim
; Line 377
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154150[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
$LN6@Trim:
; Line 378
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	je	$LN3@Trim
	push	0
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z
	movzx	eax, WORD PTR [eax]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN4@Trim
	push	0
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 9
	je	SHORT $LN4@Trim
	push	0
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z
	movzx	edx, WORD PTR [eax]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN4@Trim
	push	0
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z
	movzx	eax, WORD PTR [eax]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN3@Trim
$LN4@Trim:
; Line 380
	mov	ecx, DWORD PTR __imp_?npos@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@2IB
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	1
	lea	eax, DWORD PTR $T154144[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv190[ebp], eax
	mov	ecx, DWORD PTR tv190[ebp]
	mov	DWORD PTR tv182[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv182[ebp]
	push	edx
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T154144[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 381
	jmp	$LN6@Trim
$LN3@Trim:
; Line 382
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	test	eax, eax
	je	$LN2@Trim
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z
	movzx	eax, WORD PTR [eax]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN1@Trim
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 9
	je	SHORT $LN1@Trim
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z
	movzx	edx, WORD PTR [eax]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN1@Trim
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z
	movzx	eax, WORD PTR [eax]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN2@Trim
$LN1@Trim:
; Line 384
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	sub	eax, 1
	push	eax
	push	0
	lea	ecx, DWORD PTR $T154145[ebp]
	push	ecx
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv191[ebp], eax
	mov	edx, DWORD PTR tv191[ebp]
	mov	DWORD PTR tv184[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv184[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T154145[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 385
	jmp	$LN3@Trim
$LN2@Trim:
; Line 386
	lea	ecx, DWORD PTR _wscIn$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T154150[ebp]
	or	edx, 1
	mov	DWORD PTR $T154150[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscIn$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 387
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z$0:
	lea	ecx, DWORD PTR _wscIn$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z$1:
	lea	ecx, DWORD PTR $T154144[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z$2:
	lea	ecx, DWORD PTR $T154145[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z$3:
	mov	eax, DWORD PTR $T154150[ebp]
	and	eax, 1
	je	$LN13@Trim
	and	DWORD PTR $T154150[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN13@Trim:
	ret	0
__ehhandler$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ENDP ; Trim
PUBLIC	?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z ; Trim
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z:PROC
EXTRN	__imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB:DWORD
xdata$x	SEGMENT
__unwindtable$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$2
__ehfuncinfo$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv184 = -92						; size = 4
tv191 = -88						; size = 4
tv182 = -84						; size = 4
tv190 = -80						; size = 4
$T154164 = -76						; size = 4
$T154159 = -72						; size = 28
$T154158 = -44						; size = 28
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_scIn$ = 12						; size = 28
?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z PROC ; Trim
; Line 393
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154164[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
$LN6@Trim@2:
; Line 394
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	test	eax, eax
	je	$LN3@Trim@2
	push	0
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN4@Trim@2
	push	0
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 9
	je	SHORT $LN4@Trim@2
	push	0
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN4@Trim@2
	push	0
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN3@Trim@2
$LN4@Trim@2:
; Line 396
	mov	ecx, DWORD PTR __imp_?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	1
	lea	eax, DWORD PTR $T154158[ebp]
	push	eax
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv190[ebp], eax
	mov	ecx, DWORD PTR tv190[ebp]
	mov	DWORD PTR tv182[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv182[ebp]
	push	edx
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T154158[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 397
	jmp	$LN6@Trim@2
$LN3@Trim@2:
; Line 398
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	test	eax, eax
	je	$LN2@Trim@2
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN1@Trim@2
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 9
	je	SHORT $LN1@Trim@2
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN1@Trim@2
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN2@Trim@2
$LN1@Trim@2:
; Line 400
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	sub	eax, 1
	push	eax
	push	0
	lea	ecx, DWORD PTR $T154159[ebp]
	push	ecx
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv191[ebp], eax
	mov	edx, DWORD PTR tv191[ebp]
	mov	DWORD PTR tv184[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv184[ebp]
	push	eax
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T154159[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 401
	jmp	$LN3@Trim@2
$LN2@Trim@2:
; Line 402
	lea	ecx, DWORD PTR _scIn$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T154164[ebp]
	or	edx, 1
	mov	DWORD PTR $T154164[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _scIn$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 403
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$0:
	lea	ecx, DWORD PTR _scIn$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$1:
	lea	ecx, DWORD PTR $T154158[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$2:
	lea	ecx, DWORD PTR $T154159[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z$3:
	mov	eax, DWORD PTR $T154164[ebp]
	and	eax, 1
	je	$LN13@Trim@2
	and	DWORD PTR $T154164[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN13@Trim@2:
	ret	0
__ehhandler$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Trim@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z ENDP ; Trim
PUBLIC	?HkDeleteCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; HkDeleteCharacter
EXTRN	__imp_?HkUnlockAccountAccess@@YAXPAVCAccount@@@Z:PROC
EXTRN	__imp_?FreeWString@@3P6AXPAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@@ZA:DWORD
EXTRN	__imp_?DeleteCharacterFromName@PlayerDB@@QAE_NAAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@@Z:PROC
EXTRN	__imp_?CreateWString@@3P6APAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@PBG@ZA:DWORD
EXTRN	__imp_?HkLockAccountAccess@@YAXPAVCAccount@@_N@Z:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_str$ = -4						; size = 4
_acc$ = 8						; size = 4
_wscCharname$ = 12					; size = 4
?HkDeleteCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; HkDeleteCharacter
; Line 409
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 410
	push	1
	mov	eax, DWORD PTR _acc$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkLockAccountAccess@@YAXPAVCAccount@@_N@Z
	add	esp, 8
; Line 411
	mov	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	mov	ecx, DWORD PTR __imp_?CreateWString@@3P6APAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@PBG@ZA
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 4
	mov	DWORD PTR _str$[ebp], eax
; Line 412
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?DeleteCharacterFromName@PlayerDB@@QAE_NAAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@@Z
; Line 413
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR __imp_?FreeWString@@3P6AXPAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@@ZA
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 4
; Line 414
	mov	ecx, DWORD PTR _acc$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkUnlockAccountAccess@@YAXPAVCAccount@@@Z
	add	esp, 4
; Line 415
	xor	eax, eax
; Line 416
	mov	esp, ebp
	pop	ebp
	ret	0
?HkDeleteCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; HkDeleteCharacter
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; HkNewCharacter
EXTRN	__imp_?logout@PlayerDB@@QAEXI@Z:PROC
EXTRN	__imp_?HkSaveChar@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC
EXTRN	__imp_?CreateNewCharacter@IServerImpl@@UAEXABUSCreateCharacterInfo@@I@Z:PROC
EXTRN	__imp__Server:BYTE
EXTRN	__imp_?close@INI_Reader@@QAEXXZ:PROC
EXTRN	__imp_?CreateID@@YAIPBD@Z:PROC
EXTRN	__imp_?get_value_string@INI_Reader@@QAEPBDXZ:PROC
EXTRN	__imp_?is_value@INI_Reader@@QAE_NPBD@Z:PROC
EXTRN	__imp_?read_value@INI_Reader@@QAE_NXZ:PROC
EXTRN	__imp_?is_header@INI_Reader@@QAE_NPBD@Z:PROC
EXTRN	__imp_?read_header@INI_Reader@@QAE_NXZ:PROC
EXTRN	__imp_?login@PlayerDB@@QAEEABUSLoginInfo@@I@Z:PROC
EXTRN	__imp__wcsncpy:PROC
EXTRN	__imp_?HkGetAccountID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PAVCAccount@@@Z:PROC
EXTRN	__imp_??1INI_Reader@@QAE@XZ:PROC
EXTRN	__imp_?open@INI_Reader@@QAE_NPBD_N@Z:PROC
EXTRN	__imp_??0INI_Reader@@QAE@XZ:PROC
xdata$x	SEGMENT
__unwindtable$?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1
__ehfuncinfo$?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv210 = -6064						; size = 4
tv68 = -6060						; size = 4
$T154175 = -6056					; size = 4
$T154174 = -6052					; size = 28
$T154173 = -6024					; size = 4
_ini$ = -6020						; size = 5480
_newcharinfo$ = -540					; size = 448
_logindata$ = -92					; size = 72
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_acc$ = 8						; size = 4
_wscCharname$ = 12					; size = 4
?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; HkNewCharacter
; Line 423
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 6052				; 000017a4H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 424
	push	1
	mov	eax, DWORD PTR _acc$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkLockAccountAccess@@YAXPAVCAccount@@_N@Z
	add	esp, 8
; Line 425
	mov	ecx, DWORD PTR _acc$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkUnlockAccountAccess@@YAXPAVCAccount@@@Z
	add	esp, 4
; Line 427
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_??0INI_Reader@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 428
	push	0
	push	OFFSET $SG143558
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?open@INI_Reader@@QAE_NPBD_N@Z
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN17@HkNewChara
; Line 429
	mov	DWORD PTR $T154173[ebp], 20		; 00000014H
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_??1INI_Reader@@QAE@XZ
	mov	eax, DWORD PTR $T154173[ebp]
	jmp	$LN18@HkNewChara
$LN17@HkNewChara:
; Line 433
	push	36					; 00000024H
	mov	eax, DWORD PTR _acc$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154174[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkGetAccountID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@PAVCAccount@@@Z
	add	esp, 8
	mov	DWORD PTR tv68[ebp], eax
	mov	edx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv210[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv210[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	lea	eax, DWORD PTR _logindata$[ebp]
	push	eax
	call	DWORD PTR __imp__wcsncpy
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T154174[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 434
	push	250					; 000000faH
	lea	ecx, DWORD PTR _logindata$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?login@PlayerDB@@QAEEABUSLoginInfo@@I@Z
; Line 437
	push	23					; 00000017H
	mov	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	lea	edx, DWORD PTR _newcharinfo$[ebp]
	push	edx
	call	DWORD PTR __imp__wcsncpy
	add	esp, 12					; 0000000cH
; Line 438
	xor	eax, eax
	mov	WORD PTR _newcharinfo$[ebp+46], ax
; Line 440
	mov	DWORD PTR _newcharinfo$[ebp+48], 0
; Line 441
	mov	DWORD PTR _newcharinfo$[ebp+52], 0
; Line 442
	mov	DWORD PTR _newcharinfo$[ebp+56], 0
; Line 443
	mov	DWORD PTR _newcharinfo$[ebp+60], 0
$LN16@HkNewChara:
; Line 445
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?read_header@INI_Reader@@QAE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	$LN15@HkNewChara
; Line 447
	push	OFFSET $SG143567
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_header@INI_Reader@@QAE_NPBD@Z
	movzx	edx, al
	test	edx, edx
	je	$LN14@HkNewChara
$LN13@HkNewChara:
; Line 449
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?read_value@INI_Reader@@QAE_NXZ
	movzx	eax, al
	test	eax, eax
	je	$LN12@HkNewChara
; Line 451
	push	OFFSET $SG143572
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_value@INI_Reader@@QAE_NPBD@Z
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@HkNewChara
; Line 452
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?get_value_string@INI_Reader@@QAEPBDXZ
	push	eax
	call	DWORD PTR __imp_?CreateID@@YAIPBD@Z
	add	esp, 4
	mov	DWORD PTR _newcharinfo$[ebp+48], eax
	jmp	$LN10@HkNewChara
$LN11@HkNewChara:
; Line 453
	push	OFFSET $SG143575
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_value@INI_Reader@@QAE_NPBD@Z
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@HkNewChara
; Line 454
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?get_value_string@INI_Reader@@QAEPBDXZ
	push	eax
	call	DWORD PTR __imp_?CreateID@@YAIPBD@Z
	add	esp, 4
	mov	DWORD PTR _newcharinfo$[ebp+52], eax
	jmp	SHORT $LN10@HkNewChara
$LN9@HkNewChara:
; Line 455
	push	OFFSET $SG143578
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_value@INI_Reader@@QAE_NPBD@Z
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@HkNewChara
; Line 456
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?get_value_string@INI_Reader@@QAEPBDXZ
	push	eax
	call	DWORD PTR __imp_?CreateID@@YAIPBD@Z
	add	esp, 4
	mov	DWORD PTR _newcharinfo$[ebp+56], eax
	jmp	SHORT $LN10@HkNewChara
$LN7@HkNewChara:
; Line 457
	push	OFFSET $SG143581
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_value@INI_Reader@@QAE_NPBD@Z
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@HkNewChara
; Line 458
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?get_value_string@INI_Reader@@QAEPBDXZ
	push	eax
	call	DWORD PTR __imp_?CreateID@@YAIPBD@Z
	add	esp, 4
	mov	DWORD PTR _newcharinfo$[ebp+60], eax
$LN10@HkNewChara:
; Line 459
	jmp	$LN13@HkNewChara
$LN12@HkNewChara:
; Line 460
	jmp	SHORT $LN15@HkNewChara
$LN14@HkNewChara:
; Line 462
	jmp	$LN16@HkNewChara
$LN15@HkNewChara:
; Line 463
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?close@INI_Reader@@QAEXXZ
; Line 465
	cmp	DWORD PTR _newcharinfo$[ebp+48], 0
	jne	SHORT $LN4@HkNewChara
; Line 466
	push	OFFSET $SG143583
	call	DWORD PTR __imp_?CreateID@@YAIPBD@Z
	add	esp, 4
	mov	DWORD PTR _newcharinfo$[ebp+48], eax
$LN4@HkNewChara:
; Line 467
	cmp	DWORD PTR _newcharinfo$[ebp+52], 0
	jne	SHORT $LN3@HkNewChara
; Line 468
	push	OFFSET $SG143585
	call	DWORD PTR __imp_?CreateID@@YAIPBD@Z
	add	esp, 4
	mov	DWORD PTR _newcharinfo$[ebp+52], eax
$LN3@HkNewChara:
; Line 469
	cmp	DWORD PTR _newcharinfo$[ebp+56], 0
	jne	SHORT $LN2@HkNewChara
; Line 470
	push	OFFSET $SG143587
	call	DWORD PTR __imp_?CreateID@@YAIPBD@Z
	add	esp, 4
	mov	DWORD PTR _newcharinfo$[ebp+56], eax
$LN2@HkNewChara:
; Line 471
	cmp	DWORD PTR _newcharinfo$[ebp+60], 0
	jne	SHORT $LN1@HkNewChara
; Line 472
	push	OFFSET $SG143589
	call	DWORD PTR __imp_?CreateID@@YAIPBD@Z
	add	esp, 4
	mov	DWORD PTR _newcharinfo$[ebp+60], eax
$LN1@HkNewChara:
; Line 475
	mov	DWORD PTR _newcharinfo$[ebp+80], 65536	; 00010000H
; Line 476
	mov	DWORD PTR _newcharinfo$[ebp+84], 65538	; 00010002H
; Line 477
	mov	DWORD PTR _newcharinfo$[ebp+88], 0
; Line 478
	mov	DWORD PTR _newcharinfo$[ebp+92], 1058642330 ; 3f19999aH
; Line 479
	mov	DWORD PTR _newcharinfo$[ebp+96], -1088841318 ; bf19999aH
; Line 480
	mov	DWORD PTR _newcharinfo$[ebp+100], 65537	; 00010001H
; Line 481
	mov	DWORD PTR _newcharinfo$[ebp+104], 0
; Line 482
	mov	DWORD PTR _newcharinfo$[ebp+108], -1088841318 ; bf19999aH
; Line 483
	mov	DWORD PTR _newcharinfo$[ebp+112], 65539	; 00010003H
; Line 484
	mov	DWORD PTR _newcharinfo$[ebp+116], 65540	; 00010004H
; Line 485
	mov	DWORD PTR _newcharinfo$[ebp+120], 65536	; 00010000H
; Line 486
	mov	DWORD PTR _newcharinfo$[ebp+124], 65538	; 00010002H
; Line 487
	push	250					; 000000faH
	lea	edx, DWORD PTR _newcharinfo$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp__Server
	call	DWORD PTR __imp_?CreateNewCharacter@IServerImpl@@UAEXABUSCreateCharacterInfo@@I@Z
; Line 488
	mov	eax, DWORD PTR _wscCharname$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkSaveChar@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
; Line 489
	push	250					; 000000faH
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?logout@PlayerDB@@QAEXI@Z
; Line 490
	mov	DWORD PTR $T154175[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_??1INI_Reader@@QAE@XZ
	mov	eax, DWORD PTR $T154175[ebp]
$LN18@HkNewChara:
; Line 491
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _ini$[ebp]
	jmp	DWORD PTR __imp_??1INI_Reader@@QAE@XZ
__unwindfunclet$?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T154174[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-6056]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkNewCharacter@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; HkNewCharacter
PUBLIC	__$ArrayPad$
PUBLIC	?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z ; GetUserFilePath
xdata$x	SEGMENT
__ehfuncinfo$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z DD 019930522H
	DD	0bH
	DD	FLAT:__unwindtable$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$1
	DD	02H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$4
	DD	05H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$6
	DD	07H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$7
	DD	08H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$8
	DD	09H
	DD	FLAT:__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$9
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv179 = -628						; size = 4
tv186 = -624						; size = 4
tv177 = -620						; size = 4
tv185 = -616						; size = 4
tv175 = -612						; size = 4
tv184 = -608						; size = 4
tv173 = -604						; size = 4
tv64 = -600						; size = 4
tv171 = -596						; size = 4
tv76 = -592						; size = 4
tv169 = -588						; size = 4
tv79 = -584						; size = 4
tv158 = -580						; size = 4
tv183 = -576						; size = 4
$T154193 = -569						; size = 1
$T154192 = -568						; size = 28
$T154191 = -540						; size = 28
$T154190 = -512						; size = 28
$T154189 = -484						; size = 28
$T154188 = -456						; size = 28
$T154187 = -428						; size = 28
$T154186 = -398						; size = 1
$T154185 = -397						; size = 1
$T154184 = -396						; size = 28
_wscDir$ = -368						; size = 28
_szDataPath$ = -340					; size = 260
_wscFile$ = -72						; size = 28
_scAcctPath$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_wscCharname$ = 12					; size = 4
_extension$ = 16					; size = 4
?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z PROC ; GetUserFilePath
; Line 499
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 616				; 00000268H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 502
	lea	eax, DWORD PTR _szDataPath$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetUserDataPath@@YA_NQAD@Z
	add	esp, 4
; Line 503
	push	OFFSET $SG143600
	lea	ecx, DWORD PTR _szDataPath$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T154184[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv183[ebp], eax
	mov	edx, DWORD PTR tv183[ebp]
	mov	DWORD PTR tv158[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv158[ebp]
	push	eax
	lea	ecx, DWORD PTR _scAcctPath$[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T154184[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 505
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 506
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 507
	lea	edx, DWORD PTR _wscDir$[ebp]
	push	edx
	mov	eax, DWORD PTR _wscCharname$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetAccountDirName@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV23@@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@GetUserFil@2
; Line 508
	mov	BYTE PTR $T154185[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scAcctPath$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T154185[ebp]
	jmp	$LN3@GetUserFil@2
$LN2@GetUserFil@2:
; Line 509
	lea	ecx, DWORD PTR _wscFile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wscCharname$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkGetCharFileName@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV23@@Z
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@GetUserFil@2
; Line 510
	mov	BYTE PTR $T154186[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scAcctPath$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T154186[ebp]
	jmp	$LN3@GetUserFil@2
$LN1@GetUserFil@2:
; Line 511
	mov	eax, DWORD PTR _extension$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscFile$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154187[ebp]
	push	edx
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv79[ebp], eax
	mov	eax, DWORD PTR tv79[ebp]
	mov	DWORD PTR tv169[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv169[ebp]
	push	ecx
	push	OFFSET $SG143613
	lea	edx, DWORD PTR _wscDir$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154188[ebp]
	push	eax
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR tv171[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv171[ebp]
	push	edx
	lea	eax, DWORD PTR _scAcctPath$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154189[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv64[ebp], eax
	mov	edx, DWORD PTR tv64[ebp]
	mov	DWORD PTR tv173[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv173[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154190[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv184[ebp], eax
	mov	edx, DWORD PTR tv184[ebp]
	mov	DWORD PTR tv175[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR tv175[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154191[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv185[ebp], eax
	mov	edx, DWORD PTR tv185[ebp]
	mov	DWORD PTR tv177[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv177[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154192[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv186[ebp], eax
	mov	edx, DWORD PTR tv186[ebp]
	mov	DWORD PTR tv179[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR tv179[ebp]
	push	eax
	mov	ecx, DWORD PTR _path$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T154192[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T154191[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T154190[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154189[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T154188[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T154187[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 512
	mov	BYTE PTR $T154193[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _wscFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _wscDir$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scAcctPath$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T154193[ebp]
$LN3@GetUserFil@2:
; Line 513
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$0:
	lea	ecx, DWORD PTR $T154184[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$1:
	lea	ecx, DWORD PTR _scAcctPath$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$2:
	lea	ecx, DWORD PTR _wscDir$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$3:
	lea	ecx, DWORD PTR _wscFile$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$4:
	lea	ecx, DWORD PTR $T154187[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$5:
	lea	ecx, DWORD PTR $T154188[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$6:
	lea	ecx, DWORD PTR $T154189[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$7:
	lea	ecx, DWORD PTR $T154190[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$8:
	lea	ecx, DWORD PTR $T154191[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z$9:
	lea	ecx, DWORD PTR $T154192[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-620]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetUserFilePath@@YA_NAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@ABV12@@Z ENDP ; GetUserFilePath
PUBLIC	?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z		; HkAntiCheat
EXTRN	__imp_?HkKick@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC
EXTRN	__imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z:PROC
EXTRN	__imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z:PROC
EXTRN	__imp_?itos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp_?hModServer@@3PAUHINSTANCE__@@A:DWORD
xdata$x	SEGMENT
__ehfuncinfo$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$15
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv236 = -628						; size = 4
tv252 = -624						; size = 4
tv234 = -620						; size = 4
tv251 = -616						; size = 4
tv232 = -612						; size = 4
tv250 = -608						; size = 4
tv230 = -604						; size = 4
tv249 = -600						; size = 4
tv228 = -596						; size = 4
tv248 = -592						; size = 4
tv226 = -588						; size = 4
tv247 = -584						; size = 4
tv224 = -580						; size = 4
tv246 = -576						; size = 4
tv222 = -572						; size = 4
tv245 = -568						; size = 4
tv220 = -564						; size = 4
tv244 = -560						; size = 4
tv218 = -556						; size = 4
tv243 = -552						; size = 4
tv216 = -548						; size = 4
tv242 = -544						; size = 4
tv214 = -540						; size = 4
tv241 = -536						; size = 4
tv212 = -532						; size = 4
tv240 = -528						; size = 4
tv210 = -524						; size = 4
tv239 = -520						; size = 4
tv208 = -516						; size = 4
tv238 = -512						; size = 4
tv206 = -508						; size = 4
tv237 = -504						; size = 4
$T154224 = -500						; size = 28
$T154223 = -472						; size = 28
$T154222 = -444						; size = 28
$T154221 = -416						; size = 28
$T154220 = -388						; size = 28
$T154219 = -360						; size = 28
$T154218 = -332						; size = 28
$T154217 = -304						; size = 28
$T154216 = -276						; size = 28
$T154215 = -248						; size = 28
$T154214 = -220						; size = 28
$T154213 = -192						; size = 28
$T154212 = -164						; size = 28
$T154211 = -136						; size = 28
$T154210 = -108						; size = 28
$T154209 = -80						; size = 28
_lCompare$ = -52					; size = 4
_FLPossibleCheatingDetected$ = -48			; size = 4
_FLAntiCheat4$ = -44					; size = 4
_cRes$ = -37						; size = 1
_lRet$ = -36						; size = 4
_FLAntiCheat1$ = -32					; size = 4
_iShip$ = -28						; size = 4
_FLAntiCheat2$ = -24					; size = 4
_szObjPtr$ = -20					; size = 4
_FLAntiCheat3$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z PROC			; HkAntiCheat
; Line 520
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 616				; 00000268H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 527
	mov	eax, DWORD PTR __imp_?hModServer@@3PAUHINSTANCE__@@A
	mov	ecx, DWORD PTR [eax]
	add	ecx, 459040				; 00070120H
	mov	DWORD PTR _FLAntiCheat1$[ebp], ecx
; Line 528
	mov	edx, DWORD PTR __imp_?hModServer@@3PAUHINSTANCE__@@A
	mov	eax, DWORD PTR [edx]
	add	eax, 458016				; 0006fd20H
	mov	DWORD PTR _FLAntiCheat2$[ebp], eax
; Line 529
	mov	ecx, DWORD PTR __imp_?hModServer@@3PAUHINSTANCE__@@A
	mov	edx, DWORD PTR [ecx]
	add	edx, 457456				; 0006faf0H
	mov	DWORD PTR _FLAntiCheat3$[ebp], edx
; Line 530
	mov	eax, DWORD PTR __imp_?hModServer@@3PAUHINSTANCE__@@A
	mov	ecx, DWORD PTR [eax]
	add	ecx, 457376				; 0006faa0H
	mov	DWORD PTR _FLAntiCheat4$[ebp], ecx
; Line 531
	mov	edx, DWORD PTR __imp_?hModServer@@3PAUHINSTANCE__@@A
	mov	eax, DWORD PTR [edx]
	add	eax, 456048				; 0006f570H
	mov	DWORD PTR _FLPossibleCheatingDetected$[ebp], eax
; Line 534
	mov	DWORD PTR _iShip$[ebp], 0
; Line 535
	lea	ecx, DWORD PTR _iShip$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetShip@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 536
	cmp	DWORD PTR _iShip$[ebp], 0
	je	SHORT $LN5@HkAntiChea
; Line 537
	xor	eax, eax
	jmp	$LN6@HkAntiChea
$LN5@HkAntiChea:
; Line 540
	push	4
	mov	eax, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	push	eax
	lea	ecx, DWORD PTR _szObjPtr$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 541
	mov	edx, DWORD PTR _iClientID$[ebp]
	sub	edx, 1
	imul	edx, 1048				; 00000418H
	add	edx, DWORD PTR _szObjPtr$[ebp]
	mov	DWORD PTR _szObjPtr$[ebp], edx
; Line 548
	mov	ecx, DWORD PTR _szObjPtr$[ebp]
; Line 549
	call	DWORD PTR _FLAntiCheat1$[ebp]
; Line 550
	mov	BYTE PTR _cRes$[ebp], al
; Line 553
	movsx	eax, BYTE PTR _cRes$[ebp]
	test	eax, eax
	je	$LN4@HkAntiChea
; Line 555
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154209[ebp]
	push	edx
	call	DWORD PTR __imp_?itos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	add	esp, 8
	mov	DWORD PTR tv237[ebp], eax
	mov	eax, DWORD PTR tv237[ebp]
	mov	DWORD PTR tv206[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv206[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154210[ebp]
	push	edx
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv238[ebp], eax
	mov	eax, DWORD PTR tv238[ebp]
	mov	DWORD PTR tv208[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv208[ebp]
	push	ecx
	push	OFFSET $SG143645
	lea	ecx, DWORD PTR $T154211[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv239[ebp], eax
	mov	edx, DWORD PTR tv239[ebp]
	mov	DWORD PTR tv210[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv210[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154212[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv240[ebp], eax
	mov	edx, DWORD PTR tv240[ebp]
	mov	DWORD PTR tv212[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv212[ebp]
	push	eax
	call	DWORD PTR __imp_?HkKick@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T154212[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T154211[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T154210[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T154209[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 556
	mov	eax, 25					; 00000019H
	jmp	$LN6@HkAntiChea
$LN4@HkAntiChea:
; Line 562
	mov	ecx, DWORD PTR _szObjPtr$[ebp]
; Line 563
	call	DWORD PTR _FLAntiCheat2$[ebp]
; Line 564
	mov	BYTE PTR _cRes$[ebp], al
; Line 567
	movsx	ecx, BYTE PTR _cRes$[ebp]
	test	ecx, ecx
	je	$LN3@HkAntiChea
; Line 569
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154213[ebp]
	push	eax
	call	DWORD PTR __imp_?itos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	add	esp, 8
	mov	DWORD PTR tv241[ebp], eax
	mov	ecx, DWORD PTR tv241[ebp]
	mov	DWORD PTR tv214[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv214[ebp]
	push	edx
	lea	eax, DWORD PTR $T154214[ebp]
	push	eax
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv242[ebp], eax
	mov	ecx, DWORD PTR tv242[ebp]
	mov	DWORD PTR tv216[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR tv216[ebp]
	push	edx
	push	OFFSET $SG143651
	lea	ecx, DWORD PTR $T154215[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv243[ebp], eax
	mov	eax, DWORD PTR tv243[ebp]
	mov	DWORD PTR tv218[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv218[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154216[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv244[ebp], eax
	mov	eax, DWORD PTR tv244[ebp]
	mov	DWORD PTR tv220[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv220[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkKick@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T154216[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T154215[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T154214[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T154213[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 570
	mov	eax, 25					; 00000019H
	jmp	$LN6@HkAntiChea
$LN3@HkAntiChea:
; Line 578
	mov	ecx, DWORD PTR _szObjPtr$[ebp]
; Line 579
	mov	eax, DWORD PTR [ecx+800]
; Line 580
	mov	DWORD PTR _lCompare$[ebp], eax
; Line 581
	call	DWORD PTR _FLAntiCheat3$[ebp]
; Line 582
	mov	DWORD PTR _lRet$[ebp], eax
; Line 585
	mov	edx, DWORD PTR _lRet$[ebp]
	cmp	edx, DWORD PTR _lCompare$[ebp]
	jbe	$LN2@HkAntiChea
; Line 587
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154217[ebp]
	push	ecx
	call	DWORD PTR __imp_?itos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	add	esp, 8
	mov	DWORD PTR tv245[ebp], eax
	mov	edx, DWORD PTR tv245[ebp]
	mov	DWORD PTR tv222[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR tv222[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154218[ebp]
	push	ecx
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv246[ebp], eax
	mov	edx, DWORD PTR tv246[ebp]
	mov	DWORD PTR tv224[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv224[ebp]
	push	eax
	push	OFFSET $SG143659
	lea	ecx, DWORD PTR $T154219[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv247[ebp], eax
	mov	ecx, DWORD PTR tv247[ebp]
	mov	DWORD PTR tv226[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR tv226[ebp]
	push	edx
	lea	eax, DWORD PTR $T154220[ebp]
	push	eax
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv248[ebp], eax
	mov	ecx, DWORD PTR tv248[ebp]
	mov	DWORD PTR tv228[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR tv228[ebp]
	push	edx
	call	DWORD PTR __imp_?HkKick@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T154220[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T154219[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T154218[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T154217[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 588
	mov	eax, 25					; 00000019H
	jmp	$LN6@HkAntiChea
$LN2@HkAntiChea:
; Line 594
	mov	ecx, DWORD PTR _szObjPtr$[ebp]
; Line 595
	call	DWORD PTR _FLAntiCheat4$[ebp]
; Line 596
	mov	BYTE PTR _cRes$[ebp], al
; Line 599
	movsx	eax, BYTE PTR _cRes$[ebp]
	test	eax, eax
	je	$LN1@HkAntiChea
; Line 601
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154221[ebp]
	push	edx
	call	DWORD PTR __imp_?itos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	add	esp, 8
	mov	DWORD PTR tv249[ebp], eax
	mov	eax, DWORD PTR tv249[ebp]
	mov	DWORD PTR tv230[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR tv230[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154222[ebp]
	push	edx
	call	DWORD PTR __imp_?stows@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv250[ebp], eax
	mov	eax, DWORD PTR tv250[ebp]
	mov	DWORD PTR tv232[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR tv232[ebp]
	push	ecx
	push	OFFSET $SG143665
	lea	ecx, DWORD PTR $T154223[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv251[ebp], eax
	mov	edx, DWORD PTR tv251[ebp]
	mov	DWORD PTR tv234[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	eax, DWORD PTR tv234[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154224[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv252[ebp], eax
	mov	edx, DWORD PTR tv252[ebp]
	mov	DWORD PTR tv236[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	eax, DWORD PTR tv236[ebp]
	push	eax
	call	DWORD PTR __imp_?HkKick@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T154224[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T154223[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T154222[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T154221[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 602
	mov	eax, 25					; 00000019H
	jmp	SHORT $LN6@HkAntiChea
$LN1@HkAntiChea:
; Line 605
	xor	eax, eax
$LN6@HkAntiChea:
; Line 606
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$0:
	lea	ecx, DWORD PTR $T154209[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$1:
	lea	ecx, DWORD PTR $T154210[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$2:
	lea	ecx, DWORD PTR $T154211[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$3:
	lea	ecx, DWORD PTR $T154212[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$4:
	lea	ecx, DWORD PTR $T154213[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$5:
	lea	ecx, DWORD PTR $T154214[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$6:
	lea	ecx, DWORD PTR $T154215[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$7:
	lea	ecx, DWORD PTR $T154216[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$8:
	lea	ecx, DWORD PTR $T154217[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$9:
	lea	ecx, DWORD PTR $T154218[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$10:
	lea	ecx, DWORD PTR $T154219[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$11:
	lea	ecx, DWORD PTR $T154220[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$12:
	lea	ecx, DWORD PTR $T154221[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$13:
	lea	ecx, DWORD PTR $T154222[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$14:
	lea	ecx, DWORD PTR $T154223[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z$15:
	lea	ecx, DWORD PTR $T154224[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-620]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkAntiCheat@@YA?AW4HK_ERROR@@I@Z ENDP			; HkAntiCheat
PUBLIC	??D?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEAAUIGNORE_INFO@@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator*
PUBLIC	??9?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator!=
PUBLIC	?end@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::end
PUBLIC	??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV012@H@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator++
PUBLIC	?begin@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::begin
PUBLIC	__$ArrayPad$
PUBLIC	?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z ; FormatSendChat
EXTRN	__imp_?HkFMsg@@YA?AW4HK_ERROR@@IABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC
EXTRN	__imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIABV12@I@Z:PROC
EXTRN	__imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHABV12@@Z:PROC
EXTRN	__imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z:PROC
EXTRN	__imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z:PROC
EXTRN	__imp_?set_bUserCmdIgnore@@3_NA:BYTE
xdata$x	SEGMENT
__ehfuncinfo$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z DD 019930522H
	DD	01fH
	DD	FLAT:__unwindtable$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	010H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	0fH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	0eH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	0dH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	0cH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	0bH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	0aH
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	09H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	08H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	07H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	06H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
	DD	05H
	DD	FLAT:__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv379 = -748						; size = 4
tv398 = -744						; size = 4
tv377 = -740						; size = 4
tv397 = -736						; size = 4
tv375 = -732						; size = 4
tv396 = -728						; size = 4
tv373 = -724						; size = 4
tv395 = -720						; size = 4
tv371 = -716						; size = 4
tv394 = -712						; size = 4
tv369 = -708						; size = 4
tv393 = -704						; size = 4
tv367 = -700						; size = 4
tv392 = -696						; size = 4
tv365 = -692						; size = 4
tv391 = -688						; size = 4
tv363 = -684						; size = 4
tv390 = -680						; size = 4
tv361 = -676						; size = 4
tv389 = -672						; size = 4
tv359 = -668						; size = 4
tv210 = -664						; size = 4
tv357 = -660						; size = 4
tv214 = -656						; size = 4
tv191 = -652						; size = 4
tv185 = -648						; size = 4
tv178 = -644						; size = 4
tv317 = -640						; size = 4
tv387 = -636						; size = 4
tv312 = -632						; size = 4
tv385 = -628						; size = 4
tv149 = -624						; size = 4
tv303 = -620						; size = 4
tv383 = -616						; size = 4
tv298 = -612						; size = 4
tv381 = -608						; size = 4
$T154271 = -604						; size = 4
$T154270 = -600						; size = 28
$T154269 = -572						; size = 28
$T154268 = -544						; size = 28
$T154267 = -516						; size = 28
$T154266 = -488						; size = 28
$T154265 = -460						; size = 28
$T154264 = -432						; size = 28
$T154263 = -404						; size = 28
$T154262 = -376						; size = 28
$T154261 = -348						; size = 28
$T154260 = -320						; size = 28
$T154259 = -292						; size = 28
$T154256 = -264						; size = 28
$T154255 = -236						; size = 28
$T154254 = -205						; size = 1
$T154251 = -204						; size = 28
$T154250 = -176						; size = 28
$T154249 = -145						; size = 1
$T154248 = -144						; size = 8
$T154247 = -136						; size = 8
_it$143812 = -128					; size = 8
_wscTRADataSenderColor$ = -120				; size = 28
_wscXML$ = -92						; size = 28
_cFormat$ = -61						; size = 1
_wszFormatBuf$ = -60					; size = 16
_wscTRADataFormat$ = -44				; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iToClientID$ = 8					; size = 4
_wscSender$ = 12					; size = 4
_wscText$ = 16						; size = 4
_wscTextColor$ = 20					; size = 4
?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z PROC ; FormatSendChat
; Line 614
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 736				; 000002e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154271[ebp], 0
; Line 617
	mov	eax, DWORD PTR __imp_?set_bUserCmdIgnore@@3_NA
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN18@FormatSend
; Line 619
	lea	edx, DWORD PTR _it$143812[ebp]
	push	edx
	mov	eax, DWORD PTR _iToClientID$[ebp]
	imul	eax, 2368				; 00000940H
	mov	ecx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	lea	ecx, DWORD PTR [ecx+eax+2144]
	call	?begin@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::begin
	jmp	SHORT $LN17@FormatSend
$LN16@FormatSend:
	push	0
	lea	edx, DWORD PTR $T154247[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$143812[ebp]
	call	??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV012@H@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator++
$LN17@FormatSend:
	lea	eax, DWORD PTR $T154248[ebp]
	push	eax
	mov	ecx, DWORD PTR _iToClientID$[ebp]
	imul	ecx, 2368				; 00000940H
	mov	edx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	lea	ecx, DWORD PTR [edx+ecx+2144]
	call	?end@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::end
	push	eax
	lea	ecx, DWORD PTR _it$143812[ebp]
	call	??9?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator!=
	movzx	eax, al
	test	eax, eax
	je	$LN18@FormatSend
; Line 621
	push	0
	push	OFFSET $SG143823
	lea	ecx, DWORD PTR _it$143812[ebp]
	call	??D?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEAAUIGNORE_INFO@@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator*
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	cmp	eax, -1
	jne	$LN21@FormatSend
	lea	ecx, DWORD PTR _it$143812[ebp]
	call	??D?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEAAUIGNORE_INFO@@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator*
	push	eax
	lea	ecx, DWORD PTR $T154251[ebp]
	push	ecx
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv381[ebp], eax
	mov	edx, DWORD PTR tv381[ebp]
	mov	DWORD PTR tv298[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T154271[ebp]
	or	eax, 1
	mov	DWORD PTR $T154271[ebp], eax
	mov	ecx, DWORD PTR tv298[ebp]
	push	ecx
	mov	edx, DWORD PTR _wscSender$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154250[ebp]
	push	eax
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv383[ebp], eax
	mov	ecx, DWORD PTR tv383[ebp]
	mov	DWORD PTR tv303[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T154271[ebp]
	or	edx, 2
	mov	DWORD PTR $T154271[ebp], edx
	mov	ecx, DWORD PTR tv303[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHABV12@@Z
	test	eax, eax
	jne	SHORT $LN21@FormatSend
	mov	DWORD PTR tv149[ebp], 1
	jmp	SHORT $LN22@FormatSend
$LN21@FormatSend:
	mov	DWORD PTR tv149[ebp], 0
$LN22@FormatSend:
	mov	al, BYTE PTR tv149[ebp]
	mov	BYTE PTR $T154249[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T154271[ebp]
	and	ecx, 2
	je	SHORT $LN29@FormatSend
	and	DWORD PTR $T154271[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T154250[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN29@FormatSend:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T154271[ebp]
	and	edx, 1
	je	SHORT $LN30@FormatSend
	and	DWORD PTR $T154271[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T154251[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN30@FormatSend:
	movzx	eax, BYTE PTR $T154249[ebp]
	test	eax, eax
	je	SHORT $LN14@FormatSend
	jmp	$LN19@FormatSend
; Line 622
	jmp	$LN13@FormatSend
$LN14@FormatSend:
; Line 623
	push	0
	push	OFFSET $SG143829
	lea	ecx, DWORD PTR _it$143812[ebp]
	call	??D?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEAAUIGNORE_INFO@@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator*
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	cmp	eax, -1
	je	$LN23@FormatSend
	push	0
	lea	ecx, DWORD PTR _it$143812[ebp]
	call	??D?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEAAUIGNORE_INFO@@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator*
	push	eax
	lea	ecx, DWORD PTR $T154256[ebp]
	push	ecx
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv385[ebp], eax
	mov	edx, DWORD PTR tv385[ebp]
	mov	DWORD PTR tv312[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T154271[ebp]
	or	eax, 4
	mov	DWORD PTR $T154271[ebp], eax
	mov	ecx, DWORD PTR tv312[ebp]
	push	ecx
	mov	edx, DWORD PTR _wscSender$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154255[ebp]
	push	eax
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv387[ebp], eax
	mov	ecx, DWORD PTR tv387[ebp]
	mov	DWORD PTR tv317[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T154271[ebp]
	or	edx, 8
	mov	DWORD PTR $T154271[ebp], edx
	mov	ecx, DWORD PTR tv317[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIABV12@I@Z
	cmp	eax, -1
	je	SHORT $LN23@FormatSend
	mov	DWORD PTR tv178[ebp], 1
	jmp	SHORT $LN24@FormatSend
$LN23@FormatSend:
	mov	DWORD PTR tv178[ebp], 0
$LN24@FormatSend:
	mov	al, BYTE PTR tv178[ebp]
	mov	BYTE PTR $T154254[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR $T154271[ebp]
	and	ecx, 8
	je	SHORT $LN35@FormatSend
	and	DWORD PTR $T154271[ebp], -9		; fffffff7H
	lea	ecx, DWORD PTR $T154255[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN35@FormatSend:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR $T154271[ebp]
	and	edx, 4
	je	SHORT $LN36@FormatSend
	and	DWORD PTR $T154271[ebp], -5		; fffffffbH
	lea	ecx, DWORD PTR $T154256[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN36@FormatSend:
	movzx	eax, BYTE PTR $T154254[ebp]
	test	eax, eax
	je	SHORT $LN13@FormatSend
; Line 624
	jmp	$LN19@FormatSend
$LN13@FormatSend:
; Line 625
	jmp	$LN16@FormatSend
$LN18@FormatSend:
; Line 630
	mov	ecx, DWORD PTR _iToClientID$[ebp]
	imul	ecx, 2368				; 00000940H
	mov	edx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	mov	eax, DWORD PTR [edx+ecx+2184]
	mov	DWORD PTR tv185[ebp], eax
	cmp	DWORD PTR tv185[ebp], 1
	je	SHORT $LN9@FormatSend
	cmp	DWORD PTR tv185[ebp], 2
	je	SHORT $LN8@FormatSend
	jmp	SHORT $LN7@FormatSend
$LN9@FormatSend:
; Line 632
	mov	BYTE PTR _cFormat$[ebp], 144		; 00000090H
	jmp	SHORT $LN10@FormatSend
$LN8@FormatSend:
; Line 633
	mov	BYTE PTR _cFormat$[ebp], 16		; 00000010H
	jmp	SHORT $LN10@FormatSend
$LN7@FormatSend:
; Line 634
	mov	BYTE PTR _cFormat$[ebp], 0
$LN10@FormatSend:
; Line 638
	mov	ecx, DWORD PTR _iToClientID$[ebp]
	imul	ecx, 2368				; 00000940H
	mov	edx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	mov	eax, DWORD PTR [edx+ecx+2188]
	mov	DWORD PTR tv191[ebp], eax
	cmp	DWORD PTR tv191[ebp], 1
	je	SHORT $LN4@FormatSend
	cmp	DWORD PTR tv191[ebp], 2
	je	SHORT $LN3@FormatSend
	cmp	DWORD PTR tv191[ebp], 3
	je	SHORT $LN2@FormatSend
	jmp	SHORT $LN1@FormatSend
$LN4@FormatSend:
; Line 640
	movzx	ecx, BYTE PTR _cFormat$[ebp]
	add	ecx, 1
	mov	BYTE PTR _cFormat$[ebp], cl
	jmp	SHORT $LN5@FormatSend
$LN3@FormatSend:
; Line 641
	movzx	edx, BYTE PTR _cFormat$[ebp]
	add	edx, 2
	mov	BYTE PTR _cFormat$[ebp], dl
	jmp	SHORT $LN5@FormatSend
$LN2@FormatSend:
; Line 642
	movzx	eax, BYTE PTR _cFormat$[ebp]
	add	eax, 4
	mov	BYTE PTR _cFormat$[ebp], al
	jmp	SHORT $LN5@FormatSend
$LN1@FormatSend:
; Line 643
	mov	cl, BYTE PTR _cFormat$[ebp]
	mov	BYTE PTR _cFormat$[ebp], cl
$LN5@FormatSend:
; Line 647
	movzx	edx, BYTE PTR _cFormat$[ebp]
	push	edx
	push	OFFSET $SG143853
	push	8
	lea	eax, DWORD PTR _wszFormatBuf$[ebp]
	push	eax
	call	_swprintf
	add	esp, 16					; 00000010H
; Line 648
	lea	ecx, DWORD PTR _wszFormatBuf$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _wscTRADataFormat$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 649
	push	OFFSET $SG143856
	lea	ecx, DWORD PTR _wscTRADataSenderColor$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 652
	push	OFFSET $SG143871
	mov	edx, DWORD PTR _wscText$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154259[ebp]
	push	eax
	call	DWORD PTR __imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv214[ebp], eax
	mov	ecx, DWORD PTR tv214[ebp]
	mov	DWORD PTR tv357[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv357[ebp]
	push	edx
	push	OFFSET $SG143872
	lea	eax, DWORD PTR _wscTRADataFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscTextColor$[ebp]
	push	ecx
	push	OFFSET $SG143873
	push	OFFSET $SG143874
	mov	edx, DWORD PTR _wscSender$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154260[ebp]
	push	eax
	call	DWORD PTR __imp_?XMLText@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	DWORD PTR tv210[ebp], eax
	mov	ecx, DWORD PTR tv210[ebp]
	mov	DWORD PTR tv359[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv359[ebp]
	push	edx
	push	OFFSET $SG143875
	lea	eax, DWORD PTR _wscTRADataFormat$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscTRADataSenderColor$[ebp]
	push	ecx
	push	OFFSET $SG143876
	lea	edx, DWORD PTR $T154261[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv389[ebp], eax
	mov	eax, DWORD PTR tv389[ebp]
	mov	DWORD PTR tv361[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv361[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154262[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv390[ebp], eax
	mov	eax, DWORD PTR tv390[ebp]
	mov	DWORD PTR tv363[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR tv363[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154263[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv391[ebp], eax
	mov	eax, DWORD PTR tv391[ebp]
	mov	DWORD PTR tv365[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv365[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154264[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv392[ebp], eax
	mov	eax, DWORD PTR tv392[ebp]
	mov	DWORD PTR tv367[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR tv367[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154265[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv393[ebp], eax
	mov	eax, DWORD PTR tv393[ebp]
	mov	DWORD PTR tv369[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR tv369[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154266[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv394[ebp], eax
	mov	eax, DWORD PTR tv394[ebp]
	mov	DWORD PTR tv371[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR tv371[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154267[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv395[ebp], eax
	mov	eax, DWORD PTR tv395[ebp]
	mov	DWORD PTR tv373[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	ecx, DWORD PTR tv373[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154268[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv396[ebp], eax
	mov	eax, DWORD PTR tv396[ebp]
	mov	DWORD PTR tv375[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR tv375[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154269[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv397[ebp], eax
	mov	eax, DWORD PTR tv397[ebp]
	mov	DWORD PTR tv377[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	ecx, DWORD PTR tv377[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154270[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv398[ebp], eax
	mov	eax, DWORD PTR tv398[ebp]
	mov	DWORD PTR tv379[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	ecx, DWORD PTR tv379[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscXML$[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HGU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	lea	ecx, DWORD PTR $T154270[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR $T154269[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR $T154268[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR $T154267[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR $T154266[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	lea	ecx, DWORD PTR $T154265[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR $T154264[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR $T154263[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	ecx, DWORD PTR $T154262[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	lea	ecx, DWORD PTR $T154261[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	lea	ecx, DWORD PTR $T154260[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	lea	ecx, DWORD PTR $T154259[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 654
	lea	eax, DWORD PTR _wscXML$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iToClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkFMsg@@YA?AW4HK_ERROR@@IABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 8
; Line 655
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _wscXML$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _wscTRADataSenderColor$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscTRADataFormat$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN19@FormatSend:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$0:
	mov	eax, DWORD PTR $T154271[ebp]
	and	eax, 1
	je	$LN26@FormatSend
	and	DWORD PTR $T154271[ebp], -2		; fffffffeH
	lea	ecx, DWORD PTR $T154251[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN26@FormatSend:
	ret	0
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$1:
	mov	eax, DWORD PTR $T154271[ebp]
	and	eax, 2
	je	$LN28@FormatSend
	and	DWORD PTR $T154271[ebp], -3		; fffffffdH
	lea	ecx, DWORD PTR $T154250[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN28@FormatSend:
	ret	0
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$2:
	mov	eax, DWORD PTR $T154271[ebp]
	and	eax, 4
	je	$LN32@FormatSend
	and	DWORD PTR $T154271[ebp], -5		; fffffffbH
	lea	ecx, DWORD PTR $T154256[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN32@FormatSend:
	ret	0
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$3:
	mov	eax, DWORD PTR $T154271[ebp]
	and	eax, 8
	je	$LN34@FormatSend
	and	DWORD PTR $T154271[ebp], -9		; fffffff7H
	lea	ecx, DWORD PTR $T154255[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN34@FormatSend:
	ret	0
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$4:
	lea	ecx, DWORD PTR _wscTRADataFormat$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$5:
	lea	ecx, DWORD PTR _wscTRADataSenderColor$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$6:
	lea	ecx, DWORD PTR $T154259[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$7:
	lea	ecx, DWORD PTR $T154260[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$8:
	lea	ecx, DWORD PTR $T154261[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$9:
	lea	ecx, DWORD PTR $T154262[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$10:
	lea	ecx, DWORD PTR $T154263[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$11:
	lea	ecx, DWORD PTR $T154264[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$12:
	lea	ecx, DWORD PTR $T154265[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$13:
	lea	ecx, DWORD PTR $T154266[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$14:
	lea	ecx, DWORD PTR $T154267[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$15:
	lea	ecx, DWORD PTR $T154268[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$16:
	lea	ecx, DWORD PTR $T154269[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$17:
	lea	ecx, DWORD PTR $T154270[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z$18:
	lea	ecx, DWORD PTR _wscXML$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-740]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z ENDP ; FormatSendChat
EXTRN	__imp___vswprintf_c_l:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
__Ret$ = -8						; size = 4
__Arglist$ = -4						; size = 4
__String$ = 8						; size = 4
__Count$ = 12						; size = 4
__Format$ = 16						; size = 4
_swprintf PROC
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\swprintf.inl
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 40
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __Arglist$[ebp], eax
; Line 41
	mov	ecx, DWORD PTR __Arglist$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __String$[ebp]
	push	ecx
	call	DWORD PTR __imp___vswprintf_c_l
	add	esp, 20					; 00000014H
	mov	DWORD PTR __Ret$[ebp], eax
; Line 42
	mov	DWORD PTR __Arglist$[ebp], 0
; Line 43
	mov	eax, DWORD PTR __Ret$[ebp]
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
_swprintf ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendPrivateChat
xdata$x	SEGMENT
__unwindtable$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2
__ehfuncinfo$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154309 = -124						; size = 28
$T154308 = -96						; size = 28
$T154307 = -68						; size = 8
$T154306 = -60						; size = 8
_it$143889 = -52					; size = 8
_wscSender$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iFromClientID$ = 8					; size = 4
_iToClientID$ = 12					; size = 4
_wscText$ = 16						; size = 4
?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; SendPrivateChat
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\pluginutilities.cpp
; Line 659
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 660
	mov	eax, DWORD PTR _iFromClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscSender$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 662
	mov	ecx, DWORD PTR __imp_?set_bUserCmdIgnore@@3_NA
	movzx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	$LN5@SendPrivat
; Line 664
	lea	eax, DWORD PTR _it$143889[ebp]
	push	eax
	mov	ecx, DWORD PTR _iToClientID$[ebp]
	imul	ecx, 2368				; 00000940H
	mov	edx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	lea	ecx, DWORD PTR [edx+ecx+2144]
	call	?begin@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::begin
	jmp	SHORT $LN4@SendPrivat
$LN3@SendPrivat:
	push	0
	lea	eax, DWORD PTR $T154306[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$143889[ebp]
	call	??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV012@H@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator++
$LN4@SendPrivat:
	lea	ecx, DWORD PTR $T154307[ebp]
	push	ecx
	mov	edx, DWORD PTR _iToClientID$[ebp]
	imul	edx, 2368				; 00000940H
	mov	eax, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	lea	ecx, DWORD PTR [eax+edx+2144]
	call	?end@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::end
	push	eax
	lea	ecx, DWORD PTR _it$143889[ebp]
	call	??9?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@SendPrivat
; Line 666
	push	0
	push	OFFSET $SG143897
	lea	ecx, DWORD PTR _it$143889[ebp]
	call	??D?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEAAUIGNORE_INFO@@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator*
	add	eax, 28					; 0000001cH
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	cmp	eax, -1
	je	SHORT $LN1@SendPrivat
; Line 667
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscSender$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN6@SendPrivat
$LN1@SendPrivat:
; Line 668
	jmp	SHORT $LN3@SendPrivat
$LN5@SendPrivat:
; Line 672
	push	OFFSET $SG143899
	lea	ecx, DWORD PTR $T154308[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	edx, DWORD PTR $T154308[ebp]
	push	edx
	mov	eax, DWORD PTR _wscText$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscSender$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iToClientID$[ebp]
	push	edx
	call	?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z ; FormatSendChat
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T154308[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 673
	push	OFFSET $SG143901
	lea	ecx, DWORD PTR $T154309[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR $T154309[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscText$[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscSender$[ebp]
	push	edx
	mov	eax, DWORD PTR _iFromClientID$[ebp]
	push	eax
	call	?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z ; FormatSendChat
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T154309[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 674
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscSender$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN6@SendPrivat:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _wscSender$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T154308[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T154309[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendPrivateChat@@YAXIIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; SendPrivateChat
PUBLIC	__$ArrayPad$
PUBLIC	?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendSystemChat
xdata$x	SEGMENT
__unwindtable$?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1
__ehfuncinfo$?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154319 = -88						; size = 28
_iClientID$143913 = -60					; size = 4
_iClientSystemID$143914 = -56				; size = 4
_iSystemID$ = -52					; size = 4
_pPD$ = -48						; size = 4
_wscSender$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iFromClientID$ = 8					; size = 4
_wscText$ = 12						; size = 4
?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; SendSystemChat
; Line 678
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 679
	mov	eax, DWORD PTR _iFromClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscSender$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 683
	lea	ecx, DWORD PTR _iSystemID$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iFromClientID$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 686
	mov	DWORD PTR _pPD$[ebp], 0
$LN3@SendSystem:
; Line 687
	mov	eax, DWORD PTR _pPD$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?traverse_active@PlayerDB@@QBEPAUPlayerData@@PAU2@@Z
	mov	DWORD PTR _pPD$[ebp], eax
	cmp	DWORD PTR _pPD$[ebp], 0
	je	SHORT $LN2@SendSystem
; Line 689
	mov	ecx, DWORD PTR _pPD$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkGetClientIdFromPD@@YAIPAUPlayerData@@@Z
	add	esp, 4
	mov	DWORD PTR _iClientID$143913[ebp], eax
; Line 690
	mov	DWORD PTR _iClientSystemID$143914[ebp], 0
; Line 691
	lea	edx, DWORD PTR _iClientSystemID$143914[ebp]
	push	edx
	lea	eax, DWORD PTR _iClientID$143913[ebp]
	push	eax
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 692
	mov	ecx, DWORD PTR _iSystemID$[ebp]
	cmp	ecx, DWORD PTR _iClientSystemID$143914[ebp]
	jne	SHORT $LN1@SendSystem
; Line 695
	push	OFFSET $SG143917
	lea	ecx, DWORD PTR $T154319[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	edx, DWORD PTR $T154319[ebp]
	push	edx
	mov	eax, DWORD PTR _wscText$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscSender$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iClientID$143913[ebp]
	push	edx
	call	?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z ; FormatSendChat
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T154319[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN1@SendSystem:
; Line 697
	jmp	$LN3@SendSystem
$LN2@SendSystem:
; Line 698
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscSender$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _wscSender$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T154319[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; SendSystemChat
PUBLIC	__real@40cd4b8000000000
PUBLIC	?pow@@YAMMH@Z					; pow
PUBLIC	__$ArrayPad$
PUBLIC	?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendLocalSystemChat
;	COMDAT __real@40cd4b8000000000
CONST	SEGMENT
__real@40cd4b8000000000 DQ 040cd4b8000000000r	; 14999
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1
__ehfuncinfo$?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv187 = -216						; size = 4
tv199 = -212						; size = 8
tv180 = -204						; size = 4
tv175 = -200						; size = 4
$T154328 = -196						; size = 28
_iClientID$143932 = -168				; size = 4
_mShipDir$143937 = -164					; size = 36
_iClientSystemID$143933 = -128				; size = 4
_vShipLoc$143936 = -124					; size = 12
_iShip$143935 = -112					; size = 4
_fDistance$143938 = -108				; size = 4
_iSystemID$ = -104					; size = 4
_vFromShipLoc$ = -100					; size = 12
_pPD$ = -88						; size = 4
_mFromShipDir$ = -84					; size = 36
_wscSender$ = -48					; size = 28
__$ArrayPad$ = -20					; size = 4
_iFromShip$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iFromClientID$ = 8					; size = 4
_wscText$ = 12						; size = 4
?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; SendLocalSystemChat
; Line 703
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 704
	mov	eax, DWORD PTR _iFromClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR _wscSender$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 708
	lea	ecx, DWORD PTR _iSystemID$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iFromClientID$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 711
	lea	eax, DWORD PTR _iFromShip$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iFromClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetShip@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 715
	lea	edx, DWORD PTR _mFromShipDir$[ebp]
	push	edx
	lea	eax, DWORD PTR _vFromShipLoc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iFromShip$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetLocation@SpaceObj@pub@@YAHIAAVVector@@AAVMatrix@@@Z
	add	esp, 12					; 0000000cH
; Line 718
	mov	DWORD PTR _pPD$[ebp], 0
$LN10@SendLocalS:
; Line 719
	mov	edx, DWORD PTR _pPD$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?traverse_active@PlayerDB@@QBEPAUPlayerData@@PAU2@@Z
	mov	DWORD PTR _pPD$[ebp], eax
	cmp	DWORD PTR _pPD$[ebp], 0
	je	$LN3@SendLocalS
; Line 722
	mov	eax, DWORD PTR _pPD$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetClientIdFromPD@@YAIPAUPlayerData@@@Z
	add	esp, 4
	mov	DWORD PTR _iClientID$143932[ebp], eax
; Line 723
	mov	DWORD PTR _iClientSystemID$143933[ebp], 0
; Line 724
	lea	ecx, DWORD PTR _iClientSystemID$143933[ebp]
	push	ecx
	lea	edx, DWORD PTR _iClientID$143932[ebp]
	push	edx
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 725
	mov	eax, DWORD PTR _iSystemID$[ebp]
	cmp	eax, DWORD PTR _iClientSystemID$143933[ebp]
	je	SHORT $LN2@SendLocalS
; Line 726
	jmp	SHORT $LN10@SendLocalS
$LN2@SendLocalS:
; Line 729
	lea	ecx, DWORD PTR _iShip$143935[ebp]
	push	ecx
	lea	edx, DWORD PTR _iClientID$143932[ebp]
	push	edx
	call	DWORD PTR __imp_?GetShip@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 733
	lea	eax, DWORD PTR _mShipDir$143937[ebp]
	push	eax
	lea	ecx, DWORD PTR _vShipLoc$143936[ebp]
	push	ecx
	mov	edx, DWORD PTR _iShip$143935[ebp]
	push	edx
	call	DWORD PTR __imp_?GetLocation@SpaceObj@pub@@YAHIAAVVector@@AAVMatrix@@@Z
	add	esp, 12					; 0000000cH
; Line 736
	push	2
	fld	DWORD PTR _vShipLoc$143936[ebp]
	fsub	DWORD PTR _vFromShipLoc$[ebp]
	fstp	DWORD PTR tv175[ebp]
	fld	DWORD PTR tv175[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?pow@@YAMMH@Z				; pow
	add	esp, 8
	push	2
	fld	DWORD PTR _vShipLoc$143936[ebp+8]
	fsub	DWORD PTR _vFromShipLoc$[ebp+8]
	fstp	DWORD PTR tv180[ebp]
	fld	DWORD PTR tv180[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	fstp	QWORD PTR tv199[ebp]
	call	?pow@@YAMMH@Z				; pow
	add	esp, 8
	fadd	QWORD PTR tv199[ebp]
	fstp	DWORD PTR tv187[ebp]
	fld	DWORD PTR tv187[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fstp	DWORD PTR _fDistance$143938[ebp]
; Line 739
	fld	DWORD PTR _fDistance$143938[ebp]
	fcomp	QWORD PTR __real@40cd4b8000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN1@SendLocalS
; Line 740
	jmp	$LN10@SendLocalS
$LN1@SendLocalS:
; Line 743
	push	OFFSET $SG143941
	lea	ecx, DWORD PTR $T154328[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	eax, DWORD PTR $T154328[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscText$[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscSender$[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$143932[ebp]
	push	eax
	call	?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z ; FormatSendChat
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T154328[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 744
	jmp	$LN10@SendLocalS
$LN3@SendLocalS:
; Line 745
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscSender$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _wscSender$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T154328[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendLocalSystemChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; SendLocalSystemChat
PUBLIC	??$_Pow_int@M@@YAMMH@Z				; _Pow_int<float>
; Function compile flags: /Odtp
;	COMDAT ?pow@@YAMMH@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
?pow@@YAMMH@Z PROC					; pow, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\math.h
; Line 528
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Y$[ebp]
	push	eax
	push	ecx
	fld	DWORD PTR __X$[ebp]
	fstp	DWORD PTR [esp]
	call	??$_Pow_int@M@@YAMMH@Z			; _Pow_int<float>
	add	esp, 8
	pop	ebp
	ret	0
?pow@@YAMMH@Z ENDP					; pow
_TEXT	ENDS
PUBLIC	?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; SendGroupChat
xdata$x	SEGMENT
__unwindtable$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3
__ehfuncinfo$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154346 = -152						; size = 28
$T154345 = -124						; size = 28
$T154344 = -96						; size = 8
$T154343 = -88						; size = 8
$T154342 = -80						; size = 28
_g$143958 = -52						; size = 8
_lstMembers$ = -44					; size = 28
_wscSender$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iFromClientID$ = 8					; size = 4
_wscText$ = 12						; size = 4
?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; SendGroupChat
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\pluginutilities.cpp
; Line 749
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 750
	mov	eax, DWORD PTR _iFromClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	mov	DWORD PTR _wscSender$[ebp], eax
; Line 752
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	call	??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 753
	mov	ecx, DWORD PTR _wscSender$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T154342[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	edx, DWORD PTR _lstMembers$[ebp]
	push	edx
	lea	eax, DWORD PTR $T154342[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetGroupMembers@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@3@@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T154342[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 754
	lea	ecx, DWORD PTR _g$143958[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	call	?begin@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::begin
	jmp	SHORT $LN3@SendGroupC
$LN2@SendGroupC:
	push	0
	lea	edx, DWORD PTR $T154343[ebp]
	push	edx
	lea	ecx, DWORD PTR _g$143958[ebp]
	call	??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV012@H@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator++
$LN3@SendGroupC:
	lea	eax, DWORD PTR $T154344[ebp]
	push	eax
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	call	?end@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::end
	push	eax
	lea	ecx, DWORD PTR _g$143958[ebp]
	call	??9?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@SendGroupC
; Line 756
	push	OFFSET $SG143967
	lea	ecx, DWORD PTR $T154345[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _wscSender$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T154346[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	eax, DWORD PTR $T154345[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscText$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T154346[ebp]
	push	edx
	lea	ecx, DWORD PTR _g$143958[ebp]
	call	??C?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEPAUGROUP_MEMBER@@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator->
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?FormatSendChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@00@Z ; FormatSendChat
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T154346[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T154345[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 757
	jmp	$LN2@SendGroupC
$LN1@SendGroupC:
; Line 758
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	call	??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
	lea	ecx, DWORD PTR _lstMembers$[ebp]
	jmp	??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
__unwindfunclet$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T154342[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T154345[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T154346[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-144]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendGroupChat@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; SendGroupChat
PUBLIC	??$_snwprintf_s@$0GE@@@YAHAAY0GE@GIPBGZZ	; _snwprintf_s<100>
PUBLIC	__$ArrayPad$
PUBLIC	?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z ; GetTimeString
EXTRN	__imp__GetSystemTime@4:PROC
EXTRN	__imp__GetLocalTime@4:PROC
xdata$x	SEGMENT
__unwindtable$?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z$0
__ehfuncinfo$?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154358 = -240						; size = 4
_st$ = -236						; size = 16
_wszBuf$ = -220						; size = 200
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_bLocalTime$ = 12					; size = 1
?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z PROC ; GetTimeString
; Line 761
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154358[ebp], 0
; Line 763
	movzx	eax, BYTE PTR _bLocalTime$[ebp]
	test	eax, eax
	je	SHORT $LN2@GetTimeStr
; Line 764
	lea	ecx, DWORD PTR _st$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetLocalTime@4
; Line 765
	jmp	SHORT $LN1@GetTimeStr
$LN2@GetTimeStr:
; Line 766
	lea	edx, DWORD PTR _st$[ebp]
	push	edx
	call	DWORD PTR __imp__GetSystemTime@4
$LN1@GetTimeStr:
; Line 770
	movzx	eax, WORD PTR _st$[ebp+12]
	push	eax
	movzx	ecx, WORD PTR _st$[ebp+10]
	push	ecx
	movzx	edx, WORD PTR _st$[ebp+8]
	push	edx
	movzx	eax, WORD PTR _st$[ebp+6]
	push	eax
	movzx	ecx, WORD PTR _st$[ebp+2]
	push	ecx
	movzx	edx, WORD PTR _st$[ebp]
	push	edx
	push	OFFSET $SG143982
	push	200					; 000000c8H
	lea	eax, DWORD PTR _wszBuf$[ebp]
	push	eax
	call	??$_snwprintf_s@$0GE@@@YAHAAY0GE@GIPBGZZ ; _snwprintf_s<100>
	add	esp, 36					; 00000024H
; Line 771
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T154358[ebp]
	or	edx, 1
	mov	DWORD PTR $T154358[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 772
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z$0:
	mov	eax, DWORD PTR $T154358[ebp]
	and	eax, 1
	je	$LN6@GetTimeStr
	and	DWORD PTR $T154358[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN6@GetTimeStr:
	ret	0
__ehhandler$?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetTimeString@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@_N@Z ENDP ; GetTimeString
PUBLIC	__real@3f800000
PUBLIC	?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ; HkAddEquip
EXTRN	__imp_?add_equipment_item@EquipDescList@@QAEHABUEquipDesc@@_N@Z:PROC
EXTRN	__imp_??0EquipDesc@@QAE@XZ:PROC
EXTRN	__imp_?ReqAddItem@IServerImpl@@UAEXIPBDHM_NI@Z:PROC
EXTRN	__imp_?ConPrint@@YAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ:PROC
EXTRN	__imp_??APlayerDB@@QAEAAUPlayerData@@ABI@Z:PROC
EXTRN	__imp_?HkIsInCharSelectMenu@@YA_NI@Z:PROC
EXTRN	__imp_?HkGetClientIdFromCharname@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC
EXTRN	__imp_?HkResolveShortCut@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAI@Z:PROC
EXTRN	__imp_?HkResolveId@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAI@Z:PROC
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$0
__ehfuncinfo$?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv189 = -68						; size = 4
tv190 = -64						; size = 4
$T154365 = -60						; size = 4
_hkErr$143992 = -56					; size = 4
_iClientID$ = -52					; size = 4
_bIdString$ = -45					; size = 1
_ed$ = -44						; size = 32
__$EHRec$ = -12						; size = 12
_wscCharname$ = 8					; size = 4
_iGoodID$ = 12						; size = 4
_scHardpoint$ = 16					; size = 4
?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z PROC ; HkAddEquip
; Line 778
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 779
	mov	BYTE PTR _bIdString$[ebp], 0
	push	0
	push	OFFSET $SG143990
	mov	ecx, DWORD PTR _wscCharname$[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	test	eax, eax
	jne	SHORT $LN12@HkAddEquip
	mov	BYTE PTR _bIdString$[ebp], 1
$LN12@HkAddEquip:
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscCharname$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkResolveId@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAI@Z
	add	esp, 8
	mov	DWORD PTR _hkErr$143992[ebp], eax
	cmp	DWORD PTR _hkErr$143992[ebp], 0
	je	SHORT $LN5@HkAddEquip
	cmp	DWORD PTR _hkErr$143992[ebp], 7
	jne	SHORT $LN10@HkAddEquip
	lea	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _wscCharname$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkResolveShortCut@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAI@Z
	add	esp, 8
	mov	DWORD PTR _hkErr$143992[ebp], eax
	cmp	DWORD PTR _hkErr$143992[ebp], 17	; 00000011H
	je	SHORT $LN8@HkAddEquip
	cmp	DWORD PTR _hkErr$143992[ebp], 18	; 00000012H
	jne	SHORT $LN9@HkAddEquip
$LN8@HkAddEquip:
	mov	eax, DWORD PTR _hkErr$143992[ebp]
	jmp	$LN13@HkAddEquip
	jmp	SHORT $LN6@HkAddEquip
$LN9@HkAddEquip:
	cmp	DWORD PTR _hkErr$143992[ebp], 19	; 00000013H
	jne	SHORT $LN6@HkAddEquip
	mov	ecx, DWORD PTR _wscCharname$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkGetClientIdFromCharname@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iClientID$[ebp], eax
$LN6@HkAddEquip:
	jmp	SHORT $LN5@HkAddEquip
$LN10@HkAddEquip:
	mov	eax, DWORD PTR _hkErr$143992[ebp]
	jmp	$LN13@HkAddEquip
$LN5@HkAddEquip:
; Line 781
	cmp	DWORD PTR _iClientID$[ebp], -1
	je	SHORT $LN3@HkAddEquip
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkIsInCharSelectMenu@@YA_NI@Z
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@HkAddEquip
$LN3@HkAddEquip:
; Line 782
	mov	eax, 13					; 0000000dH
	jmp	$LN13@HkAddEquip
$LN4@HkAddEquip:
; Line 784
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_??APlayerDB@@QAEAAUPlayerData@@ABI@Z
	cmp	DWORD PTR [eax+1012], 0
	jne	$LN2@HkAddEquip
; Line 786
	lea	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_??APlayerDB@@QAEAAUPlayerData@@ABI@Z
	mov	eax, DWORD PTR [eax+1016]
	push	eax
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_??APlayerDB@@QAEAAUPlayerData@@ABI@Z
	mov	edx, DWORD PTR [eax+1012]
	push	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T154365[ebp], esp
	push	OFFSET $SG144004
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv190[ebp], eax
	mov	eax, DWORD PTR tv190[ebp]
	mov	DWORD PTR tv189[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?ConPrint@@YAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 36					; 00000024H
; Line 787
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_??APlayerDB@@QAEAAUPlayerData@@ABI@Z
	mov	DWORD PTR [eax+1012], 1
; Line 788
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	push	1
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	1
	mov	ecx, DWORD PTR _scHardpoint$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _iGoodID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp__Server
	call	DWORD PTR __imp_?ReqAddItem@IServerImpl@@UAEXIPBDHM_NI@Z
; Line 789
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_??APlayerDB@@QAEAAUPlayerData@@ABI@Z
	mov	DWORD PTR [eax+1012], 0
; Line 791
	jmp	SHORT $LN1@HkAddEquip
$LN2@HkAddEquip:
; Line 793
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	push	1
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	push	1
	mov	ecx, DWORD PTR _scHardpoint$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _iGoodID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp__Server
	call	DWORD PTR __imp_?ReqAddItem@IServerImpl@@UAEXIPBDHM_NI@Z
$LN1@HkAddEquip:
; Line 798
	lea	ecx, DWORD PTR _ed$[ebp]
	call	DWORD PTR __imp_??0EquipDesc@@QAE@XZ
; Line 799
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_??APlayerDB@@QAEAAUPlayerData@@ABI@Z
	mov	dx, WORD PTR [eax+968]
	mov	WORD PTR _ed$[ebp+2], dx
; Line 800
	mov	DWORD PTR _ed$[ebp+20], 1
; Line 801
	mov	eax, DWORD PTR _iGoodID$[ebp]
	mov	DWORD PTR _ed$[ebp+4], eax
; Line 802
	push	0
	lea	ecx, DWORD PTR _ed$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_??APlayerDB@@QAEAAUPlayerData@@ABI@Z
	add	eax, 808				; 00000328H
	mov	ecx, eax
	call	DWORD PTR __imp_?add_equipment_item@EquipDescList@@QAEHABUEquipDesc@@_N@Z
; Line 804
	xor	eax, eax
$LN13@HkAddEquip:
; Line 805
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$0:
	mov	ecx, DWORD PTR $T154365[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkAddEquip@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z ENDP ; HkAddEquip
PUBLIC	__real@4014000000000000
PUBLIC	__real@40e09a0000000000
PUBLIC	__$ArrayPad$
PUBLIC	?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z ; VectorToSectorCoord
EXTRN	__imp___snwprintf:PROC
EXTRN	__imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z:PROC
EXTRN	__imp_?get_system@Universe@@YAPBUISystem@1@I@Z:PROC
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@40e09a0000000000
CONST	SEGMENT
__real@40e09a0000000000 DQ 040e09a0000000000r	; 34000
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z$1
__ehfuncinfo$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154378 = -360						; size = 4
_gridZLabel$144035 = -356				; size = 32
_gridXLabel$144023 = -324				; size = 32
_wszCurrentLocation$ = -292				; size = 200
_gridRefZ$ = -92					; size = 4
_wscXPos$ = -88						; size = 28
_wscZPos$ = -60						; size = 28
__$ArrayPad$ = -32					; size = 4
_scale$ = -28						; size = 4
_iSystem$ = -24						; size = 4
_fGridsize$ = -20					; size = 4
_gridRefX$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_iSystemID$ = 12					; size = 4
_vPos$ = 16						; size = 12
?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z PROC ; VectorToSectorCoord
; Line 808
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 348				; 0000015cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154378[ebp], 0
; Line 809
	fld1
	fstp	DWORD PTR _scale$[ebp]
; Line 810
	mov	eax, DWORD PTR _iSystemID$[ebp]
	push	eax
	call	DWORD PTR __imp_?get_system@Universe@@YAPBUISystem@1@I@Z
	add	esp, 4
	mov	DWORD PTR _iSystem$[ebp], eax
; Line 811
	cmp	DWORD PTR _iSystem$[ebp], 0
	je	SHORT $LN3@VectorToSe
; Line 812
	mov	ecx, DWORD PTR _iSystem$[ebp]
	fld	DWORD PTR [ecx+144]
	fstp	DWORD PTR _scale$[ebp]
$LN3@VectorToSe:
; Line 814
	fld	DWORD PTR _scale$[ebp]
	fdivr	QWORD PTR __real@40e09a0000000000
	fstp	DWORD PTR _fGridsize$[ebp]
; Line 815
	fld	DWORD PTR _fGridsize$[ebp]
	fmul	QWORD PTR __real@4014000000000000
	fadd	DWORD PTR _vPos$[ebp]
	fdiv	DWORD PTR _fGridsize$[ebp]
	call	__ftol2_sse
	sub	eax, 1
	mov	DWORD PTR _gridRefX$[ebp], eax
; Line 816
	fld	DWORD PTR _fGridsize$[ebp]
	fmul	QWORD PTR __real@4014000000000000
	fadd	DWORD PTR _vPos$[ebp+8]
	fdiv	DWORD PTR _fGridsize$[ebp]
	call	__ftol2_sse
	sub	eax, 1
	mov	DWORD PTR _gridRefZ$[ebp], eax
; Line 818
	push	OFFSET $SG144021
	lea	ecx, DWORD PTR _wscXPos$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 819
	cmp	DWORD PTR _gridRefX$[ebp], 0
	jl	SHORT $LN2@VectorToSe
	cmp	DWORD PTR _gridRefX$[ebp], 8
	jge	SHORT $LN2@VectorToSe
; Line 821
	mov	DWORD PTR _gridXLabel$144023[ebp], OFFSET $SG144024
	mov	DWORD PTR _gridXLabel$144023[ebp+4], OFFSET $SG144025
	mov	DWORD PTR _gridXLabel$144023[ebp+8], OFFSET $SG144026
	mov	DWORD PTR _gridXLabel$144023[ebp+12], OFFSET $SG144027
	mov	DWORD PTR _gridXLabel$144023[ebp+16], OFFSET $SG144028
	mov	DWORD PTR _gridXLabel$144023[ebp+20], OFFSET $SG144029
	mov	DWORD PTR _gridXLabel$144023[ebp+24], OFFSET $SG144030
	mov	DWORD PTR _gridXLabel$144023[ebp+28], OFFSET $SG144031
; Line 822
	mov	edx, DWORD PTR _gridRefX$[ebp]
	mov	eax, DWORD PTR _gridXLabel$144023[ebp+edx*4]
	push	eax
	lea	ecx, DWORD PTR _wscXPos$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z
$LN2@VectorToSe:
; Line 825
	push	OFFSET $SG144033
	lea	ecx, DWORD PTR _wscZPos$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 826
	cmp	DWORD PTR _gridRefZ$[ebp], 0
	jl	SHORT $LN1@VectorToSe
	cmp	DWORD PTR _gridRefZ$[ebp], 8
	jge	SHORT $LN1@VectorToSe
; Line 828
	mov	DWORD PTR _gridZLabel$144035[ebp], OFFSET $SG144036
	mov	DWORD PTR _gridZLabel$144035[ebp+4], OFFSET $SG144037
	mov	DWORD PTR _gridZLabel$144035[ebp+8], OFFSET $SG144038
	mov	DWORD PTR _gridZLabel$144035[ebp+12], OFFSET $SG144039
	mov	DWORD PTR _gridZLabel$144035[ebp+16], OFFSET $SG144040
	mov	DWORD PTR _gridZLabel$144035[ebp+20], OFFSET $SG144041
	mov	DWORD PTR _gridZLabel$144035[ebp+24], OFFSET $SG144042
	mov	DWORD PTR _gridZLabel$144035[ebp+28], OFFSET $SG144043
; Line 829
	mov	ecx, DWORD PTR _gridRefZ$[ebp]
	mov	edx, DWORD PTR _gridZLabel$144035[ebp+ecx*4]
	push	edx
	lea	ecx, DWORD PTR _wscZPos$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z
$LN1@VectorToSe:
; Line 833
	lea	ecx, DWORD PTR _wscZPos$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	lea	ecx, DWORD PTR _wscXPos$[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ
	push	eax
	push	OFFSET $SG144045
	push	200					; 000000c8H
	lea	eax, DWORD PTR _wszCurrentLocation$[ebp]
	push	eax
	call	DWORD PTR __imp___snwprintf
	add	esp, 20					; 00000014H
; Line 834
	lea	ecx, DWORD PTR _wszCurrentLocation$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	edx, DWORD PTR $T154378[ebp]
	or	edx, 1
	mov	DWORD PTR $T154378[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _wscZPos$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscXPos$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 835
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z$0:
	lea	ecx, DWORD PTR _wscXPos$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z$1:
	lea	ecx, DWORD PTR _wscZPos$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z$2:
	mov	eax, DWORD PTR $T154378[ebp]
	and	eax, 1
	je	$LN9@VectorToSe
	and	DWORD PTR $T154378[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN9@VectorToSe:
	ret	0
__ehhandler$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z ENDP ; VectorToSectorCoord
PUBLIC	?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z ; GetLocation
xdata$x	SEGMENT
__unwindtable$?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z$0
__ehfuncinfo$?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv130 = -84						; size = 4
tv136 = -80						; size = 4
$T154392 = -76						; size = 4
$T154389 = -72						; size = 4
_pos$ = -68						; size = 12
_iSystemID$ = -56					; size = 4
_rot$ = -52						; size = 36
_iShip$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_iClientID$ = 12					; size = 4
?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z PROC ; GetLocation
; Line 838
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154392[ebp], 0
; Line 839
	mov	DWORD PTR _iSystemID$[ebp], 0
; Line 840
	mov	DWORD PTR _iShip$[ebp], 0
; Line 841
	lea	eax, DWORD PTR _iSystemID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetSystem@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 842
	lea	edx, DWORD PTR _iShip$[ebp]
	push	edx
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetShip@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 843
	cmp	DWORD PTR _iSystemID$[ebp], 0
	je	SHORT $LN1@GetLocatio
	cmp	DWORD PTR _iShip$[ebp], 0
	jne	SHORT $LN2@GetLocatio
$LN1@GetLocatio:
; Line 845
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T154389[ebp], esp
	push	OFFSET $SG144055
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv136[ebp], eax
	mov	ecx, DWORD PTR tv136[ebp]
	mov	DWORD PTR tv130[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 846
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T154392[ebp]
	or	eax, 1
	mov	DWORD PTR $T154392[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@GetLocatio
$LN2@GetLocatio:
; Line 851
	lea	ecx, DWORD PTR _rot$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pos$[ebp]
	push	edx
	mov	eax, DWORD PTR _iShip$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetLocation@SpaceObj@pub@@YAHIAAVVector@@AAVMatrix@@@Z
; Line 853
	mov	ecx, esp
	mov	edx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _pos$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _pos$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _iSystemID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	call	?VectorToSectorCoord@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IVVector@@@Z ; VectorToSectorCoord
	add	esp, 20					; 00000014H
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T154392[ebp]
	or	edx, 1
	mov	DWORD PTR $T154392[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@GetLocatio:
; Line 854
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z$0:
	mov	ecx, DWORD PTR $T154389[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z$1:
	mov	eax, DWORD PTR $T154392[ebp]
	and	eax, 1
	je	$LN7@GetLocatio
	and	DWORD PTR $T154392[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN7@GetLocatio:
	ret	0
__ehhandler$?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetLocation@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z ENDP ; GetLocation
PUBLIC	?HkGetClientIDFromArg@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; HkGetClientIDFromArg
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = -4					; size = 4
_wscArg$ = 8						; size = 4
?HkGetClientIDFromArg@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; HkGetClientIDFromArg
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 860
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscArg$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkResolveId@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAI@Z
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@HkGetClien
; Line 861
	mov	eax, DWORD PTR _iClientID$[ebp]
	jmp	SHORT $LN3@HkGetClien
$LN2@HkGetClien:
; Line 863
	lea	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _wscArg$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkResolveShortCut@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAI@Z
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@HkGetClien
; Line 864
	mov	eax, DWORD PTR _iClientID$[ebp]
	jmp	SHORT $LN3@HkGetClien
$LN1@HkGetClien:
; Line 866
	mov	ecx, DWORD PTR _wscArg$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkGetClientIdFromCharname@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
$LN3@HkGetClien:
; Line 867
	mov	esp, ebp
	pop	ebp
	ret	0
?HkGetClientIDFromArg@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; HkGetClientIDFromArg
_TEXT	ENDS
PUBLIC	?HkGetEqObjFromObjRW@@YGPAUCEqObj@@PAUIObjRW@@@Z ; HkGetEqObjFromObjRW
; Function compile flags: /Odtp
_TEXT	SEGMENT
_objRW$ = 8						; size = 4
?HkGetEqObjFromObjRW@@YGPAUCEqObj@@PAUIObjRW@@@Z PROC	; HkGetEqObjFromObjRW
; Line 875
	push	ecx
; Line 876
	push	edx
; Line 877
	mov	ecx, DWORD PTR [esp+12]
; Line 878
	mov	edx, DWORD PTR [ecx]
; Line 879
	call	DWORD PTR [edx+336]
; Line 880
	pop	edx
; Line 881
	pop	ecx
; Line 882
	ret	4
?HkGetEqObjFromObjRW@@YGPAUCEqObj@@PAUIObjRW@@@Z ENDP	; HkGetEqObjFromObjRW
_TEXT	ENDS
PUBLIC	?HkLightFuse@@YGXPAUIObjRW@@IMMM@Z		; HkLightFuse
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ship$ = 8						; size = 4
_iFuseID$ = 12						; size = 4
_fDelay$ = 16						; size = 4
_fLifetime$ = 20					; size = 4
_fSkip$ = 24						; size = 4
?HkLightFuse@@YGXPAUIObjRW@@IMMM@Z PROC			; HkLightFuse
; Line 890
	lea	eax, DWORD PTR [esp+8]
; Line 891
	push	DWORD PTR [esp+20]
; Line 892
	push	DWORD PTR [esp+16]
; Line 893
	push	0
; Line 894
	push	eax
; Line 895
	push	DWORD PTR [esp+32]
; Line 896
	mov	ecx, DWORD PTR [esp+24]
; Line 897
	mov	eax, DWORD PTR [ecx]
; Line 898
	call	DWORD PTR [eax+484]
; Line 899
	ret	20					; 00000014H
?HkLightFuse@@YGXPAUIObjRW@@IMMM@Z ENDP			; HkLightFuse
_TEXT	ENDS
PUBLIC	?HkUnLightFuse@@YGXPAUIObjRW@@IM@Z		; HkUnLightFuse
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ship$ = 8						; size = 4
_iFuseID$ = 12						; size = 4
_fDunno$ = 16						; size = 4
?HkUnLightFuse@@YGXPAUIObjRW@@IM@Z PROC			; HkUnLightFuse
; Line 907
	mov	ecx, DWORD PTR [esp+4]
; Line 908
	lea	eax, DWORD PTR [esp+8]
; Line 909
	push	DWORD PTR [esp+12]
; Line 910
	push	0
; Line 911
	push	eax
; Line 912
	mov	eax, DWORD PTR [ecx]
; Line 913
	call	DWORD PTR [eax+488]
; Line 914
	ret	12					; 0000000cH
?HkUnLightFuse@@YGXPAUIObjRW@@IM@Z ENDP			; HkUnLightFuse
_TEXT	ENDS
PUBLIC	?push_back@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXABQAUHINSTANCE__@@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::push_back
PUBLIC	?HkUnloadStringDLLs@@YAXXZ			; HkUnloadStringDLLs
PUBLIC	__$ArrayPad$
PUBLIC	?HkLoadStringDLLs@@YAXXZ			; HkLoadStringDLLs
EXTRN	__imp_?get_value_string@INI_Reader@@QAEPBDI@Z:PROC
EXTRN	__imp__LoadLibraryExA@12:PROC
xdata$x	SEGMENT
__unwindtable$?HkLoadStringDLLs@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkLoadStringDLLs@@YAXXZ$0
__ehfuncinfo$?HkLoadStringDLLs@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HkLoadStringDLLs@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
_ini$ = -5500						; size = 5480
__$ArrayPad$ = -20					; size = 4
_hDLL$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?HkLoadStringDLLs@@YAXXZ PROC				; HkLoadStringDLLs
; Line 922
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkLoadStringDLLs@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 5488				; 00001570H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 923
	call	?HkUnloadStringDLLs@@YAXXZ		; HkUnloadStringDLLs
; Line 925
	push	2
	push	0
	push	OFFSET $SG144427
	call	DWORD PTR __imp__LoadLibraryExA@12
	mov	DWORD PTR _hDLL$[ebp], eax
; Line 926
	cmp	DWORD PTR _hDLL$[ebp], 0
	je	SHORT $LN9@HkLoadStri
; Line 927
	lea	eax, DWORD PTR _hDLL$[ebp]
	push	eax
	mov	ecx, OFFSET ?vDLLs@@3V?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@A ; vDLLs
	call	?push_back@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXABQAUHINSTANCE__@@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::push_back
$LN9@HkLoadStri:
; Line 929
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_??0INI_Reader@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 930
	push	0
	push	OFFSET $SG144431
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?open@INI_Reader@@QAE_NPBD_N@Z
	movzx	ecx, al
	test	ecx, ecx
	je	$LN8@HkLoadStri
$LN7@HkLoadStri:
; Line 932
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?read_header@INI_Reader@@QAE_NXZ
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@HkLoadStri
; Line 934
	push	OFFSET $SG144436
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_header@INI_Reader@@QAE_NPBD@Z
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@HkLoadStri
$LN4@HkLoadStri:
; Line 936
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?read_value@INI_Reader@@QAE_NXZ
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@HkLoadStri
; Line 938
	push	OFFSET $SG144441
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?is_value@INI_Reader@@QAE_NPBD@Z
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@HkLoadStri
; Line 940
	push	2
	push	0
	push	0
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?get_value_string@INI_Reader@@QAEPBDI@Z
	push	eax
	call	DWORD PTR __imp__LoadLibraryExA@12
	mov	DWORD PTR _hDLL$[ebp], eax
; Line 941
	cmp	DWORD PTR _hDLL$[ebp], 0
	je	SHORT $LN2@HkLoadStri
; Line 942
	lea	eax, DWORD PTR _hDLL$[ebp]
	push	eax
	mov	ecx, OFFSET ?vDLLs@@3V?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@A ; vDLLs
	call	?push_back@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXABQAUHINSTANCE__@@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::push_back
$LN2@HkLoadStri:
; Line 944
	jmp	SHORT $LN4@HkLoadStri
$LN5@HkLoadStri:
; Line 946
	jmp	$LN7@HkLoadStri
$LN6@HkLoadStri:
; Line 947
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_?close@INI_Reader@@QAEXXZ
$LN8@HkLoadStri:
; Line 949
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _ini$[ebp]
	call	DWORD PTR __imp_??1INI_Reader@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkLoadStringDLLs@@YAXXZ$0:
	lea	ecx, DWORD PTR _ini$[ebp]
	jmp	DWORD PTR __imp_??1INI_Reader@@QAE@XZ
__ehhandler$?HkLoadStringDLLs@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-5492]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkLoadStringDLLs@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkLoadStringDLLs@@YAXXZ ENDP				; HkLoadStringDLLs
PUBLIC	?clear@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::clear
PUBLIC	??A?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAPAUHINSTANCE__@@I@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator[]
PUBLIC	?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
EXTRN	__imp__FreeLibrary@4:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$144445 = -4						; size = 4
?HkUnloadStringDLLs@@YAXXZ PROC				; HkUnloadStringDLLs
; Line 952
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 953
	mov	DWORD PTR _i$144445[ebp], 0
	jmp	SHORT $LN3@HkUnloadSt
$LN2@HkUnloadSt:
	mov	eax, DWORD PTR _i$144445[ebp]
	add	eax, 1
	mov	DWORD PTR _i$144445[ebp], eax
$LN3@HkUnloadSt:
	mov	ecx, OFFSET ?vDLLs@@3V?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@A ; vDLLs
	call	?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
	cmp	DWORD PTR _i$144445[ebp], eax
	jae	SHORT $LN1@HkUnloadSt
; Line 954
	mov	ecx, DWORD PTR _i$144445[ebp]
	push	ecx
	mov	ecx, OFFSET ?vDLLs@@3V?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@A ; vDLLs
	call	??A?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAPAUHINSTANCE__@@I@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator[]
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp__FreeLibrary@4
	jmp	SHORT $LN2@HkUnloadSt
$LN1@HkUnloadSt:
; Line 955
	mov	ecx, OFFSET ?vDLLs@@3V?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@A ; vDLLs
	call	?clear@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::clear
; Line 956
	mov	esp, ebp
	pop	ebp
	ret	0
?HkUnloadStringDLLs@@YAXXZ ENDP				; HkUnloadStringDLLs
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z ; HkGetWStringFromIDS
EXTRN	__imp__LoadStringW@16:PROC
xdata$x	SEGMENT
__unwindtable$?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z$0
__ehfuncinfo$?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154413 = -2072					; size = 4
_wszBuf$ = -2068					; size = 2048
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_iIDS$ = 12						; size = 4
?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z PROC ; HkGetWStringFromIDS
; Line 959
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2060				; 0000080cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154413[ebp], 0
; Line 961
	push	1024					; 00000400H
	lea	eax, DWORD PTR _wszBuf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iIDS$[ebp]
	and	ecx, 65535				; 0000ffffH
	push	ecx
	mov	edx, DWORD PTR _iIDS$[ebp]
	shr	edx, 16					; 00000010H
	push	edx
	mov	ecx, OFFSET ?vDLLs@@3V?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@A ; vDLLs
	call	??A?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAPAUHINSTANCE__@@I@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator[]
	mov	eax, DWORD PTR [eax]
	push	eax
	call	DWORD PTR __imp__LoadStringW@16
	test	eax, eax
	je	SHORT $LN1@HkGetWStri
; Line 962
	lea	ecx, DWORD PTR _wszBuf$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T154413[ebp]
	or	edx, 1
	mov	DWORD PTR $T154413[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN2@HkGetWStri
$LN1@HkGetWStri:
; Line 963
	push	OFFSET $SG144455
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T154413[ebp]
	or	eax, 1
	mov	DWORD PTR $T154413[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@HkGetWStri:
; Line 964
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z$0:
	mov	eax, DWORD PTR $T154413[ebp]
	and	eax, 1
	je	$LN5@HkGetWStri
	and	DWORD PTR $T154413[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN5@HkGetWStri:
	ret	0
__ehhandler$?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2064]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkGetWStringFromIDS@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z ENDP ; HkGetWStringFromIDS
PUBLIC	?GetModuleAddr@@YAPAUHINSTANCE__@@I@Z		; GetModuleAddr
EXTRN	_GetModuleInformation@16:PROC
EXTRN	_EnumProcessModules@16:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_mi$144469 = -4120					; size = 12
_i$144465 = -4108					; size = 4
_hModArr$ = -4104					; size = 4096
_hProcess$ = -8						; size = 4
_iArrSizeNeeded$ = -4					; size = 4
_iAddr$ = 8						; size = 4
?GetModuleAddr@@YAPAUHINSTANCE__@@I@Z PROC		; GetModuleAddr
; Line 970
	push	ebp
	mov	ebp, esp
	mov	eax, 4120				; 00001018H
	call	__chkstk
; Line 973
	call	DWORD PTR __imp__GetCurrentProcess@0
	mov	DWORD PTR _hProcess$[ebp], eax
; Line 974
	lea	eax, DWORD PTR _iArrSizeNeeded$[ebp]
	push	eax
	push	4096					; 00001000H
	lea	ecx, DWORD PTR _hModArr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hProcess$[ebp]
	push	edx
	call	_EnumProcessModules@16
	test	eax, eax
	je	$LN7@GetModuleA
; Line 976
	cmp	DWORD PTR _iArrSizeNeeded$[ebp], 4096	; 00001000H
	jbe	SHORT $LN6@GetModuleA
; Line 977
	mov	DWORD PTR _iArrSizeNeeded$[ebp], 4096	; 00001000H
$LN6@GetModuleA:
; Line 978
	mov	eax, DWORD PTR _iArrSizeNeeded$[ebp]
	shr	eax, 2
	mov	DWORD PTR _iArrSizeNeeded$[ebp], eax
; Line 979
	mov	DWORD PTR _i$144465[ebp], 0
	jmp	SHORT $LN5@GetModuleA
$LN4@GetModuleA:
	mov	ecx, DWORD PTR _i$144465[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$144465[ebp], ecx
$LN5@GetModuleA:
	mov	edx, DWORD PTR _i$144465[ebp]
	cmp	edx, DWORD PTR _iArrSizeNeeded$[ebp]
	jae	SHORT $LN7@GetModuleA
; Line 982
	push	12					; 0000000cH
	lea	eax, DWORD PTR _mi$144469[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$144465[ebp]
	mov	edx, DWORD PTR _hModArr$[ebp+ecx*4]
	push	edx
	mov	eax, DWORD PTR _hProcess$[ebp]
	push	eax
	call	_GetModuleInformation@16
	test	eax, eax
	je	SHORT $LN2@GetModuleA
; Line 984
	mov	ecx, DWORD PTR _mi$144469[ebp]
	cmp	ecx, DWORD PTR _iAddr$[ebp]
	jae	SHORT $LN2@GetModuleA
	mov	edx, DWORD PTR _mi$144469[ebp]
	add	edx, DWORD PTR _mi$144469[ebp+4]
	cmp	edx, DWORD PTR _iAddr$[ebp]
	jbe	SHORT $LN2@GetModuleA
; Line 986
	mov	eax, DWORD PTR _i$144465[ebp]
	mov	eax, DWORD PTR _hModArr$[ebp+eax*4]
	jmp	SHORT $LN8@GetModuleA
$LN2@GetModuleA:
; Line 989
	jmp	SHORT $LN4@GetModuleA
$LN7@GetModuleA:
; Line 991
	xor	eax, eax
$LN8@GetModuleA:
; Line 992
	mov	esp, ebp
	pop	ebp
	ret	0
?GetModuleAddr@@YAPAUHINSTANCE__@@I@Z ENDP		; GetModuleAddr
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?WriteMiniDump@@YAXPAU_EXCEPTION_POINTERS@@@Z	; WriteMiniDump
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__imp__strftime:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ExInfo$147479 = -308					; size = 12
_szDumpPath$147471 = -296				; size = 260
__$ArrayPad$ = -28					; size = 4
_tNow$147472 = -24					; size = 8
_t$147473 = -16						; size = 4
_hFile$147475 = -12					; size = 4
_pDump$147467 = -8					; size = 4
_hDll$ = -4						; size = 4
_pExceptionInfo$ = 8					; size = 4
?WriteMiniDump@@YAXPAU_EXCEPTION_POINTERS@@@Z PROC	; WriteMiniDump
; Line 1006
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1007
	push	OFFSET $SG147465
	call	DWORD PTR __imp__LoadLibraryA@4
	mov	DWORD PTR _hDll$[ebp], eax
; Line 1008
	cmp	DWORD PTR _hDll$[ebp], 0
	je	$LN6@WriteMiniD
; Line 1010
	push	OFFSET $SG147469
	mov	eax, DWORD PTR _hDll$[ebp]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _pDump$147467[ebp], eax
; Line 1011
	cmp	DWORD PTR _pDump$147467[ebp], 0
	je	$LN6@WriteMiniD
; Line 1016
	push	0
	call	_time
	add	esp, 4
	mov	DWORD PTR _tNow$147472[ebp], eax
	mov	DWORD PTR _tNow$147472[ebp+4], edx
; Line 1017
	lea	ecx, DWORD PTR _tNow$147472[ebp]
	push	ecx
	call	_localtime
	add	esp, 4
	mov	DWORD PTR _t$147473[ebp], eax
; Line 1018
	mov	edx, DWORD PTR _t$147473[ebp]
	push	edx
	push	OFFSET $SG147474
	push	260					; 00000104H
	lea	eax, DWORD PTR _szDumpPath$147471[ebp]
	push	eax
	call	DWORD PTR __imp__strftime
	add	esp, 16					; 00000010H
; Line 1022
	push	0
	push	128					; 00000080H
	push	2
	push	0
	push	2
	push	1073741824				; 40000000H
	lea	ecx, DWORD PTR _szDumpPath$147471[ebp]
	push	ecx
	call	DWORD PTR __imp__CreateFileA@28
	mov	DWORD PTR _hFile$147475[ebp], eax
; Line 1024
	cmp	DWORD PTR _hFile$147475[ebp], -1
	je	SHORT $LN6@WriteMiniD
; Line 1028
	cmp	DWORD PTR _pExceptionInfo$[ebp], 0
	je	SHORT $LN2@WriteMiniD
; Line 1030
	call	DWORD PTR __imp__GetCurrentThreadId@0
	mov	DWORD PTR _ExInfo$147479[ebp], eax
; Line 1031
	mov	edx, DWORD PTR _pExceptionInfo$[ebp]
	mov	DWORD PTR _ExInfo$147479[ebp+4], edx
; Line 1032
	mov	DWORD PTR _ExInfo$147479[ebp+8], 0
; Line 1033
	push	0
	push	0
	lea	eax, DWORD PTR _ExInfo$147479[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _hFile$147475[ebp]
	push	ecx
	call	DWORD PTR __imp__GetCurrentProcessId@0
	push	eax
	call	DWORD PTR __imp__GetCurrentProcess@0
	push	eax
	call	DWORD PTR _pDump$147467[ebp]
; Line 1035
	jmp	SHORT $LN1@WriteMiniD
$LN2@WriteMiniD:
; Line 1037
	push	0
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _hFile$147475[ebp]
	push	edx
	call	DWORD PTR __imp__GetCurrentProcessId@0
	push	eax
	call	DWORD PTR __imp__GetCurrentProcess@0
	push	eax
	call	DWORD PTR _pDump$147467[ebp]
$LN1@WriteMiniD:
; Line 1039
	mov	eax, DWORD PTR _hFile$147475[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
$LN6@WriteMiniD:
; Line 1043
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?WriteMiniDump@@YAXPAU_EXCEPTION_POINTERS@@@Z ENDP	; WriteMiniDump
_TEXT	ENDS
EXTRN	__imp___localtime64:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\time.inl
; Line 115
	push	ebp
	mov	ebp, esp
; Line 118
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___localtime64
	add	esp, 4
; Line 120
	pop	ebp
	ret	0
_localtime ENDP
_TEXT	ENDS
EXTRN	__imp___time64:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC
; Line 134
	push	ebp
	mov	ebp, esp
; Line 135
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4
; Line 136
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z ; AddExceptionInfoLog
EXTRN	__imp_?AddLog@@YAXPBDZZ:PROC
EXTRN	__imp__GetModuleFileNameA@12:PROC
EXTRN	_memset:PROC
xdata$x	SEGMENT
__catchsym$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z$0
__unwindtable$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z$2
__ehfuncinfo$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
_iOffset$147496 = -312					; size = 4
_iCode$147493 = -308					; size = 4
_iAddr$147494 = -304					; size = 4
_hModExc$147497 = -300					; size = 4
_szModName$147498 = -296				; size = 260
__$ArrayPad$ = -28					; size = 4
_reg$147487 = -24					; size = 4
_exception$147486 = -20					; size = 4
__$EHRec$ = -16						; size = 16
_pep$ = 8						; size = 4
?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z PROC ; AddExceptionInfoLog
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\pluginutilities.cpp
; Line 1046
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 296				; 00000128H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 1048
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1051
	cmp	DWORD PTR _pep$[ebp], 0
	jne	SHORT $LN7@AddExcepti
; Line 1053
	call	?GetCurrentExceptionRecord@@YAPBU_EXCEPTION_RECORD@@XZ ; GetCurrentExceptionRecord
	mov	DWORD PTR _exception$147486[ebp], eax
; Line 1054
	call	?GetCurrentExceptionContext@@YAPBU_CONTEXT@@XZ ; GetCurrentExceptionContext
	mov	DWORD PTR _reg$147487[ebp], eax
; Line 1056
	jmp	SHORT $LN6@AddExcepti
$LN7@AddExcepti:
; Line 1058
	mov	eax, DWORD PTR _pep$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _exception$147486[ebp], ecx
; Line 1059
	mov	edx, DWORD PTR _pep$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _reg$147487[ebp], eax
$LN6@AddExcepti:
; Line 1062
	cmp	DWORD PTR _exception$147486[ebp], 0
	je	$LN5@AddExcepti
; Line 1064
	mov	ecx, DWORD PTR _exception$147486[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _iCode$147493[ebp], edx
; Line 1065
	mov	eax, DWORD PTR _exception$147486[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _iAddr$147494[ebp], ecx
; Line 1066
	mov	DWORD PTR _iOffset$147496[ebp], 0
; Line 1067
	mov	edx, DWORD PTR _iAddr$147494[ebp]
	push	edx
	call	?GetModuleAddr@@YAPAUHINSTANCE__@@I@Z	; GetModuleAddr
	add	esp, 4
	mov	DWORD PTR _hModExc$147497[ebp], eax
; Line 1068
	mov	al, BYTE PTR $SG147499
	mov	BYTE PTR _szModName$147498[ebp], al
	push	259					; 00000103H
	push	0
	lea	ecx, DWORD PTR _szModName$147498[ebp+1]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1069
	cmp	DWORD PTR _hModExc$147497[ebp], 0
	je	SHORT $LN4@AddExcepti
; Line 1071
	mov	edx, DWORD PTR _iAddr$147494[ebp]
	sub	edx, DWORD PTR _hModExc$147497[ebp]
	mov	DWORD PTR _iOffset$147496[ebp], edx
; Line 1072
	push	260					; 00000104H
	lea	eax, DWORD PTR _szModName$147498[ebp]
	push	eax
	mov	ecx, DWORD PTR _hModExc$147497[ebp]
	push	ecx
	call	DWORD PTR __imp__GetModuleFileNameA@12
$LN4@AddExcepti:
; Line 1074
	lea	edx, DWORD PTR _szModName$147498[ebp]
	push	edx
	mov	eax, DWORD PTR _iOffset$147496[ebp]
	push	eax
	mov	ecx, DWORD PTR _iCode$147493[ebp]
	push	ecx
	push	OFFSET $SG147502
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 16					; 00000010H
; Line 1076
	jmp	SHORT $LN3@AddExcepti
$LN5@AddExcepti:
; Line 1078
	push	OFFSET $SG147504
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 4
$LN3@AddExcepti:
; Line 1081
	cmp	DWORD PTR _reg$147487[ebp], 0
	je	SHORT $LN2@AddExcepti
; Line 1084
	mov	edx, DWORD PTR _reg$147487[ebp]
	mov	eax, DWORD PTR [edx+196]
	push	eax
	mov	ecx, DWORD PTR _reg$147487[ebp]
	mov	edx, DWORD PTR [ecx+184]
	push	edx
	mov	eax, DWORD PTR _reg$147487[ebp]
	mov	ecx, DWORD PTR [eax+180]
	push	ecx
	mov	edx, DWORD PTR _reg$147487[ebp]
	mov	eax, DWORD PTR [edx+160]
	push	eax
	mov	ecx, DWORD PTR _reg$147487[ebp]
	mov	edx, DWORD PTR [ecx+156]
	push	edx
	mov	eax, DWORD PTR _reg$147487[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	mov	edx, DWORD PTR _reg$147487[ebp]
	mov	eax, DWORD PTR [edx+172]
	push	eax
	mov	ecx, DWORD PTR _reg$147487[ebp]
	mov	edx, DWORD PTR [ecx+164]
	push	edx
	mov	eax, DWORD PTR _reg$147487[ebp]
	mov	ecx, DWORD PTR [eax+176]
	push	ecx
	push	OFFSET $SG147506
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 40					; 00000028H
; Line 1086
	jmp	SHORT $LN1@AddExcepti
$LN2@AddExcepti:
; Line 1088
	push	OFFSET $SG147508
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 4
$LN1@AddExcepti:
; Line 1091
	mov	edx, DWORD PTR _pep$[ebp]
	push	edx
	call	?WriteMiniDump@@YAXPAU_EXCEPTION_POINTERS@@@Z ; WriteMiniDump
	add	esp, 4
	jmp	SHORT $LN11@AddExcepti
__catch$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z$0:
; Line 1093
	push	OFFSET $SG147509
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@AddExcepti
	ret	0
$LN11@AddExcepti:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@AddExcepti:
; Line 1094
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z ENDP ; AddExceptionInfoLog
PUBLIC	?HkGetAccountByClientID@@YAPAVCAccount@@I@Z	; HkGetAccountByClientID
EXTRN	__imp_?FindAccountFromClientID@PlayerDB@@QAEPAVCAccount@@I@Z:PROC
EXTRN	__imp_?HkIsValidClientID@@YA_NI@Z:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = 8						; size = 4
?HkGetAccountByClientID@@YAPAVCAccount@@I@Z PROC	; HkGetAccountByClientID
; Line 1099
	push	ebp
	mov	ebp, esp
; Line 1100
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkIsValidClientID@@YA_NI@Z
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@HkGetAccou
; Line 1101
	xor	eax, eax
	jmp	SHORT $LN2@HkGetAccou
$LN1@HkGetAccou:
; Line 1103
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?FindAccountFromClientID@PlayerDB@@QAEPAVCAccount@@I@Z
$LN2@HkGetAccou:
; Line 1104
	pop	ebp
	ret	0
?HkGetAccountByClientID@@YAPAVCAccount@@I@Z ENDP	; HkGetAccountByClientID
_TEXT	ENDS
PUBLIC	?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z ; HkGetAccountIDByClientID
xdata$x	SEGMENT
__unwindtable$?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z$0
__ehfuncinfo$?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
$T154441 = -20						; size = 4
_acc$147519 = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_iClientID$ = 12					; size = 4
?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z PROC ; HkGetAccountIDByClientID
; Line 1107
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T154441[ebp], 0
; Line 1108
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkIsValidClientID@@YA_NI@Z
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@HkGetAccou@2
; Line 1110
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	?HkGetAccountByClientID@@YAPAVCAccount@@I@Z ; HkGetAccountByClientID
	add	esp, 4
	mov	DWORD PTR _acc$147519[ebp], eax
; Line 1111
	cmp	DWORD PTR _acc$147519[ebp], 0
	je	SHORT $LN2@HkGetAccou@2
	mov	eax, DWORD PTR _acc$147519[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@HkGetAccou@2
; Line 1113
	mov	ecx, DWORD PTR _acc$147519[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T154441[ebp]
	or	eax, 1
	mov	DWORD PTR $T154441[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@HkGetAccou@2
$LN2@HkGetAccou@2:
; Line 1116
	push	OFFSET $SG147521
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T154441[ebp]
	or	ecx, 1
	mov	DWORD PTR $T154441[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@HkGetAccou@2:
; Line 1117
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z$0:
	mov	eax, DWORD PTR $T154441[ebp]
	and	eax, 1
	je	$LN6@HkGetAccou@2
	and	DWORD PTR $T154441[ebp], -2		; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN6@HkGetAccou@2:
	ret	0
__ehhandler$?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HkGetAccountIDByClientID@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z ENDP ; HkGetAccountIDByClientID
PUBLIC	?HkDelayedKick@@YAXII@Z				; HkDelayedKick
EXTRN	__imp_?timeInMS@@YA_KXZ:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv136 = -24						; size = 4
tv135 = -20						; size = 4
tv93 = -16						; size = 4
tv92 = -12						; size = 4
_kick_time$ = -8					; size = 8
_iClientID$ = 8						; size = 4
_secs$ = 12						; size = 4
?HkDelayedKick@@YAXII@Z PROC				; HkDelayedKick
; Line 1120
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
; Line 1121
	call	DWORD PTR __imp_?timeInMS@@YA_KXZ
	mov	ecx, DWORD PTR _secs$[ebp]
	imul	ecx, 1000				; 000003e8H
	xor	esi, esi
	add	eax, ecx
	adc	edx, esi
	mov	DWORD PTR _kick_time$[ebp], eax
	mov	DWORD PTR _kick_time$[ebp+4], edx
; Line 1122
	mov	edx, DWORD PTR _iClientID$[ebp]
	imul	edx, 2368				; 00000940H
	mov	eax, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	mov	DWORD PTR tv92[ebp], eax
	mov	DWORD PTR tv93[ebp], edx
	mov	ecx, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR tv93[ebp]
	mov	esi, DWORD PTR tv92[ebp]
	mov	ecx, DWORD PTR [edx+ecx+2112]
	or	ecx, DWORD PTR [esi+eax+2116]
	je	SHORT $LN1@HkDelayedK
	mov	edx, DWORD PTR _iClientID$[ebp]
	imul	edx, 2368				; 00000940H
	mov	eax, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv136[ebp], edx
	mov	ecx, DWORD PTR tv136[ebp]
	mov	edx, DWORD PTR tv135[ebp]
	mov	eax, DWORD PTR [edx+ecx+2116]
	cmp	eax, DWORD PTR _kick_time$[ebp+4]
	jb	SHORT $LN3@HkDelayedK
	ja	SHORT $LN1@HkDelayedK
	mov	ecx, DWORD PTR tv136[ebp]
	mov	edx, DWORD PTR tv135[ebp]
	mov	eax, DWORD PTR [edx+ecx+2112]
	cmp	eax, DWORD PTR _kick_time$[ebp]
	jbe	SHORT $LN3@HkDelayedK
$LN1@HkDelayedK:
; Line 1123
	mov	ecx, DWORD PTR _iClientID$[ebp]
	imul	ecx, 2368				; 00000940H
	mov	edx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	mov	eax, DWORD PTR _kick_time$[ebp]
	mov	DWORD PTR [edx+ecx+2112], eax
	mov	eax, DWORD PTR _kick_time$[ebp+4]
	mov	DWORD PTR [edx+ecx+2116], eax
$LN3@HkDelayedK:
; Line 1124
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
?HkDelayedKick@@YAXII@Z ENDP				; HkDelayedKick
_TEXT	ENDS
PUBLIC	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
PUBLIC	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
PUBLIC	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
PUBLIC	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
PUBLIC	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
PUBLIC	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	?HkSaveChar@@YAXI@Z				; HkSaveChar
PUBLIC	__$ArrayPad$
PUBLIC	?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z ; HKGetShipValue
EXTRN	__imp_?find_by_id@GoodList@@YAPBUGoodInfo@@I@Z:PROC
EXTRN	__imp_?find_by_ship_arch@GoodInfoList@@QBEPBUGoodInfo@@I@Z:PROC
EXTRN	__imp_?GoodList_get@@YAPAVGoodInfoList@@XZ:PROC
EXTRN	__imp_?arch_is_combinable@@YA_NI@Z:PROC
EXTRN	__imp_?GetPrice@Market@pub@@YAHIIAAM@Z:PROC
EXTRN	__imp_?Arch2Good@@YAII@Z:PROC
EXTRN	__imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ:PROC
EXTRN	__imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z:PROC
EXTRN	__imp_?HkReadCharFile@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@@Z:PROC
xdata$x	SEGMENT
__ehfuncinfo$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$6
	DD	00H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$8
	DD	07H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$9
	DD	07H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$10
	DD	07H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$11
	DD	07H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$12
	DD	07H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$13
	DD	07H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$14
	DD	07H
	DD	FLAT:__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$15
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv547 = -544						; size = 4
tv545 = -540						; size = 4
tv544 = -536						; size = 4
tv561 = -532						; size = 4
tv720 = -528						; size = 8
tv542 = -520						; size = 4
tv540 = -516						; size = 4
tv539 = -512						; size = 4
tv559 = -508						; size = 4
tv688 = -504						; size = 8
tv536 = -496						; size = 4
tv534 = -492						; size = 4
tv533 = -488						; size = 4
tv557 = -484						; size = 4
tv531 = -480						; size = 4
tv529 = -476						; size = 4
tv528 = -472						; size = 4
tv555 = -468						; size = 4
tv523 = -464						; size = 4
tv522 = -460						; size = 4
tv553 = -456						; size = 4
tv519 = -452						; size = 4
tv552 = -448						; size = 4
tv517 = -444						; size = 4
tv515 = -440						; size = 4
tv514 = -436						; size = 4
tv550 = -432						; size = 4
tv509 = -428						; size = 4
tv508 = -424						; size = 4
tv77 = -420						; size = 4
$T154469 = -416						; size = 4
$T154468 = -412						; size = 28
$T154467 = -384						; size = 4
$T154466 = -380						; size = 28
$T154465 = -352						; size = 4
$T154464 = -348						; size = 28
$T154463 = -320						; size = 4
$T154462 = -316						; size = 28
$T154461 = -288						; size = 4
$T154460 = -284						; size = 4
$T154459 = -280						; size = 8
$T154458 = -272						; size = 8
$T154457 = -264						; size = 28
$T154456 = -236						; size = 28
$T154455 = -208						; size = 4
$T154454 = -204						; size = 4
$T154453 = -200						; size = 8
$T154452 = -192						; size = 8
$T154451 = -184						; size = 4
_fResaleFactor$147772 = -180				; size = 4
_fItemValue$147775 = -176				; size = 4
_iShipArchID$147764 = -172				; size = 4
_gi$147769 = -168					; size = 4
_iFindEqual$147754 = -164				; size = 4
_fItemValue$147757 = -160				; size = 4
_fResaleFactor$147748 = -156				; size = 4
_iFindComma$147732 = -152				; size = 4
_iGoodCount$147739 = -148				; size = 4
_iGoodID$147735 = -144					; size = 4
_iFindEqual$147729 = -140				; size = 4
_fItemValue$147744 = -136				; size = 4
_wscKey$147720 = -132					; size = 28
_line$147713 = -104					; size = 8
_iFindEqual$147700 = -96				; size = 4
_wscKey$147691 = -92					; size = 28
__$ArrayPad$ = -64					; size = 4
_line$147684 = -60					; size = 8
_iClientID$ = -52					; size = 4
_err$ = -48						; size = 4
_iBaseID$ = -44						; size = 4
_lstCharFile$ = -40					; size = 28
__$EHRec$ = -12						; size = 12
_wscCharname$ = 8					; size = 4
_fValue$ = 12						; size = 4
?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z PROC ; HKGetShipValue
; Line 1127
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 532				; 00000214H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1128
	mov	eax, DWORD PTR _wscCharname$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetClientIdFromCharname@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 4
	mov	DWORD PTR _iClientID$[ebp], eax
; Line 1129
	cmp	DWORD PTR _iClientID$[ebp], -1
	je	SHORT $LN26@HKGetShipV
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkIsInCharSelectMenu@@YA_NI@Z
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN26@HKGetShipV
; Line 1131
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?HkSaveChar@@YAXI@Z			; HkSaveChar
	add	esp, 4
; Line 1132
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkIsValidClientID@@YA_NI@Z
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN26@HKGetShipV
; Line 1134
	mov	eax, 25					; 00000019H
	jmp	$LN28@HKGetShipV
$LN26@HKGetShipV:
; Line 1138
	mov	eax, DWORD PTR _fValue$[ebp]
	fldz
	fstp	DWORD PTR [eax]
; Line 1140
	mov	DWORD PTR _iBaseID$[ebp], 0
; Line 1142
	lea	ecx, DWORD PTR _lstCharFile$[ebp]
	call	??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1143
	lea	ecx, DWORD PTR _lstCharFile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wscCharname$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkReadCharFile@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAV?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@3@@Z
	add	esp, 8
	mov	DWORD PTR _err$[ebp], eax
; Line 1144
	cmp	DWORD PTR _err$[ebp], 0
	je	SHORT $LN25@HKGetShipV
; Line 1145
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR $T154451[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lstCharFile$[ebp]
	call	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	eax, DWORD PTR $T154451[ebp]
	jmp	$LN28@HKGetShipV
$LN25@HKGetShipV:
; Line 1147
	lea	ecx, DWORD PTR _line$147684[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lstCharFile$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	jmp	SHORT $LN24@HKGetShipV
$LN23@HKGetShipV:
	push	0
	lea	edx, DWORD PTR $T154452[ebp]
	push	edx
	lea	ecx, DWORD PTR _line$147684[ebp]
	call	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
$LN24@HKGetShipV:
	lea	eax, DWORD PTR $T154453[ebp]
	push	eax
	lea	ecx, DWORD PTR _lstCharFile$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	push	eax
	lea	ecx, DWORD PTR _line$147684[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	$LN22@HKGetShipV
; Line 1149
	push	0
	push	OFFSET $SG147695
	lea	ecx, DWORD PTR _line$147684[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T154454[ebp], esp
	push	eax
	push	0
	push	edx
	lea	ecx, DWORD PTR _line$147684[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv77[ebp], eax
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv508[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _wscKey$147691[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv509[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1150
	push	OFFSET $SG147698
	lea	edx, DWORD PTR _wscKey$147691[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN20@HKGetShipV
	push	OFFSET $SG147699
	lea	ecx, DWORD PTR _wscKey$147691[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN21@HKGetShipV
$LN20@HKGetShipV:
; Line 1152
	push	0
	push	OFFSET $SG147701
	lea	ecx, DWORD PTR _line$147684[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	mov	DWORD PTR _iFindEqual$147700[ebp], eax
; Line 1153
	cmp	DWORD PTR _iFindEqual$147700[ebp], -1
	jne	SHORT $LN19@HKGetShipV
; Line 1155
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscKey$147691[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN23@HKGetShipV
$LN19@HKGetShipV:
; Line 1158
	mov	esi, DWORD PTR _iFindEqual$147700[ebp]
	add	esi, 1
	lea	ecx, DWORD PTR _line$147684[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	cmp	esi, eax
	jl	SHORT $LN18@HKGetShipV
; Line 1160
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscKey$147691[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN23@HKGetShipV
$LN18@HKGetShipV:
; Line 1163
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T154455[ebp], esp
	mov	ecx, DWORD PTR __imp_?npos@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@2IB
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _iFindEqual$147700[ebp]
	add	ecx, 1
	push	ecx
	push	eax
	lea	ecx, DWORD PTR _line$147684[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv550[ebp], eax
	mov	edx, DWORD PTR tv550[ebp]
	mov	DWORD PTR tv514[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	eax, DWORD PTR $T154456[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv515[ebp], eax
	mov	ecx, DWORD PTR tv515[ebp]
	mov	DWORD PTR tv517[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv517[ebp]
	push	edx
	lea	eax, DWORD PTR $T154457[ebp]
	push	eax
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv552[ebp], eax
	mov	ecx, DWORD PTR tv552[ebp]
	mov	DWORD PTR tv519[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR tv519[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	call	DWORD PTR __imp_?CreateID@@YAIPBD@Z
	add	esp, 4
	mov	DWORD PTR _iBaseID$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR $T154457[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T154456[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1164
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscKey$147691[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	SHORT $LN22@HKGetShipV
$LN21@HKGetShipV:
; Line 1166
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscKey$147691[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN23@HKGetShipV
$LN22@HKGetShipV:
; Line 1168
	lea	edx, DWORD PTR _line$147713[ebp]
	push	edx
	lea	ecx, DWORD PTR _lstCharFile$[ebp]
	call	?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
	jmp	SHORT $LN17@HKGetShipV
$LN16@HKGetShipV:
	push	0
	lea	eax, DWORD PTR $T154458[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
$LN17@HKGetShipV:
	lea	ecx, DWORD PTR $T154459[ebp]
	push	ecx
	lea	ecx, DWORD PTR _lstCharFile$[ebp]
	call	?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
	push	eax
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN15@HKGetShipV
; Line 1170
	push	0
	push	OFFSET $SG147724
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T154460[ebp], esp
	push	eax
	push	0
	push	ecx
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv553[ebp], eax
	mov	edx, DWORD PTR tv553[ebp]
	mov	DWORD PTR tv522[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	eax, DWORD PTR _wscKey$147720[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv523[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 1171
	push	OFFSET $SG147727
	lea	ecx, DWORD PTR _wscKey$147720[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN13@HKGetShipV
	push	OFFSET $SG147728
	lea	eax, DWORD PTR _wscKey$147720[ebp]
	push	eax
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN14@HKGetShipV
$LN13@HKGetShipV:
; Line 1173
	push	0
	push	OFFSET $SG147730
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	mov	DWORD PTR _iFindEqual$147729[ebp], eax
; Line 1174
	cmp	DWORD PTR _iFindEqual$147729[ebp], -1
	jne	SHORT $LN12@HKGetShipV
; Line 1176
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscKey$147720[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN16@HKGetShipV
$LN12@HKGetShipV:
; Line 1178
	mov	edx, DWORD PTR _iFindEqual$147729[ebp]
	push	edx
	push	OFFSET $SG147733
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	mov	DWORD PTR _iFindComma$147732[ebp], eax
; Line 1179
	cmp	DWORD PTR _iFindComma$147732[ebp], -1
	jne	SHORT $LN11@HKGetShipV
; Line 1181
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscKey$147720[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN16@HKGetShipV
$LN11@HKGetShipV:
; Line 1183
	sub	esp, 28					; 0000001cH
	mov	eax, esp
	mov	DWORD PTR $T154461[ebp], esp
	mov	ecx, DWORD PTR _iFindComma$147732[ebp]
	push	ecx
	mov	edx, DWORD PTR _iFindEqual$147729[ebp]
	add	edx, 1
	push	edx
	push	eax
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv555[ebp], eax
	mov	eax, DWORD PTR tv555[ebp]
	mov	DWORD PTR tv528[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T154462[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv529[ebp], eax
	mov	edx, DWORD PTR tv529[ebp]
	mov	DWORD PTR tv531[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	eax, DWORD PTR tv531[ebp]
	push	eax
	call	?ToUInt@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; ToUInt
	add	esp, 4
	mov	DWORD PTR _iGoodID$147735[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T154462[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1184
	mov	ecx, DWORD PTR _iFindComma$147732[ebp]
	add	ecx, 1
	push	ecx
	push	OFFSET $SG147743
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T154463[ebp], esp
	push	eax
	mov	eax, DWORD PTR _iFindComma$147732[ebp]
	add	eax, 1
	push	eax
	push	edx
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv557[ebp], eax
	mov	ecx, DWORD PTR tv557[ebp]
	mov	DWORD PTR tv533[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	edx, DWORD PTR $T154464[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv534[ebp], eax
	mov	eax, DWORD PTR tv534[ebp]
	mov	DWORD PTR tv536[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR tv536[ebp]
	push	ecx
	call	?ToUInt@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; ToUInt
	add	esp, 4
	mov	DWORD PTR _iGoodCount$147739[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T154464[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1187
	lea	edx, DWORD PTR _fItemValue$147744[ebp]
	push	edx
	mov	eax, DWORD PTR _iGoodID$147735[ebp]
	push	eax
	call	DWORD PTR __imp_?Arch2Good@@YAII@Z
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _iBaseID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetPrice@Market@pub@@YAHIIAAM@Z
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN8@HKGetShipV
; Line 1189
	mov	edx, DWORD PTR _iGoodID$147735[ebp]
	push	edx
	call	DWORD PTR __imp_?arch_is_combinable@@YA_NI@Z
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@HKGetShipV
; Line 1191
	mov	ecx, DWORD PTR _iGoodCount$147739[ebp]
	mov	DWORD PTR tv688[ebp], ecx
	mov	DWORD PTR tv688[ebp+4], 0
	fild	QWORD PTR tv688[ebp]
	fmul	DWORD PTR _fItemValue$147744[ebp]
	mov	edx, DWORD PTR _fValue$[ebp]
	fadd	DWORD PTR [edx]
	mov	eax, DWORD PTR _fValue$[ebp]
	fstp	DWORD PTR [eax]
; Line 1194
	jmp	SHORT $LN8@HKGetShipV
$LN9@HKGetShipV:
; Line 1196
	mov	ecx, DWORD PTR __imp_?hModServer@@3PAUHINSTANCE__@@A
	mov	edx, DWORD PTR [ecx]
	add	edx, 568956				; 0008ae7cH
	mov	DWORD PTR _fResaleFactor$147748[ebp], edx
; Line 1197
	fld	DWORD PTR _fItemValue$147744[ebp]
	mov	eax, DWORD PTR _fResaleFactor$147748[ebp]
	fmul	DWORD PTR [eax]
	mov	ecx, DWORD PTR _fValue$[ebp]
	fadd	DWORD PTR [ecx]
	mov	edx, DWORD PTR _fValue$[ebp]
	fstp	DWORD PTR [edx]
$LN8@HKGetShipV:
; Line 1201
	jmp	$LN1@HKGetShipV
$LN14@HKGetShipV:
; Line 1202
	push	OFFSET $SG147753
	lea	eax, DWORD PTR _wscKey$147720[ebp]
	push	eax
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	$LN6@HKGetShipV
; Line 1204
	push	0
	push	OFFSET $SG147755
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	mov	DWORD PTR _iFindEqual$147754[ebp], eax
; Line 1205
	cmp	DWORD PTR _iFindEqual$147754[ebp], -1
	jne	SHORT $LN5@HKGetShipV
; Line 1207
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscKey$147720[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN16@HKGetShipV
$LN5@HKGetShipV:
; Line 1209
	sub	esp, 28					; 0000001cH
	mov	edx, esp
	mov	DWORD PTR $T154465[ebp], esp
	mov	eax, DWORD PTR __imp_?npos@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@2IB
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	eax, DWORD PTR _iFindEqual$147754[ebp]
	add	eax, 1
	push	eax
	push	edx
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv559[ebp], eax
	mov	ecx, DWORD PTR tv559[ebp]
	mov	DWORD PTR tv539[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	edx, DWORD PTR $T154466[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv540[ebp], eax
	mov	eax, DWORD PTR tv540[ebp]
	mov	DWORD PTR tv542[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR tv542[ebp]
	push	ecx
	call	?ToUInt@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; ToUInt
	add	esp, 4
	mov	DWORD PTR _fItemValue$147757[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T154466[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1210
	mov	edx, DWORD PTR _fItemValue$147757[ebp]
	mov	DWORD PTR tv720[ebp], edx
	mov	DWORD PTR tv720[ebp+4], 0
	fild	QWORD PTR tv720[ebp]
	mov	eax, DWORD PTR _fValue$[ebp]
	fadd	DWORD PTR [eax]
	mov	ecx, DWORD PTR _fValue$[ebp]
	fstp	DWORD PTR [ecx]
	jmp	$LN1@HKGetShipV
$LN6@HKGetShipV:
; Line 1212
	push	OFFSET $SG147763
	lea	edx, DWORD PTR _wscKey$147720[ebp]
	push	edx
	call	DWORD PTR __imp_??$?8GU?$char_traits@G@std@@V?$allocator@G@1@@std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	$LN1@HKGetShipV
; Line 1214
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	sub	esp, 28					; 0000001cH
	mov	esi, esp
	mov	DWORD PTR $T154467[ebp], esp
	push	eax
	push	0
	push	OFFSET $SG147768
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	add	eax, 1
	push	eax
	push	esi
	lea	ecx, DWORD PTR _line$147713[ebp]
	call	??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
	mov	ecx, eax
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv561[ebp], eax
	mov	ecx, DWORD PTR tv561[ebp]
	mov	DWORD PTR tv544[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	edx, DWORD PTR $T154468[ebp]
	push	edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	call	?Trim@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V12@@Z ; Trim
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv545[ebp], eax
	mov	eax, DWORD PTR tv545[ebp]
	mov	DWORD PTR tv547[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR tv547[ebp]
	push	ecx
	call	?ToUInt@@YAIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; ToUInt
	add	esp, 4
	mov	DWORD PTR _iShipArchID$147764[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T154468[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1215
	mov	edx, DWORD PTR _iShipArchID$147764[ebp]
	push	edx
	call	DWORD PTR __imp_?GoodList_get@@YAPAVGoodInfoList@@XZ
	mov	ecx, eax
	call	DWORD PTR __imp_?find_by_ship_arch@GoodInfoList@@QBEPBUGoodInfo@@I@Z
	mov	DWORD PTR _gi$147769[ebp], eax
; Line 1216
	cmp	DWORD PTR _gi$147769[ebp], 0
	je	SHORT $LN1@HKGetShipV
; Line 1218
	mov	eax, DWORD PTR _gi$147769[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	DWORD PTR __imp_?find_by_id@GoodList@@YAPBUGoodInfo@@I@Z
	add	esp, 4
	mov	DWORD PTR _gi$147769[ebp], eax
; Line 1219
	cmp	DWORD PTR _gi$147769[ebp], 0
	je	SHORT $LN1@HKGetShipV
; Line 1221
	mov	edx, DWORD PTR __imp_?hModServer@@3PAUHINSTANCE__@@A
	mov	eax, DWORD PTR [edx]
	add	eax, 568952				; 0008ae78H
	mov	DWORD PTR _fResaleFactor$147772[ebp], eax
; Line 1222
	mov	ecx, DWORD PTR _gi$147769[ebp]
	fld	DWORD PTR [ecx+88]
	mov	edx, DWORD PTR _fResaleFactor$147772[ebp]
	fmul	DWORD PTR [edx]
	fstp	DWORD PTR _fItemValue$147775[ebp]
; Line 1223
	mov	eax, DWORD PTR _fValue$[ebp]
	fld	DWORD PTR [eax]
	fadd	DWORD PTR _fItemValue$147775[ebp]
	mov	ecx, DWORD PTR _fValue$[ebp]
	fstp	DWORD PTR [ecx]
$LN1@HKGetShipV:
; Line 1228
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _wscKey$147720[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN16@HKGetShipV
$LN15@HKGetShipV:
; Line 1229
	mov	DWORD PTR $T154469[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _lstCharFile$[ebp]
	call	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	eax, DWORD PTR $T154469[ebp]
$LN28@HKGetShipV:
; Line 1230
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$0:
	lea	ecx, DWORD PTR _lstCharFile$[ebp]
	jmp	??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$1:
	mov	ecx, DWORD PTR $T154454[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$2:
	lea	ecx, DWORD PTR _wscKey$147691[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$3:
	mov	ecx, DWORD PTR $T154455[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$4:
	lea	ecx, DWORD PTR $T154456[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$5:
	lea	ecx, DWORD PTR $T154457[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$6:
	mov	ecx, DWORD PTR $T154460[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$7:
	lea	ecx, DWORD PTR _wscKey$147720[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$8:
	mov	ecx, DWORD PTR $T154461[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$9:
	lea	ecx, DWORD PTR $T154462[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$10:
	mov	ecx, DWORD PTR $T154463[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$11:
	lea	ecx, DWORD PTR $T154464[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$12:
	mov	ecx, DWORD PTR $T154465[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$13:
	lea	ecx, DWORD PTR $T154466[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$14:
	mov	ecx, DWORD PTR $T154467[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z$15:
	lea	ecx, DWORD PTR $T154468[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-540]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z ENDP ; HKGetShipValue
EXTRN	__imp_?Save@pub@@YAHII@Z:PROC
EXTRN	__imp_?WriteProcMem@@YAXPAX0H@Z:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_patch$ = -4						; size = 2
_iClientID$ = 8						; size = 4
?HkSaveChar@@YAXI@Z PROC				; HkSaveChar
; Line 1233
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1234
	mov	BYTE PTR _patch$[ebp], 144		; 00000090H
	mov	BYTE PTR _patch$[ebp+1], 144		; 00000090H
; Line 1235
	push	2
	lea	eax, DWORD PTR _patch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?hModServer@@3PAUHINSTANCE__@@A
	mov	edx, DWORD PTR [ecx]
	add	edx, 520104				; 0007efa8H
	push	edx
	call	DWORD PTR __imp_?WriteProcMem@@YAXPAX0H@Z
	add	esp, 12					; 0000000cH
; Line 1236
	push	1
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	DWORD PTR __imp_?Save@pub@@YAHII@Z
	add	esp, 8
; Line 1237
	mov	esp, ebp
	pop	ebp
	ret	0
?HkSaveChar@@YAXI@Z ENDP				; HkSaveChar
_TEXT	ENDS
PUBLIC	?GetTimeInMS@@YA_KXZ				; GetTimeInMS
EXTRN	__imp__GetTickCount@0:PROC
;	COMDAT ?msBaseTime@?1??GetTimeInMS@@YA_KXZ@4_KA
_BSS	SEGMENT
?msBaseTime@?1??GetTimeInMS@@YA_KXZ@4_KA DQ 01H DUP (?)	; `GetTimeInMS'::`2'::msBaseTime
_BSS	ENDS
;	COMDAT ?msLastTickCount@?1??GetTimeInMS@@YA_KXZ@4_KA
_BSS	SEGMENT
?msLastTickCount@?1??GetTimeInMS@@YA_KXZ@4_KA DQ 01H DUP (?) ; `GetTimeInMS'::`2'::msLastTickCount
; Function compile flags: /Odtp
_BSS	ENDS
_TEXT	SEGMENT
_msCurTime$ = -8					; size = 8
?GetTimeInMS@@YA_KXZ PROC				; GetTimeInMS
; Line 1244
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1248
	call	DWORD PTR __imp__GetTickCount@0
	xor	ecx, ecx
	mov	DWORD PTR _msCurTime$[ebp], eax
	mov	DWORD PTR _msCurTime$[ebp+4], ecx
; Line 1251
	mov	edx, DWORD PTR _msCurTime$[ebp+4]
	cmp	edx, DWORD PTR ?msLastTickCount@?1??GetTimeInMS@@YA_KXZ@4_KA+4
	ja	SHORT $LN1@GetTimeInM
	jb	SHORT $LN4@GetTimeInM
	mov	eax, DWORD PTR _msCurTime$[ebp]
	cmp	eax, DWORD PTR ?msLastTickCount@?1??GetTimeInMS@@YA_KXZ@4_KA
	jae	SHORT $LN1@GetTimeInM
$LN4@GetTimeInM:
; Line 1252
	mov	ecx, DWORD PTR ?msBaseTime@?1??GetTimeInMS@@YA_KXZ@4_KA
	add	ecx, 34					; 00000022H
	mov	edx, DWORD PTR ?msBaseTime@?1??GetTimeInMS@@YA_KXZ@4_KA+4
	adc	edx, 0
	mov	DWORD PTR ?msBaseTime@?1??GetTimeInMS@@YA_KXZ@4_KA, ecx
	mov	DWORD PTR ?msBaseTime@?1??GetTimeInMS@@YA_KXZ@4_KA+4, edx
$LN1@GetTimeInM:
; Line 1253
	mov	eax, DWORD PTR _msCurTime$[ebp]
	mov	DWORD PTR ?msLastTickCount@?1??GetTimeInMS@@YA_KXZ@4_KA, eax
	mov	ecx, DWORD PTR _msCurTime$[ebp+4]
	mov	DWORD PTR ?msLastTickCount@?1??GetTimeInMS@@YA_KXZ@4_KA+4, ecx
; Line 1254
	mov	eax, DWORD PTR ?msBaseTime@?1??GetTimeInMS@@YA_KXZ@4_KA
	add	eax, DWORD PTR ?msLastTickCount@?1??GetTimeInMS@@YA_KXZ@4_KA
	mov	edx, DWORD PTR ?msBaseTime@?1??GetTimeInMS@@YA_KXZ@4_KA+4
	adc	edx, DWORD PTR ?msLastTickCount@?1??GetTimeInMS@@YA_KXZ@4_KA+4
; Line 1255
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTimeInMS@@YA_KXZ ENDP				; GetTimeInMS
_TEXT	ENDS
PUBLIC	__real@bfe0000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	_modff
PUBLIC	__real@4059000000000000
PUBLIC	__real@43340000
PUBLIC	__real@c0667fd700000000
PUBLIC	__real@bf747ae140000000
PUBLIC	__real@404ca5dc00000000
PUBLIC	?degrees@@YAMM@Z				; degrees
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@c0667fd700000000
CONST	SEGMENT
__real@c0667fd700000000 DQ 0c0667fd700000000r	; -179.995
CONST	ENDS
;	COMDAT __real@bf747ae140000000
CONST	SEGMENT
__real@bf747ae140000000 DQ 0bf747ae140000000r	; -0.005
CONST	ENDS
;	COMDAT __real@404ca5dc00000000
CONST	SEGMENT
__real@404ca5dc00000000 DQ 0404ca5dc00000000r	; 57.2958
; Function compile flags: /Odtp
CONST	ENDS
_TEXT	SEGMENT
tv150 = -12						; size = 4
tv136 = -8						; size = 4
_frac$ = -4						; size = 4
_rad$ = 8						; size = 4
?degrees@@YAMM@Z PROC					; degrees
; Line 1262
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 1263
	fld	DWORD PTR _rad$[ebp]
	fmul	QWORD PTR __real@404ca5dc00000000
	fstp	DWORD PTR _rad$[ebp]
; Line 1266
	fld	DWORD PTR _rad$[ebp]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN4@degrees
; Line 1268
	fld	DWORD PTR _rad$[ebp]
	fcomp	QWORD PTR __real@bf747ae140000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN6@degrees
; Line 1269
	fldz
	fstp	DWORD PTR _rad$[ebp]
	jmp	SHORT $LN4@degrees
$LN6@degrees:
; Line 1270
	fld	DWORD PTR _rad$[ebp]
	fcomp	QWORD PTR __real@c0667fd700000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN4@degrees
; Line 1271
	fld	DWORD PTR __real@43340000
	fstp	DWORD PTR _rad$[ebp]
$LN4@degrees:
; Line 1275
	lea	eax, DWORD PTR _rad$[ebp]
	push	eax
	fld	DWORD PTR _rad$[ebp]
	fmul	QWORD PTR __real@4059000000000000
	fstp	DWORD PTR tv136[ebp]
	fld	DWORD PTR tv136[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_modff
	add	esp, 8
	fstp	DWORD PTR _frac$[ebp]
; Line 1276
	fld	DWORD PTR _frac$[ebp]
	fcomp	QWORD PTR __real@3fe0000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN3@degrees
; Line 1277
	fld	DWORD PTR _rad$[ebp]
	fadd	QWORD PTR __real@3ff0000000000000
	fstp	DWORD PTR _rad$[ebp]
	jmp	SHORT $LN1@degrees
$LN3@degrees:
; Line 1278
	fld	DWORD PTR _frac$[ebp]
	fcomp	QWORD PTR __real@bfe0000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN1@degrees
; Line 1279
	fld	DWORD PTR _rad$[ebp]
	fsub	QWORD PTR __real@3ff0000000000000
	fstp	DWORD PTR _rad$[ebp]
$LN1@degrees:
; Line 1281
	fld	DWORD PTR _rad$[ebp]
	fdiv	QWORD PTR __real@4059000000000000
	fstp	DWORD PTR tv150[ebp]
	fld	DWORD PTR tv150[ebp]
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	0
?degrees@@YAMM@Z ENDP					; degrees
_TEXT	ENDS
EXTRN	__imp__modf:PROC
; Function compile flags: /Odtp
;	COMDAT _modff
_TEXT	SEGMENT
tv77 = -20						; size = 4
__Df$ = -16						; size = 8
__Di$ = -8						; size = 8
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_modff	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\math.h
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	lea	eax, DWORD PTR __Di$[ebp]
	push	eax
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp__modf
	add	esp, 12					; 0000000cH
	fstp	QWORD PTR __Df$[ebp]
; Line 414
	fld	QWORD PTR __Di$[ebp]
	mov	ecx, DWORD PTR __Y$[ebp]
	fstp	DWORD PTR [ecx]
; Line 415
	fld	QWORD PTR __Df$[ebp]
	fstp	DWORD PTR tv77[ebp]
	fld	DWORD PTR tv77[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_modff	ENDP
_TEXT	ENDS
PUBLIC	_atan2f
PUBLIC	__real@3ec0000000000000
PUBLIC	?MatrixToEuler@@YA?AVVector@@ABVMatrix@@@Z	; MatrixToEuler
EXTRN	__imp___hypot:PROC
;	COMDAT __real@3ec0000000000000
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\pluginutilities.cpp
CONST	SEGMENT
__real@3ec0000000000000 DQ 03ec0000000000000r	; 1.90735e-006
; Function compile flags: /Odtp
CONST	ENDS
_TEXT	SEGMENT
_z$ = -52						; size = 12
_x$ = -40						; size = 12
_y$ = -28						; size = 12
_vec$ = -16						; size = 12
_h$ = -4						; size = 4
$T154513 = 8						; size = 4
_mat$ = 12						; size = 4
?MatrixToEuler@@YA?AVVector@@ABVMatrix@@@Z PROC		; MatrixToEuler
; Line 1287
	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
; Line 1288
	mov	eax, DWORD PTR _mat$[ebp]
	fld	DWORD PTR [eax]
	fstp	DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _mat$[ebp]
	fld	DWORD PTR [ecx+12]
	fstp	DWORD PTR _x$[ebp+4]
	mov	edx, DWORD PTR _mat$[ebp]
	fld	DWORD PTR [edx+24]
	fstp	DWORD PTR _x$[ebp+8]
; Line 1289
	mov	eax, DWORD PTR _mat$[ebp]
	fld	DWORD PTR [eax+4]
	fstp	DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _mat$[ebp]
	fld	DWORD PTR [ecx+16]
	fstp	DWORD PTR _y$[ebp+4]
	mov	edx, DWORD PTR _mat$[ebp]
	fld	DWORD PTR [edx+28]
	fstp	DWORD PTR _y$[ebp+8]
; Line 1290
	mov	eax, DWORD PTR _mat$[ebp]
	fld	DWORD PTR [eax+8]
	fstp	DWORD PTR _z$[ebp]
	mov	ecx, DWORD PTR _mat$[ebp]
	fld	DWORD PTR [ecx+20]
	fstp	DWORD PTR _z$[ebp+4]
	mov	edx, DWORD PTR _mat$[ebp]
	fld	DWORD PTR [edx+32]
	fstp	DWORD PTR _z$[ebp+8]
; Line 1293
	fld	DWORD PTR _x$[ebp+4]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR _x$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	DWORD PTR __imp___hypot
	add	esp, 16					; 00000010H
	fstp	DWORD PTR _h$[ebp]
; Line 1294
	fld	DWORD PTR _h$[ebp]
	fcomp	QWORD PTR __real@3ec0000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN2@MatrixToEu
; Line 1296
	push	ecx
	fld	DWORD PTR _z$[ebp+8]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _y$[ebp+8]
	fstp	DWORD PTR [esp]
	call	_atan2f
	add	esp, 4
	fstp	DWORD PTR [esp]
	call	?degrees@@YAMM@Z			; degrees
	add	esp, 4
	fstp	DWORD PTR _vec$[ebp]
; Line 1297
	push	ecx
	fld	DWORD PTR _h$[ebp]
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _x$[ebp+8]
	fchs
	push	ecx
	fstp	DWORD PTR [esp]
	call	_atan2f
	add	esp, 4
	fstp	DWORD PTR [esp]
	call	?degrees@@YAMM@Z			; degrees
	add	esp, 4
	fstp	DWORD PTR _vec$[ebp+4]
; Line 1298
	push	ecx
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x$[ebp+4]
	fstp	DWORD PTR [esp]
	call	_atan2f
	add	esp, 4
	fstp	DWORD PTR [esp]
	call	?degrees@@YAMM@Z			; degrees
	add	esp, 4
	fstp	DWORD PTR _vec$[ebp+8]
; Line 1300
	jmp	SHORT $LN1@MatrixToEu
$LN2@MatrixToEu:
; Line 1302
	push	ecx
	fld	DWORD PTR _y$[ebp+4]
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _z$[ebp+4]
	fchs
	push	ecx
	fstp	DWORD PTR [esp]
	call	_atan2f
	add	esp, 4
	fstp	DWORD PTR [esp]
	call	?degrees@@YAMM@Z			; degrees
	add	esp, 4
	fstp	DWORD PTR _vec$[ebp]
; Line 1303
	push	ecx
	fld	DWORD PTR _h$[ebp]
	fstp	DWORD PTR [esp]
	fld	DWORD PTR _x$[ebp+8]
	fchs
	push	ecx
	fstp	DWORD PTR [esp]
	call	_atan2f
	add	esp, 4
	fstp	DWORD PTR [esp]
	call	?degrees@@YAMM@Z			; degrees
	add	esp, 4
	fstp	DWORD PTR _vec$[ebp+4]
; Line 1304
	fldz
	fstp	DWORD PTR _vec$[ebp+8]
$LN1@MatrixToEu:
; Line 1306
	mov	eax, DWORD PTR $T154513[ebp]
	mov	ecx, DWORD PTR _vec$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vec$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vec$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR $T154513[ebp]
; Line 1307
	mov	esp, ebp
	pop	ebp
	ret	0
?MatrixToEuler@@YA?AVVector@@ABVMatrix@@@Z ENDP		; MatrixToEuler
_TEXT	ENDS
EXTRN	_atan2:PROC
; Function compile flags: /Odtp
;	COMDAT _atan2f
_TEXT	SEGMENT
tv77 = -4						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\math.h
; Line 395
	push	ebp
	mov	ebp, esp
	push	ecx
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fld	DWORD PTR __Y$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_atan2
	add	esp, 16					; 00000010H
	fstp	DWORD PTR tv77[ebp]
	fld	DWORD PTR tv77[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
_atan2f	ENDP
_TEXT	ENDS
PUBLIC	??0?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::_Iterator<1>
PUBLIC	?_Nextnode@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PAU342@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Nextnode
; Function compile flags: /Odtp
;	COMDAT ?begin@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 533
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	?_Nextnode@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PAU342@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 535
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::end, COMDAT
; _this$ = ecx
; Line 543
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 545
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::end
_TEXT	ENDS
PUBLIC	??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode
PUBLIC	??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154523 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154523[ebp], esp
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@XZ ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 437
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Tidy
; Line 522
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>
PUBLIC	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
; Function compile flags: /Odtp
;	COMDAT ?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin, COMDAT
; _this$ = ecx
; Line 533
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 535
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end, COMDAT
; _this$ = ecx
; Line 543
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 545
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::end
_TEXT	ENDS
PUBLIC	??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
PUBLIC	?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Buynode
PUBLIC	??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ; std::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
PUBLIC	??0?$allocator@UGROUP_MEMBER@@@std@@QAE@XZ	; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154546 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154546[ebp], esp
	call	??0?$allocator@UGROUP_MEMBER@@@std@@QAE@XZ ; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ; std::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Buynode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 437
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
__ehhandler$??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
PUBLIC	?_Tidy@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEXXZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEXXZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Tidy
; Line 522
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
__ehhandler$??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
PUBLIC	??0?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::_Iterator<1>
PUBLIC	?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode
; Function compile flags: /Odtp
;	COMDAT ?begin@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::begin, COMDAT
; _this$ = ecx
; Line 533
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 534
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 535
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::end, COMDAT
; _this$ = ecx
; Line 543
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 545
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::end
_TEXT	ENDS
PUBLIC	??D?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEAAUGROUP_MEMBER@@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator*
; Function compile flags: /Odtp
;	COMDAT ??C?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEPAUGROUP_MEMBER@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEPAUGROUP_MEMBER@@XZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator->, COMDAT
; _this$ = ecx
; Line 398
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 399
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEAAUGROUP_MEMBER@@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator*
; Line 400
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEPAUGROUP_MEMBER@@XZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator->
_TEXT	ENDS
PUBLIC	??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEAAV012@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV012@H@Z PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 411
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEAAV012@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator++
; Line 412
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 413
	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator++
_TEXT	ENDS
PUBLIC	??8?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator!=, COMDAT
; _this$ = ecx
; Line 302
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 304
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator!=
_TEXT	ENDS
PUBLIC	??D?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEABUIGNORE_INFO@@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator*
; Function compile flags: /Odtp
;	COMDAT ??D?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEAAUIGNORE_INFO@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEAAUIGNORE_INFO@@XZ PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator*, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEABUIGNORE_INFO@@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator*
; Line 395
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEAAUIGNORE_INFO@@XZ ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator*
_TEXT	ENDS
PUBLIC	??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAEAAV012@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV012@H@Z PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 411
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAEAAV012@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator++
; Line 412
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 413
	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE?AV012@H@Z ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator++
_TEXT	ENDS
PUBLIC	??8?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator!=, COMDAT
; _this$ = ecx
; Line 302
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 304
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator!=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 725
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	sub	eax, DWORD PTR [ecx+12]
	sar	eax, 2
; Line 727
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
_TEXT	ENDS
EXTRN	__imp___invalid_parameter_noinfo:PROC
; Function compile flags: /Odtp
;	COMDAT ??A?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAPAUHINSTANCE__@@I@Z PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator[], COMDAT
; _this$ = ecx
; Line 774
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 783
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
	cmp	DWORD PTR __Pos$[ebp], eax
	jb	SHORT $LN2@operator
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator:
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 785
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [edx+eax*4]
; Line 786
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAPAUHINSTANCE__@@I@Z ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator[]
_TEXT	ENDS
PUBLIC	?insert@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@ABQAUHINSTANCE__@@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::insert
PUBLIC	?end@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::end
PUBLIC	?_Ufill@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU3@IABQAU3@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Ufill
PUBLIC	?capacity@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::capacity
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXABQAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T154587 = -24						; size = 8
$T154586 = -16						; size = 8
$T154585 = -8						; size = 8
__Val$ = 8						; size = 4
?push_back@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXABQAUHINSTANCE__@@@Z PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::push_back, COMDAT
; _this$ = ecx
; Line 809
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 810
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::capacity
	cmp	esi, eax
	jae	SHORT $LN2@push_back
; Line 819
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU3@IABQAU3@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Ufill
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 822
	jmp	SHORT $LN3@push_back
$LN2@push_back:
; Line 823
	lea	edx, DWORD PTR $T154586[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T154585[ebp], ecx
	mov	DWORD PTR $T154585[ebp+4], edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T154585[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T154585[ebp]
	push	edx
	lea	eax, DWORD PTR $T154587[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@ABQAUHINSTANCE__@@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::insert
$LN3@push_back:
; Line 824
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXABQAUHINSTANCE__@@@Z ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::push_back
_TEXT	ENDS
PUBLIC	?erase@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@0@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::erase
PUBLIC	?begin@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::begin
; Function compile flags: /Odtp
;	COMDAT ?clear@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T154594 = -40						; size = 8
$T154593 = -32						; size = 8
$T154592 = -24						; size = 8
$T154591 = -16						; size = 8
$T154590 = -8						; size = 8
?clear@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXXZ PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::clear, COMDAT
; _this$ = ecx
; Line 1059
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1060
	lea	eax, DWORD PTR $T154591[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T154590[ebp], ecx
	mov	DWORD PTR $T154590[ebp+4], edx
	lea	eax, DWORD PTR $T154593[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::begin
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T154592[ebp], ecx
	mov	DWORD PTR $T154592[ebp+4], edx
	mov	eax, DWORD PTR $T154590[ebp+4]
	push	eax
	mov	ecx, DWORD PTR $T154590[ebp]
	push	ecx
	mov	edx, DWORD PTR $T154592[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T154592[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154594[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@0@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::erase
; Line 1061
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEXXZ ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::clear
_TEXT	ENDS
PUBLIC	??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*
; Function compile flags: /Odtp
;	COMDAT ??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 398
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 399
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*
; Line 400
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEPAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator->
_TEXT	ENDS
PUBLIC	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 411
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
; Line 412
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 413
	mov	esp, ebp
	pop	ebp
	ret	8
??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE?AV012@H@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
_TEXT	ENDS
PUBLIC	??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=, COMDAT
; _this$ = ecx
; Line 302
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 304
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator!=
_TEXT	ENDS
PUBLIC	??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ PROC ; std::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
PUBLIC	??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ PROC ; std::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ENDP ; std::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
__ehhandler$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >::~_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >::~_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >::~_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >
__ehhandler$??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::~_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
; Function compile flags: /Odtp
;	COMDAT ?_Nextnode@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PAU342@@Z PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Nextnode, COMDAT
; Line 114
	push	ebp
	mov	ebp, esp
; Line 115
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 116
	pop	ebp
	ret	0
?_Nextnode@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PAU342@@Z ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Nextnode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode, COMDAT
; Line 114
	push	ebp
	mov	ebp, esp
; Line 115
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 116
	pop	ebp
	ret	0
?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
PUBLIC	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocate
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$0
__unwindtable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode, COMDAT
; _this$ = ecx
; Line 1171
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1172
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1173
	mov	DWORD PTR __Linkcnt$[ebp], 0
; Line 1175
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1176
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct
; Line 1177
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1178
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct
	jmp	SHORT $LN5@Buynode
__catch$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$0:
; Line 1180
	cmp	DWORD PTR __Linkcnt$[ebp], 0
	jle	SHORT $LN1@Buynode
; Line 1181
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
$LN1@Buynode:
; Line 1182
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
; Line 1183
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1184
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$1
	ret	0
$LN5@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ$1:
; Line 1185
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode:
; Line 1186
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Buynode
PUBLIC	?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Tidy, COMDAT
; _this$ = ecx
; Line 1212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1213
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear
; Line 1214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
; Line 1215
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
; Line 1216
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
; Line 1217
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 1218
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAEXXZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154679 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154679[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Line 86
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_val@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_val<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??1_Container_base_aux@std@@QAE@XZ		; std::_Container_base_aux::~_Container_base_aux
PUBLIC	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ$0
__ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 439
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
; Line 440
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
; Function compile flags: /Odtp
;	COMDAT ??1_Container_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base_aux@std@@QAE@XZ PROC			; std::_Container_base_aux::~_Container_base_aux, COMDAT
; _this$ = ecx
; Line 402
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base_aux@std@@QAE@XZ ENDP			; std::_Container_base_aux::~_Container_base_aux
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 114
	push	ebp
	mov	ebp, esp
; Line 115
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 116
	pop	ebp
	ret	0
?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::deallocate
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::destroy
PUBLIC	?_Prevnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Prevnode
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::construct
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ$0
__unwindtable$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Buynode, COMDAT
; _this$ = ecx
; Line 1171
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1172
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1173
	mov	DWORD PTR __Linkcnt$[ebp], 0
; Line 1175
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1176
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::construct
; Line 1177
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1178
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::construct
	jmp	SHORT $LN5@Buynode@2
__catch$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ$0:
; Line 1180
	cmp	DWORD PTR __Linkcnt$[ebp], 0
	jle	SHORT $LN1@Buynode@2
; Line 1181
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::destroy
$LN1@Buynode@2:
; Line 1182
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::deallocate
; Line 1183
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1184
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ$1
	ret	0
$LN5@Buynode@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ$1:
; Line 1185
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode@2:
; Line 1186
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@XZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Buynode
PUBLIC	?clear@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEXXZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::clear
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEXXZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1213
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEXXZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::clear
; Line 1214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::destroy
; Line 1215
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::destroy
; Line 1216
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::deallocate
; Line 1217
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 1218
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAEXXZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ; std::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
PUBLIC	??0?$allocator@UGROUP_MEMBER@@@std@@QAE@ABV01@@Z ; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z$0
__ehfuncinfo$??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154721 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z PROC ; std::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >, COMDAT
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154721[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UGROUP_MEMBER@@@std@@QAE@ABV01@@Z ; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ; std::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$allocator@UGROUP_MEMBER@@@std@@QAE@ABV01@@Z ; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>
; Line 86
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_val@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ENDP ; std::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_val<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ$0
__ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >::~_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 439
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
; Line 440
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >::~_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@UGROUP_MEMBER@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UGROUP_MEMBER@@@std@@QAE@XZ PROC		; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UGROUP_MEMBER@@@std@@QAE@XZ ENDP		; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::_Iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 361
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::_Const_iterator<1>
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::_Iterator<1>
_TEXT	ENDS
PUBLIC	??D?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEABUGROUP_MEMBER@@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator*
; Function compile flags: /Odtp
;	COMDAT ??D?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEAAUGROUP_MEMBER@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEAAUGROUP_MEMBER@@XZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator*, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEABUGROUP_MEMBER@@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator*
; Line 395
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEAAUGROUP_MEMBER@@XZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator*
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEAAV012@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 403
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEAAV012@XZ ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator++
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
; Line 406
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Iterator<1>::operator++
_TEXT	ENDS
PUBLIC	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
PUBLIC	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ	; std::_Iterator_base_aux::_Has_container
; Function compile flags: /Odtp
;	COMDAT ??8?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator==, COMDAT
; _this$ = ecx
; Line 290
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 295
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN6@operator@2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@operator@2
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@operator@2
$LN4@operator@2:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@2:
	xor	ecx, ecx
	jne	SHORT $LN2@operator@2
$LN6@operator@2:
; Line 298
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	sete	dl
	mov	al, dl
; Line 299
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z PROC ; std::_Iterator_base_aux::_Same_container, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 462
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx]
	sete	al
; Line 464
	mov	esp, ebp
	pop	ebp
	ret	4
?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ENDP ; std::_Iterator_base_aux::_Same_container
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Has_container@_Iterator_base_aux@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Has_container@_Iterator_base_aux@std@@QBE_NXZ PROC	; std::_Iterator_base_aux::_Has_container, COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	setne	cl
	mov	al, cl
; Line 469
	mov	esp, ebp
	pop	ebp
	ret	0
?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ENDP	; std::_Iterator_base_aux::_Has_container
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::_Iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 361
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::_Const_iterator<1>
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::_Iterator<1>
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAEAAV012@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 403
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAEAAV012@XZ ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator++
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
; Line 406
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Iterator<1>::operator++
_TEXT	ENDS
PUBLIC	?_Myval@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAUIGNORE_INFO@@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Myval
PUBLIC	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
; Function compile flags: /Odtp
;	COMDAT ??D?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEABUIGNORE_INFO@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEABUIGNORE_INFO@@XZ PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator*, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@3
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@3:
	xor	edx, edx
	jne	SHORT $LN7@operator@3
$LN10@operator@3:
; Line 223
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@3
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@3
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@3:
	xor	eax, eax
	jne	SHORT $LN2@operator@3
$LN5@operator@3:
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Myval@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAUIGNORE_INFO@@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Myval
	add	esp, 4
; Line 227
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBEABUIGNORE_INFO@@XZ ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator*
_TEXT	ENDS
PUBLIC	?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Aux_cont::_Getcont
; Function compile flags: /Odtp
;	COMDAT ?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ PROC ; std::_Iterator_base_aux::_Getmycont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 457
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 458
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Aux_cont::_Getcont
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $LN4@Getmycont
$LN3@Getmycont:
	mov	DWORD PTR tv67[ebp], 0
$LN4@Getmycont:
	mov	eax, DWORD PTR tv67[ebp]
; Line 459
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ENDP ; std::_Iterator_base_aux::_Getmycont
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ PROC ; std::_Aux_cont::_Getcont, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 369
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 370
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ENDP ; std::_Aux_cont::_Getcont
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 290
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 295
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN6@operator@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@operator@4
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@operator@4
$LN4@operator@4:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@4:
	xor	ecx, ecx
	jne	SHORT $LN2@operator@4
$LN6@operator@4:
; Line 298
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	sete	dl
	mov	al, dl
; Line 299
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QBE_NABV012@@Z ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?capacity@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 634
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 635
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN3@capacity
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN4@capacity
$LN3@capacity:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	sub	eax, DWORD PTR [edx+12]
	sar	eax, 2
	mov	DWORD PTR tv70[ebp], eax
$LN4@capacity:
	mov	eax, DWORD PTR tv70[ebp]
; Line 636
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::capacity
_TEXT	ENDS
PUBLIC	??0?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ?begin@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::begin, COMDAT
; _this$ = ecx
; Line 640
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 641
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 642
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::end, COMDAT
; _this$ = ecx
; Line 650
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 651
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 652
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::end
_TEXT	ENDS
PUBLIC	??H?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+
PUBLIC	?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Insert_n
PUBLIC	??G?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator-
; Function compile flags: /Odtp
;	COMDAT ?insert@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@ABQAUHINSTANCE__@@@Z
_TEXT	SEGMENT
tv77 = -28						; size = 4
_this$ = -24						; size = 4
$T154779 = -20						; size = 8
$T154776 = -12						; size = 8
__Off$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
__Val$ = 20						; size = 4
?insert@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@ABQAUHINSTANCE__@@@Z PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::insert, COMDAT
; _this$ = ecx
; Line 875
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 876
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
	test	eax, eax
	jne	SHORT $LN3@insert
	mov	DWORD PTR tv77[ebp], 0
	jmp	SHORT $LN4@insert
$LN3@insert:
	lea	eax, DWORD PTR $T154776[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??G?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEHABV01@@Z ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator-
	mov	DWORD PTR tv77[ebp], eax
$LN4@insert:
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR __Off$[ebp], ecx
; Line 877
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR __Where$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Insert_n
; Line 878
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154779[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::begin
	mov	ecx, eax
	call	??H?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 879
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@ABQAUHINSTANCE__@@@Z ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::insert
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXPAPAUHINSTANCE__@@0@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Destroy
PUBLIC	??$unchecked_copy@PAPAUHINSTANCE__@@PAPAU1@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00@Z ; stdext::unchecked_copy<HINSTANCE__ * *,HINSTANCE__ * *>
PUBLIC	??9?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator!=
PUBLIC	?_Make_iter@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Make_iter
; Function compile flags: /Odtp
;	COMDAT ?erase@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@0@Z
_TEXT	SEGMENT
_this$ = -24						; size = 4
__Ptr$150618 = -20					; size = 4
__Last$ = -16						; size = 8
__First$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__First_arg$ = 12					; size = 8
__Last_arg$ = 20					; size = 8
?erase@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@0@Z PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::erase, COMDAT
; _this$ = ecx
; Line 1028
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	DWORD PTR _this$[ebp], ecx
; Line 1029
	mov	eax, DWORD PTR __First_arg$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __First_arg$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Make_iter
; Line 1030
	mov	eax, DWORD PTR __Last_arg$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Last_arg$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Make_iter
; Line 1032
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@erase
; Line 1045
	mov	edx, DWORD PTR __First$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp+4]
	push	edx
	call	??$unchecked_copy@PAPAUHINSTANCE__@@PAPAU1@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00@Z ; stdext::unchecked_copy<HINSTANCE__ * *,HINSTANCE__ * *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$150618[ebp], eax
; Line 1048
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR __Ptr$150618[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXPAPAUHINSTANCE__@@0@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Destroy
; Line 1049
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$150618[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN1@erase:
; Line 1054
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __First$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1056
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?erase@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@0@Z ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::erase
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_fill_n@PAPAUHINSTANCE__@@IPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAXPAPAUHINSTANCE__@@IABQAU1@AAV?$allocator@PAUHINSTANCE__@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ?_Ufill@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU3@IABQAU3@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Ufill@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU3@IABQAU3@@Z PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Ufill, COMDAT
; _this$ = ecx
; Line 1253
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1254
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$unchecked_uninitialized_fill_n@PAPAUHINSTANCE__@@IPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAXPAPAUHINSTANCE__@@IABQAU1@AAV?$allocator@PAUHINSTANCE__@@@std@@@Z ; stdext::unchecked_uninitialized_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
	add	esp, 16					; 00000010H
; Line 1255
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
; Line 1256
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Ufill@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU3@IABQAU3@@Z ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Ufill
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 361
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Const_iterator<1>
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::_Iterator<1>
_TEXT	ENDS
PUBLIC	??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator*
; Function compile flags: /Odtp
;	COMDAT ??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*, COMDAT
; _this$ = ecx
; Line 393
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 394
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator*
; Line 395
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator*
_TEXT	ENDS
PUBLIC	??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
;	COMDAT ??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 403
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
; Line 406
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Iterator<1>::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==, COMDAT
; _this$ = ecx
; Line 290
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 295
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN6@operator@5
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@operator@5
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@operator@5
$LN4@operator@5:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@5:
	xor	ecx, ecx
	jne	SHORT $LN2@operator@5
$LN6@operator@5:
; Line 298
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+4]
	sete	dl
	mov	al, dl
; Line 299
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBE_NABV012@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator==
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z PROC ; std::allocator<std::_Aux_cont>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ENDP ; std::allocator<std::_Aux_cont>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAUIGNORE_INFO@@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAUIGNORE_INFO@@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@@Z PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 124
	push	ebp
	mov	ebp, esp
; Line 125
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 126
	pop	ebp
	ret	0
?_Myval@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAUIGNORE_INFO@@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@@Z ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Myval
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode, COMDAT
; Line 119
	push	ebp
	mov	ebp, esp
; Line 120
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 121
	pop	ebp
	ret	0
?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::destroy
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear, COMDAT
; _this$ = ecx
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 832
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax], ecx
; Line 834
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax], edx
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 837
	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+20]
	je	SHORT $LN4@clear
; Line 839
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], edx
; Line 840
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::destroy
; Line 841
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
; Line 842
	jmp	SHORT $LN2@clear
$LN4@clear:
; Line 843
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEXXZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::clear
_TEXT	ENDS
PUBLIC	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
PUBLIC	??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154802 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154802[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Line 68
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
__ehhandler$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_ptr@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_ptr<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocate, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@I@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *,std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *,std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Prevnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 119
	push	ebp
	mov	ebp, esp
; Line 120
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 121
	pop	ebp
	ret	0
?_Prevnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Prevnode
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::destroy
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEXXZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::clear, COMDAT
; _this$ = ecx
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 832
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax], ecx
; Line 834
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax], edx
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 837
	jmp	SHORT $LN3@clear@2
$LN2@clear@2:
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+20]
	je	SHORT $LN4@clear@2
; Line 839
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], edx
; Line 840
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?destroy@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::destroy
; Line 841
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::deallocate
; Line 842
	jmp	SHORT $LN2@clear@2
$LN4@clear@2:
; Line 843
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEXXZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::clear
_TEXT	ENDS
PUBLIC	??$?0UGROUP_MEMBER@@@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *><GROUP_MEMBER>
PUBLIC	??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z$0
__ehfuncinfo$??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154826 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z PROC ; std::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154826[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UGROUP_MEMBER@@@std@@QAE@ABV01@@Z ; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0UGROUP_MEMBER@@@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *><GROUP_MEMBER>
; Line 68
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_ptr@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ENDP ; std::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_ptr<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@UGROUP_MEMBER@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@UGROUP_MEMBER@@@std@@QAE@ABV01@@Z PROC	; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@UGROUP_MEMBER@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::allocate, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *,std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::construct, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *,std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
PUBLIC	??0?$_Bidit@UGROUP_MEMBER@@HPBU1@ABU1@@std@@QAE@XZ ; std::_Bidit<GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &>::_Bidit<GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::_Const_iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 176
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@UGROUP_MEMBER@@HPBU1@ABU1@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 177
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@Const_iter
	cmp	DWORD PTR __Plist$[ebp], 0
	jne	SHORT $LN2@Const_iter
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@Const_iter:
	xor	eax, eax
	jne	SHORT $LN2@Const_iter
$LN5@Const_iter:
; Line 178
	mov	ecx, DWORD PTR __Plist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PBV12@@Z ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pcont$ = 8						; size = 4
?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z PROC ; std::_Iterator_base_aux::_Set_container, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 452
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pcont$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 454
	mov	esp, ebp
	pop	ebp
	ret	4
?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ENDP ; std::_Iterator_base_aux::_Set_container
_TEXT	ENDS
PUBLIC	?_Myval@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAUGROUP_MEMBER@@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Myval
; Function compile flags: /Odtp
;	COMDAT ??D?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEABUGROUP_MEMBER@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEABUGROUP_MEMBER@@XZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 211
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@6
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@6:
	xor	edx, edx
	jne	SHORT $LN7@operator@6
$LN10@operator@6:
; Line 223
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@6
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@6:
	xor	eax, eax
	jne	SHORT $LN2@operator@6
$LN5@operator@6:
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Myval@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAUGROUP_MEMBER@@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Myval
	add	esp, 4
; Line 227
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QBEABUGROUP_MEMBER@@XZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 246
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@7
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@7:
	xor	edx, edx
	jne	SHORT $LN7@operator@7
$LN10@operator@7:
; Line 247
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@7
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@7
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@7:
	xor	eax, eax
	jne	SHORT $LN2@operator@7
$LN5@operator@7:
; Line 250
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@PAU342@@Z ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
; Line 252
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Const_iterator@$00@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Const_iterator<1>::operator++
_TEXT	ENDS
PUBLIC	??0?$_Bidit@UIGNORE_INFO@@HPBU1@ABU1@@std@@QAE@XZ ; std::_Bidit<IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &>::_Bidit<IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::_Const_iterator<1>, COMDAT
; _this$ = ecx
; Line 176
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@UIGNORE_INFO@@HPBU1@ABU1@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 177
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@Const_iter@2
	cmp	DWORD PTR __Plist$[ebp], 0
	jne	SHORT $LN2@Const_iter@2
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@Const_iter@2:
	xor	eax, eax
	jne	SHORT $LN2@Const_iter@2
$LN5@Const_iter@2:
; Line 178
	mov	ecx, DWORD PTR __Plist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PBV12@@Z ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAEAAV012@XZ PROC ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 246
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@8
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@8:
	xor	edx, edx
	jne	SHORT $LN7@operator@8
$LN10@operator@8:
; Line 247
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@8
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@8:
	xor	eax, eax
	jne	SHORT $LN2@operator@8
$LN5@operator@8:
; Line 250
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@2@PAU342@@Z ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
; Line 252
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Const_iterator@$00@?$list@UIGNORE_INFO@@V?$allocator@UIGNORE_INFO@@@std@@@std@@QAEAAV012@XZ ENDP ; std::list<IGNORE_INFO,std::allocator<IGNORE_INFO> >::_Const_iterator<1>::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?_Make_iter@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@@Z PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 660
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 661
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 662
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Make_iter@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@V?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@@Z ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Make_iter
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@0AAV?$allocator@PAUHINSTANCE__@@@0@@Z ; std::_Destroy_range<std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ?_Destroy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXPAPAUHINSTANCE__@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXPAPAUHINSTANCE__@@0@Z PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Destroy, COMDAT
; _this$ = ecx
; Line 1118
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1119
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@0AAV?$allocator@PAUHINSTANCE__@@@0@@Z ; std::_Destroy_range<std::allocator<HINSTANCE__ *> >
	add	esp, 12					; 0000000cH
; Line 1120
	mov	esp, ebp
	pop	ebp
	ret	8
?_Destroy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXPAPAUHINSTANCE__@@0@Z ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Destroy
_TEXT	ENDS
PUBLIC	??$_Unchecked_move_backward@PAPAUHINSTANCE__@@PAPAU1@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00@Z ; stdext::_Unchecked_move_backward<HINSTANCE__ * *,HINSTANCE__ * *>
PUBLIC	??$fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z ; std::fill<HINSTANCE__ * *,HINSTANCE__ *>
PUBLIC	?deallocate@?$allocator@PAUHINSTANCE__@@@std@@QAEXPAPAUHINSTANCE__@@I@Z ; std::allocator<HINSTANCE__ *>::deallocate
PUBLIC	??$_Umove@PAPAUHINSTANCE__@@@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU2@00@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Umove<HINSTANCE__ * *>
PUBLIC	?allocate@?$allocator@PAUHINSTANCE__@@@std@@QAEPAPAUHINSTANCE__@@I@Z ; std::allocator<HINSTANCE__ *>::allocate
PUBLIC	?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Xlen
PUBLIC	?max_size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::max_size
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$5 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$2
__catchsym$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$4 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$0
__unwindtable$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__tryblocktable$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$4
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$5
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z
_TEXT	SEGMENT
tv84 = -52						; size = 4
_this$ = -48						; size = 4
__Tmp$151078 = -44					; size = 4
__Oldend$151079 = -40					; size = 4
__Tmp$151068 = -36					; size = 4
__Ncopied$151055 = -32					; size = 4
__Newvec$151053 = -28					; size = 4
__Whereoff$151054 = -24					; size = 4
__Capacity$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Where$ = 8						; size = 8
__Count$ = 16						; size = 4
__Val$ = 20						; size = 4
?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Insert_n, COMDAT
; _this$ = ecx
; Line 1153
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1161
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1163
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN14@Insert_n
	jmp	$LN16@Insert_n
$LN14@Insert_n:
; Line 1165
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN12@Insert_n
; Line 1166
	call	?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Xlen
	jmp	$LN16@Insert_n
$LN12@Insert_n:
; Line 1167
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	$LN10@Insert_n
; Line 1170
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN17@Insert_n
	mov	DWORD PTR tv84[ebp], 0
	jmp	SHORT $LN18@Insert_n
$LN17@Insert_n:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv84[ebp], edx
$LN18@Insert_n:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1171
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	cmp	DWORD PTR __Capacity$[ebp], eax
	jae	SHORT $LN9@Insert_n
; Line 1172
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
$LN9@Insert_n:
; Line 1173
	mov	ecx, DWORD PTR __Capacity$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@PAUHINSTANCE__@@@std@@QAEPAPAUHINSTANCE__@@I@Z ; std::allocator<HINSTANCE__ *>::allocate
	mov	DWORD PTR __Newvec$151053[ebp], eax
; Line 1174
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Where$[ebp+4]
	sub	eax, DWORD PTR [edx+12]
	sar	eax, 2
	mov	DWORD PTR __Whereoff$151054[ebp], eax
; Line 1175
	mov	DWORD PTR __Ncopied$151055[ebp], 0
; Line 1177
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1178
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Whereoff$151054[ebp]
	mov	ecx, DWORD PTR __Newvec$151053[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU3@IABQAU3@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Ufill
; Line 1179
	mov	eax, DWORD PTR __Ncopied$151055[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$151055[ebp], eax
; Line 1181
	mov	ecx, DWORD PTR __Newvec$151053[ebp]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAUHINSTANCE__@@@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU2@00@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Umove<HINSTANCE__ * *>
; Line 1182
	mov	edx, DWORD PTR __Ncopied$151055[ebp]
	add	edx, 1
	mov	DWORD PTR __Ncopied$151055[ebp], edx
; Line 1184
	mov	eax, DWORD PTR __Whereoff$151054[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Newvec$151053[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAUHINSTANCE__@@@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU2@00@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Umove<HINSTANCE__ * *>
	jmp	SHORT $LN19@Insert_n
__catch$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$0:
; Line 1186
	cmp	DWORD PTR __Ncopied$151055[ebp], 1
	jle	SHORT $LN7@Insert_n
; Line 1187
	mov	eax, DWORD PTR __Whereoff$151054[ebp]
	mov	ecx, DWORD PTR __Newvec$151053[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR __Newvec$151053[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXPAPAUHINSTANCE__@@0@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Destroy
$LN7@Insert_n:
; Line 1188
	cmp	DWORD PTR __Ncopied$151055[ebp], 0
	jle	SHORT $LN6@Insert_n
; Line 1189
	mov	ecx, DWORD PTR __Whereoff$151054[ebp]
	mov	edx, DWORD PTR __Newvec$151053[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR __Whereoff$151054[ebp]
	mov	ecx, DWORD PTR __Newvec$151053[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXPAPAUHINSTANCE__@@0@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Destroy
$LN6@Insert_n:
; Line 1190
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$151053[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@PAUHINSTANCE__@@@std@@QAEXPAPAUHINSTANCE__@@I@Z ; std::allocator<HINSTANCE__ *>::deallocate
; Line 1191
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1192
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$1
	ret	0
$LN19@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$1:
; Line 1194
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::size
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
; Line 1195
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $LN5@Insert_n
; Line 1197
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXPAPAUHINSTANCE__@@0@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Destroy
; Line 1198
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	sub	eax, DWORD PTR [edx+12]
	sar	eax, 2
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@PAUHINSTANCE__@@@std@@QAEXPAPAUHINSTANCE__@@I@Z ; std::allocator<HINSTANCE__ *>::deallocate
$LN5@Insert_n:
; Line 1205
	mov	eax, DWORD PTR __Capacity$[ebp]
	mov	ecx, DWORD PTR __Newvec$151053[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], edx
; Line 1206
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Newvec$151053[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 1207
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newvec$151053[ebp]
	mov	DWORD PTR [edx+12], eax
	jmp	$LN16@Insert_n
$LN10@Insert_n:
; Line 1209
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR __Where$[ebp+4]
	sar	edx, 2
	cmp	edx, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n
; Line 1211
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$151068[ebp], ecx
; Line 1214
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp+4]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAUHINSTANCE__@@@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU2@00@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Umove<HINSTANCE__ * *>
; Line 1216
	mov	DWORD PTR __$EHRec$[ebp+12], 2
; Line 1218
	lea	edx, DWORD PTR __Tmp$151068[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR __Where$[ebp+4]
	sar	ecx, 2
	mov	edx, DWORD PTR __Count$[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU3@IABQAU3@@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Ufill
	jmp	SHORT $LN21@Insert_n
__catch$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$2:
; Line 1220
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+4]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXPAPAUHINSTANCE__@@0@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Destroy
; Line 1221
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1222
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$3
	ret	0
$LN21@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z$3:
; Line 1224
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 1231
	lea	edx, DWORD PTR __Tmp$151068[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	sub	edx, eax
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+4]
	push	eax
	call	??$fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z ; std::fill<HINSTANCE__ * *,HINSTANCE__ *>
	add	esp, 12					; 0000000cH
; Line 1233
	jmp	SHORT $LN16@Insert_n
$LN3@Insert_n:
; Line 1235
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Tmp$151078[ebp], edx
; Line 1237
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR __Oldend$151079[ebp], ecx
; Line 1239
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR __Oldend$151079[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	mov	eax, DWORD PTR __Oldend$151079[ebp]
	sub	eax, edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAPAUHINSTANCE__@@@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU2@00@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Umove<HINSTANCE__ * *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 1246
	mov	edx, DWORD PTR __Oldend$151079[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR __Oldend$151079[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	push	edx
	call	??$_Unchecked_move_backward@PAPAUHINSTANCE__@@PAPAU1@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00@Z ; stdext::_Unchecked_move_backward<HINSTANCE__ * *,HINSTANCE__ * *>
	add	esp, 12					; 0000000cH
; Line 1248
	lea	eax, DWORD PTR __Tmp$151078[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Where$[ebp+4]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	call	??$fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z ; std::fill<HINSTANCE__ * *,HINSTANCE__ *>
	add	esp, 12					; 0000000cH
$LN16@Insert_n:
; Line 1250
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXV?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@2@IABQAUHINSTANCE__@@@Z ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Insert_n
PUBLIC	?max_size@?$allocator@PAUHINSTANCE__@@@std@@QBEIXZ ; std::allocator<HINSTANCE__ *>::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::max_size, COMDAT
; _this$ = ecx
; Line 730
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 731
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?max_size@?$allocator@PAUHINSTANCE__@@@std@@QBEIXZ ; std::allocator<HINSTANCE__ *>::max_size
; Line 732
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::max_size
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ$0
__ehfuncinfo$?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ
_TEXT	SEGMENT
$T154888 = -80						; size = 28
$T154887 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Xlen, COMDAT
; Line 1259
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1260
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T154888[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR $T154888[ebp]
	push	eax
	lea	ecx, DWORD PTR $T154887[ebp]
	call	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	ecx, DWORD PTR $T154887[ebp]
	push	ecx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T154888[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN2@Xlen:
; Line 1261
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ$0:
	lea	ecx, DWORD PTR $T154888[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Xlen
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@length_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@EA@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT
; _this$ = ecx
; Line 105
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7length_error@std@@6B@
; Line 106
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR __Message$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 27
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1logic_error@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1logic_error@std@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1logic_error@std@@UAE@XZ$1
__ehfuncinfo$??1logic_error@std@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1logic_error@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1logic_error@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 31
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1logic_error@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__unwindfunclet$??1logic_error@std@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??1logic_error@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1logic_error@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Odtp
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 35
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
; Line 36
	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1length_error@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1length_error@std@@UAE@XZ$0
__ehfuncinfo$??1length_error@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1length_error@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx
; Line 109
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1length_error@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 110
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1length_error@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??1length_error@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1length_error@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1length_error@std@@UAE@XZ		; std::length_error::~length_error
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@PAUHINSTANCE__@@@std@@QAEXPAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAUHINSTANCE__@@@std@@QAEXPAPAUHINSTANCE__@@I@Z PROC ; std::allocator<HINSTANCE__ *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAUHINSTANCE__@@@std@@QAEXPAPAUHINSTANCE__@@I@Z ENDP ; std::allocator<HINSTANCE__ *>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@PAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@IPAPAU1@@Z ; std::_Allocate<HINSTANCE__ *>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@PAUHINSTANCE__@@@std@@QAEPAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@PAUHINSTANCE__@@@std@@QAEPAPAUHINSTANCE__@@I@Z PROC ; std::allocator<HINSTANCE__ *>::allocate, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@PAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@IPAPAU1@@Z ; std::_Allocate<HINSTANCE__ *>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@PAUHINSTANCE__@@@std@@QAEPAPAUHINSTANCE__@@I@Z ENDP ; std::allocator<HINSTANCE__ *>::allocate
_TEXT	ENDS
PUBLIC	??0?$_Bidit@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@HPBV12@ABV12@@std@@QAE@XZ ; std::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Const_iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 176
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@HPBV12@ABV12@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 177
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@Const_iter@3
	cmp	DWORD PTR __Plist$[ebp], 0
	jne	SHORT $LN2@Const_iter@3
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@Const_iter@3:
	xor	eax, eax
	jne	SHORT $LN2@Const_iter@3
$LN5@Const_iter@3:
; Line 178
	mov	ecx, DWORD PTR __Plist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PBV12@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::_Const_iterator<1>
_TEXT	ENDS
PUBLIC	?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Myval
; Function compile flags: /Odtp
;	COMDAT ??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator*, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 222
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@9
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@9:
	xor	edx, edx
	jne	SHORT $LN7@operator@9
$LN10@operator@9:
; Line 223
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@9
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@9
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@9:
	xor	eax, eax
	jne	SHORT $LN2@operator@9
$LN5@operator@9:
; Line 226
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Myval
	add	esp, 4
; Line 227
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QBEABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator*
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++, COMDAT
; _this$ = ecx
; Line 235
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 246
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN10@operator@10
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@operator@10
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@10:
	xor	edx, edx
	jne	SHORT $LN7@operator@10
$LN10@operator@10:
; Line 247
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@operator@10
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	edx, DWORD PTR [eax+20]
	jne	SHORT $LN2@operator@10
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@10:
	xor	eax, eax
	jne	SHORT $LN2@operator@10
$LN5@operator@10:
; Line 250
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@PAU342@@Z ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
; Line 252
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Const_iterator@$00@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEAAV012@XZ ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Const_iterator<1>::operator++
_TEXT	ENDS
PUBLIC	??0?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 327
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Line 328
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
_TEXT	ENDS
PUBLIC	??Y?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+=
; Function compile flags: /Odtp
;	COMDAT ??H?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+, COMDAT
; _this$ = ecx
; Line 380
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 381
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 382
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+=
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 383
	mov	esp, ebp
	pop	ebp
	ret	8
??H?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??G?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEHABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??G?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEHABV01@@Z PROC ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator-, COMDAT
; _this$ = ecx
; Line 186
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 191
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@operator@11
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@operator@11
$LN4@operator@11:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@11:
	xor	eax, eax
	jne	SHORT $LN2@operator@11
; Line 194
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
; Line 195
	mov	esp, ebp
	pop	ebp
	ret	4
??G?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEHABV01@@Z ENDP ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator-
_TEXT	ENDS
PUBLIC	??8?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator==
; Function compile flags: /Odtp
;	COMDAT ??9?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator!=, COMDAT
; _this$ = ecx
; Line 215
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 217
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator!=
_TEXT	ENDS
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UGROUP_MEMBER@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Bidit@UGROUP_MEMBER@@HPBU1@ABU1@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Bidit@UGROUP_MEMBER@@HPBU1@ABU1@@std@@QAE@XZ PROC	; std::_Bidit<GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &>::_Bidit<GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UGROUP_MEMBER@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Bidit@UGROUP_MEMBER@@HPBU1@ABU1@@std@@QAE@XZ ENDP	; std::_Bidit<GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &>::_Bidit<GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &>
_TEXT	ENDS
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UIGNORE_INFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Bidit@UIGNORE_INFO@@HPBU1@ABU1@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Bidit@UIGNORE_INFO@@HPBU1@ABU1@@std@@QAE@XZ PROC	; std::_Bidit<IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &>::_Bidit<IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UIGNORE_INFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Bidit@UIGNORE_INFO@@HPBU1@ABU1@@std@@QAE@XZ ENDP	; std::_Bidit<IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &>::_Bidit<IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7length_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Bidit@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@HPBV12@ABV12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Bidit@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@HPBV12@ABV12@@std@@QAE@XZ PROC ; std::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Bidit@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@HPBV12@ABV12@@std@@QAE@XZ ENDP ; std::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>::_Bidit<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &>
_TEXT	ENDS
PUBLIC	??0_Iterator_base_aux@std@@QAE@XZ		; std::_Iterator_base_aux::_Iterator_base_aux
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UGROUP_MEMBER@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UGROUP_MEMBER@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UGROUP_MEMBER@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,GROUP_MEMBER,int,GROUP_MEMBER const *,GROUP_MEMBER const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0_Iterator_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base_aux@std@@QAE@XZ PROC			; std::_Iterator_base_aux::_Iterator_base_aux, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 448
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base_aux@std@@QAE@XZ ENDP			; std::_Iterator_base_aux::_Iterator_base_aux
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UIGNORE_INFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UIGNORE_INFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UIGNORE_INFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,IGNORE_INFO,int,IGNORE_INFO const *,IGNORE_INFO const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@HPBV32@ABV32@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,int,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const *,std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z PROC ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 124
	push	ebp
	mov	ebp, esp
; Line 125
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 126
	pop	ebp
	ret	0
?_Myval@?$list@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@KAAAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ENDP ; std::list<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Myval
_TEXT	ENDS
PUBLIC	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T154995 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T154995[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Line 48
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::~_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
__ehhandler$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
PUBLIC	??$_Destroy@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAEXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@2@@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAUGROUP_MEMBER@@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAUGROUP_MEMBER@@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z PROC ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 124
	push	ebp
	mov	ebp, esp
; Line 125
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 126
	pop	ebp
	ret	0
?_Myval@?$list@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@KAAAUGROUP_MEMBER@@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ENDP ; std::list<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Myval
_TEXT	ENDS
PUBLIC	??$?0UGROUP_MEMBER@@@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node><GROUP_MEMBER>
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z$0
__ehfuncinfo$??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T155009 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z PROC ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T155009[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UGROUP_MEMBER@@@std@@QAE@ABV01@@Z ; std::allocator<GROUP_MEMBER>::allocator<GROUP_MEMBER>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0UGROUP_MEMBER@@@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node><GROUP_MEMBER>
; Line 48
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >::~_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >
__ehhandler$??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ENDP ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >
PUBLIC	??$_Destroy@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@PAUHINSTANCE__@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@PAUHINSTANCE__@@@std@@QBEIXZ PROC	; std::allocator<HINSTANCE__ *>::max_size, COMDAT
; _this$ = ecx
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 165
	mov	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
; Line 166
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size:
	mov	eax, DWORD PTR tv65[ebp]
; Line 167
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@PAUHINSTANCE__@@@std@@QBEIXZ ENDP	; std::allocator<HINSTANCE__ *>::max_size
_TEXT	ENDS
PUBLIC	??Y?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+=
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 374
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 375
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+=
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
; Line 377
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+=
_TEXT	ENDS
PUBLIC	??0?$_Ranit@PAUHINSTANCE__@@HPBQAU1@ABQAU1@@std@@QAE@XZ ; std::_Ranit<HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &>::_Ranit<HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z PROC ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >, COMDAT
; _this$ = ecx
; Line 76
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Ranit@PAUHINSTANCE__@@HPBQAU1@ABQAU1@@std@@QAE@XZ
; Line 78
	cmp	DWORD PTR __Pvector$[ebp], 0
	je	SHORT $LN4@Vector_con
	mov	eax, DWORD PTR __Pvector$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN4@Vector_con
	mov	edx, DWORD PTR __Pvector$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jbe	SHORT $LN2@Vector_con
$LN4@Vector_con:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@Vector_con:
	xor	ecx, ecx
	jne	SHORT $LN2@Vector_con
; Line 79
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@PAPAUHINSTANCE__@@PBV_Container_base_aux@1@@Z ENDP ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??8?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator==, COMDAT
; _this$ = ecx
; Line 203
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@operator@12
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@operator@12
$LN4@operator@12:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@12:
	xor	eax, eax
	jne	SHORT $LN2@operator@12
; Line 211
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	sete	cl
	mov	al, cl
; Line 212
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator==
_TEXT	ENDS
PUBLIC	??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@PAUHINSTANCE__@@HPBQAU3@ABQAU3@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::random_access_iterator_tag,HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Ranit@PAUHINSTANCE__@@HPBQAU1@ABQAU1@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Ranit@PAUHINSTANCE__@@HPBQAU1@ABQAU1@@std@@QAE@XZ PROC ; std::_Ranit<HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &>::_Ranit<HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@PAUHINSTANCE__@@HPBQAU3@ABQAU3@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Ranit@PAUHINSTANCE__@@HPBQAU1@ABQAU1@@std@@QAE@XZ ENDP ; std::_Ranit<HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &>::_Ranit<HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@PAUHINSTANCE__@@HPBQAU3@ABQAU3@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@PAUHINSTANCE__@@HPBQAU3@ABQAU3@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::random_access_iterator_tag,HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Urandom_access_iterator_tag@std@@PAUHINSTANCE__@@HPBQAU3@ABQAU3@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::random_access_iterator_tag,HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &,std::_Iterator_base_aux>::_Iterator_with_base<std::random_access_iterator_tag,HINSTANCE__ *,int,HINSTANCE__ * const *,HINSTANCE__ * const &,std::_Iterator_base_aux>
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
PUBLIC	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
PUBLIC	??0_Container_base_aux@std@@QAE@XZ		; std::_Container_base_aux::_Container_base_aux
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$1
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
tv133 = -32						; size = 4
_this$ = -28						; size = 4
$T155037 = -24						; size = 4
$T155036 = -20						; size = 4
$T155035 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::_Container_base_aux
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Line 420
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
	mov	DWORD PTR $T155037[ebp], eax
	mov	ecx, DWORD PTR $T155037[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T155036[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T155036[ebp], 0
	je	SHORT $LN3@Container_
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T155036[ebp]
	call	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN4@Container_
$LN3@Container_:
	mov	DWORD PTR tv133[ebp], 0
$LN4@Container_:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T155035[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T155035[ebp]
	mov	DWORD PTR [ecx], edx
; Line 421
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z$1:
	mov	eax, DWORD PTR $T155037[ebp]
	push	eax
	mov	ecx, DWORD PTR $T155036[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@std@@@std@@IAE@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Container_base_aux_alloc_real<std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
; Line 58
	push	ebp
	mov	ebp, esp
; Line 59
	mov	eax, DWORD PTR __Where$[ebp]
; Line 60
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
; Line 64
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pcont$ = 8						; size = 4
??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z PROC	; std::_Aux_cont::_Aux_cont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 364
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pcont$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ENDP	; std::_Aux_cont::_Aux_cont
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0_Container_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base_aux@std@@QAE@XZ PROC			; std::_Container_base_aux::_Container_base_aux, COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 382
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base_aux@std@@QAE@XZ ENDP			; std::_Container_base_aux::_Container_base_aux
_TEXT	ENDS
PUBLIC	??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ; std::_Allocate<std::_Aux_cont>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z PROC ; std::allocator<std::_Aux_cont>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ; std::_Allocate<std::_Aux_cont>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ENDP ; std::allocator<std::_Aux_cont>::allocate
_TEXT	ENDS
PUBLIC	??$?0UGROUP_MEMBER@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><GROUP_MEMBER>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z$1
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
_TEXT	SEGMENT
tv133 = -32						; size = 4
_this$ = -28						; size = 4
$T155062 = -24						; size = 4
$T155061 = -20						; size = 4
$T155060 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::_Container_base_aux
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0UGROUP_MEMBER@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><GROUP_MEMBER>
; Line 420
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
	mov	DWORD PTR $T155062[ebp], eax
	mov	ecx, DWORD PTR $T155062[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T155061[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T155061[ebp], 0
	je	SHORT $LN3@Container_@2
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T155061[ebp]
	call	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN4@Container_@2
$LN3@Container_@2:
	mov	DWORD PTR tv133[ebp], 0
$LN4@Container_@2:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T155060[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T155060[ebp]
	mov	DWORD PTR [ecx], edx
; Line 421
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z$1:
	mov	eax, DWORD PTR $T155062[ebp]
	push	eax
	mov	ecx, DWORD PTR $T155061[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@UGROUP_MEMBER@@@std@@@std@@IAE@V?$allocator@UGROUP_MEMBER@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >::_Container_base_aux_alloc_real<std::allocator<GROUP_MEMBER> >
; Function compile flags: /Odtp
;	COMDAT ??Y?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN7@operator@13
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN7@operator@13:
	xor	ecx, ecx
	jne	SHORT $LN7@operator@13
; Line 161
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	esi, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	cmp	esi, DWORD PTR [eax+16]
	ja	SHORT $LN4@operator@13
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	esi, DWORD PTR [eax+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	cmp	esi, DWORD PTR [eax+12]
	jae	SHORT $LN2@operator@13
$LN4@operator@13:
; Line 163
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@13:
	xor	edx, edx
	jne	SHORT $LN2@operator@13
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
; Line 166
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::operator+=
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Pow_int@M@@YAMMH@Z
_TEXT	SEGMENT
tv92 = -20						; size = 4
tv82 = -16						; size = 8
__Z$151541 = -8						; size = 4
__N$ = -4						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
??$_Pow_int@M@@YAMMH@Z PROC				; _Pow_int<float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\math.h
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 475
	cmp	DWORD PTR __Y$[ebp], 0
	jl	SHORT $LN7@Pow_int
; Line 476
	mov	eax, DWORD PTR __Y$[ebp]
	mov	DWORD PTR __N$[ebp], eax
; Line 477
	jmp	SHORT $LN6@Pow_int
$LN7@Pow_int:
; Line 478
	mov	ecx, DWORD PTR __Y$[ebp]
	neg	ecx
	mov	DWORD PTR __N$[ebp], ecx
$LN6@Pow_int:
; Line 479
	fld1
	fstp	DWORD PTR __Z$151541[ebp]
	jmp	SHORT $LN5@Pow_int
$LN4@Pow_int:
	fld	DWORD PTR __X$[ebp]
	fmul	DWORD PTR __X$[ebp]
	fstp	DWORD PTR __X$[ebp]
$LN5@Pow_int:
; Line 480
	mov	edx, DWORD PTR __N$[ebp]
	and	edx, 1
	je	SHORT $LN2@Pow_int
; Line 481
	fld	DWORD PTR __Z$151541[ebp]
	fmul	DWORD PTR __X$[ebp]
	fstp	DWORD PTR __Z$151541[ebp]
$LN2@Pow_int:
; Line 482
	mov	eax, DWORD PTR __N$[ebp]
	shr	eax, 1
	mov	DWORD PTR __N$[ebp], eax
	jne	SHORT $LN1@Pow_int
; Line 483
	cmp	DWORD PTR __Y$[ebp], 0
	jge	SHORT $LN10@Pow_int
	fld	DWORD PTR __Z$151541[ebp]
	fld1
	fdivrp	ST(1), ST(0)
	fstp	QWORD PTR tv82[ebp]
	jmp	SHORT $LN11@Pow_int
$LN10@Pow_int:
	fld	DWORD PTR __Z$151541[ebp]
	fstp	QWORD PTR tv82[ebp]
$LN11@Pow_int:
	fld	QWORD PTR tv82[ebp]
	fstp	DWORD PTR tv92[ebp]
	fld	DWORD PTR tv92[ebp]
	jmp	SHORT $LN3@Pow_int
$LN1@Pow_int:
	jmp	SHORT $LN4@Pow_int
$LN3@Pow_int:
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Pow_int@M@@YAMMH@Z ENDP				; _Pow_int<float>
_TEXT	ENDS
EXTRN	__imp___vsnwprintf_s:PROC
; Function compile flags: /Odtp
;	COMDAT ??$_snwprintf_s@$0GE@@@YAHAAY0GE@GIPBGZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
__Format$ = 16						; size = 4
??$_snwprintf_s@$0GE@@@YAHAAY0GE@GIPBGZZ PROC		; _snwprintf_s<100>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdio.h
; Line 478
	push	ebp
	mov	ebp, esp
	push	ecx
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	push	100					; 00000064H
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	DWORD PTR __imp___vsnwprintf_s
	add	esp, 20					; 00000014H
	mov	esp, ebp
	pop	ebp
	ret	0
??$_snwprintf_s@$0GE@@@YAHAAY0GE@GIPBGZZ ENDP		; _snwprintf_s<100>
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag>
PUBLIC	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
PUBLIC	??$_Iter_random@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@0@Z ; std::_Iter_random<HINSTANCE__ * *,HINSTANCE__ * *>
PUBLIC	??$_Ptr_cat@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAUHINSTANCE__@@0@Z ; std::_Ptr_cat<HINSTANCE__ * *,HINSTANCE__ * *>
; Function compile flags: /Odtp
;	COMDAT ??$unchecked_copy@PAPAUHINSTANCE__@@PAPAU1@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00@Z
_TEXT	SEGMENT
$T155085 = -3						; size = 1
$T155084 = -2						; size = 1
$T155083 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$unchecked_copy@PAPAUHINSTANCE__@@PAPAU1@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00@Z PROC ; stdext::unchecked_copy<HINSTANCE__ * *,HINSTANCE__ * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 3604
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 3606
	xor	eax, eax
	mov	BYTE PTR $T155083[ebp], al
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Ptr_cat@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAUHINSTANCE__@@0@Z ; std::_Ptr_cat<HINSTANCE__ * *,HINSTANCE__ * *>
	add	esp, 8
	mov	BYTE PTR $T155084[ebp], al
	movzx	eax, BYTE PTR $T155083[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T155084[ebp]
	push	ecx
	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T155085[ebp]
	push	ecx
	call	??$_Iter_random@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@0@Z ; std::_Iter_random<HINSTANCE__ * *,HINSTANCE__ * *>
	add	esp, 12					; 0000000cH
	movzx	edx, BYTE PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	call	??$_Copy_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H
; Line 3607
	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_copy@PAPAUHINSTANCE__@@PAPAU1@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00@Z ENDP ; stdext::unchecked_copy<HINSTANCE__ * *,HINSTANCE__ * *>
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAPAUHINSTANCE__@@IPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ??$unchecked_uninitialized_fill_n@PAPAUHINSTANCE__@@IPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAXPAPAUHINSTANCE__@@IABQAU1@AAV?$allocator@PAUHINSTANCE__@@@std@@@Z
_TEXT	SEGMENT
$T155089 = -2						; size = 1
$T155088 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_fill_n@PAPAUHINSTANCE__@@IPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAXPAPAUHINSTANCE__@@IABQAU1@AAV?$allocator@PAUHINSTANCE__@@@std@@@Z PROC ; stdext::unchecked_uninitialized_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *,std::allocator<HINSTANCE__ *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
; Line 940
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 942
	xor	eax, eax
	mov	BYTE PTR $T155088[ebp], al
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Ptr_cat@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAUHINSTANCE__@@0@Z ; std::_Ptr_cat<HINSTANCE__ * *,HINSTANCE__ * *>
	add	esp, 8
	mov	BYTE PTR $T155089[ebp], al
	movzx	eax, BYTE PTR $T155088[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T155089[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Uninit_fill_n@PAPAUHINSTANCE__@@IPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
	add	esp, 24					; 00000018H
; Line 943
	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_fill_n@PAPAUHINSTANCE__@@IPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAXPAPAUHINSTANCE__@@IABQAU1@AAV?$allocator@PAUHINSTANCE__@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAU120@@Z
_TEXT	SEGMENT
$T155094 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 36					; 00000024H
	jae	SHORT $LN2@Allocate
; Line 40
	push	0
	lea	ecx, DWORD PTR $T155094[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T155094[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 36					; 00000024H
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0bad_alloc@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0bad_alloc@std@@QAE@PBD@Z$0
__ehfuncinfo$??0bad_alloc@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0bad_alloc@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0bad_alloc@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 372
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0bad_alloc@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0bad_alloc@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0bad_alloc@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1bad_alloc@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1bad_alloc@std@@UAE@XZ$0
__ehfuncinfo$??1bad_alloc@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1bad_alloc@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 380
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1bad_alloc@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 381
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1bad_alloc@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??1bad_alloc@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1bad_alloc@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T155117 = -8						; size = 4
__Vptr$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *,std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T155117[ebp], eax
	cmp	DWORD PTR $T155117[ebp], 0
	je	SHORT $LN3@Construct
	mov	edx, DWORD PTR $T155117[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T155117[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN1@Construct
$LN3@Construct:
	mov	DWORD PTR tv68[ebp], 0
$LN1@Construct:
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *,std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@PAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0UGROUP_MEMBER@@@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UGROUP_MEMBER@@@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z PROC ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *><GROUP_MEMBER>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UGROUP_MEMBER@@@?$allocator@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z ENDP ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *><GROUP_MEMBER>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T155126 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@2
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@2
$LN3@Allocate@2:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 40					; 00000028H
	jae	SHORT $LN2@Allocate@2
; Line 40
	push	0
	lea	ecx, DWORD PTR $T155126[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T155126[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate@2:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 40					; 00000028H
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@2:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T155129 = -8						; size = 4
__Vptr$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *,std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>, COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T155129[ebp], eax
	cmp	DWORD PTR $T155129[ebp], 0
	je	SHORT $LN3@Construct@2
	mov	edx, DWORD PTR $T155129[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T155129[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN1@Construct@2
$LN3@Construct@2:
	mov	DWORD PTR tv68[ebp], 0
$LN1@Construct@2:
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *,std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@PAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@0AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy_range@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@0AAV?$allocator@PAUHINSTANCE__@@@0@@Z
_TEXT	SEGMENT
$T155136 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@0AAV?$allocator@PAUHINSTANCE__@@@0@@Z PROC ; std::_Destroy_range<std::allocator<HINSTANCE__ *> >, COMDAT
; Line 224
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 225
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAUHINSTANCE__@@0@Z ; std::_Ptr_cat<HINSTANCE__ * *,HINSTANCE__ * *>
	add	esp, 8
	mov	BYTE PTR $T155136[ebp], al
	movzx	edx, BYTE PTR $T155136[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@0AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::allocator<HINSTANCE__ *> >
	add	esp, 16					; 00000010H
; Line 226
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@0AAV?$allocator@PAUHINSTANCE__@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<HINSTANCE__ *> >
_TEXT	ENDS
PUBLIC	??$_Unchecked_uninitialized_move@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Umove@PAPAUHINSTANCE__@@@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU2@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAPAUHINSTANCE__@@@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU2@00@Z PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Umove<HINSTANCE__ * *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
; Line 1145
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked_uninitialized_move@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@std@@@Z ; stdext::_Unchecked_uninitialized_move<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >
	add	esp, 16					; 00000010H
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??$_Umove@PAPAUHINSTANCE__@@@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEPAPAUHINSTANCE__@@PAPAU2@00@Z ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Umove<HINSTANCE__ * *>
_TEXT	ENDS
PUBLIC	??$_Fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z ; std::_Fill<HINSTANCE__ * *,HINSTANCE__ *>
; Function compile flags: /Odtp
;	COMDAT ??$fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z PROC ; std::fill<HINSTANCE__ * *,HINSTANCE__ *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 3186
	push	ebp
	mov	ebp, esp
; Line 3187
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	call	??$_Fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z ; std::_Fill<HINSTANCE__ * *,HINSTANCE__ *>
	add	esp, 12					; 0000000cH
; Line 3188
	pop	ebp
	ret	0
??$fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z ENDP ; std::fill<HINSTANCE__ * *,HINSTANCE__ *>
_TEXT	ENDS
PUBLIC	??$_Move_backward_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag,std::_Undefined_move_tag>
PUBLIC	??$_Move_cat@PAPAUHINSTANCE__@@@std@@YA?AU_Undefined_move_tag@0@ABQAPAUHINSTANCE__@@@Z ; std::_Move_cat<HINSTANCE__ * *>
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked_move_backward@PAPAUHINSTANCE__@@PAPAU1@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00@Z
_TEXT	SEGMENT
$T155145 = -3						; size = 1
$T155144 = -2						; size = 1
$T155143 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Unchecked_move_backward@PAPAUHINSTANCE__@@PAPAU1@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00@Z PROC ; stdext::_Unchecked_move_backward<HINSTANCE__ * *,HINSTANCE__ * *>, COMDAT
; Line 3694
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 3696
	xor	eax, eax
	mov	BYTE PTR $T155143[ebp], al
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Move_cat@PAPAUHINSTANCE__@@@std@@YA?AU_Undefined_move_tag@0@ABQAPAUHINSTANCE__@@@Z ; std::_Move_cat<HINSTANCE__ * *>
	add	esp, 4
	mov	BYTE PTR $T155144[ebp], al
	movzx	edx, BYTE PTR $T155143[ebp]
	push	edx
	movzx	eax, BYTE PTR $T155144[ebp]
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T155145[ebp]
	push	eax
	call	??$_Iter_random@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@0@Z ; std::_Iter_random<HINSTANCE__ * *,HINSTANCE__ * *>
	add	esp, 12					; 0000000cH
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	call	??$_Move_backward_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Move_backward_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag,std::_Undefined_move_tag>
	add	esp, 24					; 00000018H
; Line 3697
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked_move_backward@PAPAUHINSTANCE__@@PAPAU1@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00@Z ENDP ; stdext::_Unchecked_move_backward<HINSTANCE__ * *,HINSTANCE__ * *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@PAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@IPAPAU1@@Z
_TEXT	SEGMENT
$T155148 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@PAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@IPAPAU1@@Z PROC ; std::_Allocate<HINSTANCE__ *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@3
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@3
$LN3@Allocate@3:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate@3
; Line 40
	push	0
	lea	ecx, DWORD PTR $T155148[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T155148[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate@3:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@3:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@PAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@IPAPAU1@@Z ENDP ; std::_Allocate<HINSTANCE__ *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z
_TEXT	SEGMENT
$T155151 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z PROC ; std::_Allocate<std::_Aux_cont>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@4
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@4
$LN3@Allocate@4:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate@4
; Line 40
	push	0
	lea	ecx, DWORD PTR $T155151[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T155151[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate@4:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@4:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Aux_cont>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>::allocator<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
_TEXT	ENDS
PUBLIC	??_G_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::`scalar deleting destructor'
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z PROC ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 59
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z
; Line 60
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@@std@@YAXPAU_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@0@@Z ENDP ; std::_Destroy<std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0UGROUP_MEMBER@@@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UGROUP_MEMBER@@@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z PROC ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node><GROUP_MEMBER>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UGROUP_MEMBER@@@?$allocator@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z ENDP ; std::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>::allocator<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node><GROUP_MEMBER>
_TEXT	ENDS
PUBLIC	??_G_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEPAXI@Z ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node::`scalar deleting destructor'
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 59
	push	0
	mov	ecx, DWORD PTR __Ptr$[ebp]
	call	??_G_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEPAXI@Z
; Line 60
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0UGROUP_MEMBER@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UGROUP_MEMBER@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><GROUP_MEMBER>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UGROUP_MEMBER@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UGROUP_MEMBER@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><GROUP_MEMBER>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0bad_alloc@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0bad_alloc@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0bad_alloc@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0bad_alloc@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0bad_alloc@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0bad_alloc@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0bad_alloc@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0bad_alloc@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
PUBLIC	??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::~_Node
; Function compile flags: /Odtp
;	COMDAT ??_G_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z PROC ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAEPAXI@Z ENDP ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node::~_Node
; Function compile flags: /Odtp
;	COMDAT ??_G_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEPAXI@Z PROC ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAEPAXI@Z ENDP ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ PROC ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::~_Node, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Node@?$_List_nod@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@V?$allocator@V?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@2@@std@@QAE@XZ ENDP ; std::_List_nod<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >,std::allocator<std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> > > >::_Node::~_Node
PUBLIC	??1GROUP_MEMBER@@QAE@XZ				; GROUP_MEMBER::~GROUP_MEMBER
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node::~_Node, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1GROUP_MEMBER@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1GROUP_MEMBER@@QAE@XZ
__ehhandler$??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Node@?$_List_nod@UGROUP_MEMBER@@V?$allocator@UGROUP_MEMBER@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<GROUP_MEMBER,std::allocator<GROUP_MEMBER> >::_Node::~_Node
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1GROUP_MEMBER@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1GROUP_MEMBER@@QAE@XZ$0
__ehfuncinfo$??1GROUP_MEMBER@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1GROUP_MEMBER@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1GROUP_MEMBER@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1GROUP_MEMBER@@QAE@XZ PROC				; GROUP_MEMBER::~GROUP_MEMBER, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1GROUP_MEMBER@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1GROUP_MEMBER@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$??1GROUP_MEMBER@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1GROUP_MEMBER@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1GROUP_MEMBER@@QAE@XZ ENDP				; GROUP_MEMBER::~GROUP_MEMBER
PUBLIC	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@U_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<HINSTANCE__ * *>
; Function compile flags: /Odtp
;	COMDAT ??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z
_TEXT	SEGMENT
__Base_tag$ = -1					; size = 1
__It$ = 8						; size = 4
??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z PROC ; std::_Checked_base<HINSTANCE__ * *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 1163
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1165
	movzx	eax, BYTE PTR __Base_tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR __It$[ebp]
	push	ecx
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@U_Unchanged_checked_iterator_base_type_tag@0@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 8
; Line 1166
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ENDP ; std::_Checked_base<HINSTANCE__ * *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Iter_random@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Iter_random@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@0@Z PROC ; std::_Iter_random<HINSTANCE__ * *,HINSTANCE__ * *>, COMDAT
; Line 993
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 997
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 998
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_random@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@0@Z ENDP ; std::_Iter_random<HINSTANCE__ * *,HINSTANCE__ * *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAUHINSTANCE__@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAUHINSTANCE__@@0@Z PROC ; std::_Ptr_cat<HINSTANCE__ * *,HINSTANCE__ * *>, COMDAT
; Line 1509
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1511
	mov	al, BYTE PTR __Cat$[ebp]
; Line 1512
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Ptr_cat@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAUHINSTANCE__@@0@Z ENDP ; std::_Ptr_cat<HINSTANCE__ * *,HINSTANCE__ * *>
_TEXT	ENDS
EXTRN	__imp__memmove_s:PROC
; Function compile flags: /Odtp
;	COMDAT ??$_Copy_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Off$ = -8						; size = 4
__Result$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag>, COMDAT
; Line 2494
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 2502
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Off$[ebp], eax
; Line 2504
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR __Result$[ebp], eax
; Line 2505
	cmp	DWORD PTR __Off$[ebp], 0
	jle	SHORT $LN1@Copy_opt
; Line 2506
	mov	ecx, DWORD PTR __Off$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN1@Copy_opt:
; Line 2507
	mov	eax, DWORD PTR __Result$[ebp]
; Line 2508
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag>
_TEXT	ENDS
PUBLIC	??$unchecked_fill_n@PAPAUHINSTANCE__@@IPAU1@@stdext@@YAXPAPAUHINSTANCE__@@IABQAU1@@Z ; stdext::unchecked_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_fill_n@PAPAUHINSTANCE__@@IPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAPAUHINSTANCE__@@IPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *,std::allocator<HINSTANCE__ *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
; Line 418
	push	ebp
	mov	ebp, esp
; Line 419
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$unchecked_fill_n@PAPAUHINSTANCE__@@IPAU1@@stdext@@YAXPAPAUHINSTANCE__@@IABQAU1@@Z ; stdext::unchecked_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>
	add	esp, 12					; 0000000cH
; Line 420
	pop	ebp
	ret	0
??$_Uninit_fill_n@PAPAUHINSTANCE__@@IPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@0AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@0AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::allocator<HINSTANCE__ *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 241
	push	ebp
	mov	ebp, esp
; Line 242
	pop	ebp
	ret	0
??$_Destroy_range@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAXPAPAUHINSTANCE__@@0AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::allocator<HINSTANCE__ *> >
_TEXT	ENDS
PUBLIC	??$_Uninit_move@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@U_Undefined_move_tag@3@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *>,std::_Undefined_move_tag>
; Function compile flags: /Odtp
;	COMDAT ??$_Unchecked_uninitialized_move@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@std@@@Z
_TEXT	SEGMENT
$T155219 = -2						; size = 1
$T155218 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Unchecked_uninitialized_move@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@std@@@Z PROC ; stdext::_Unchecked_uninitialized_move<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
; Line 861
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 864
	xor	eax, eax
	mov	BYTE PTR $T155218[ebp], al
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Move_cat@PAPAUHINSTANCE__@@@std@@YA?AU_Undefined_move_tag@0@ABQAPAUHINSTANCE__@@@Z ; std::_Move_cat<HINSTANCE__ * *>
	add	esp, 4
	mov	BYTE PTR $T155219[ebp], al
	movzx	edx, BYTE PTR $T155218[ebp]
	push	edx
	movzx	eax, BYTE PTR $T155219[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@U_Undefined_move_tag@3@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_move<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *>,std::_Undefined_move_tag>
	add	esp, 24					; 00000018H
; Line 865
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Unchecked_uninitialized_move@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@std@@@Z ENDP ; stdext::_Unchecked_uninitialized_move<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z PROC ; std::_Fill<HINSTANCE__ * *,HINSTANCE__ *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 3156
	push	ebp
	mov	ebp, esp
; Line 3158
	jmp	SHORT $LN3@Fill
$LN2@Fill:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN3@Fill:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Fill
; Line 3159
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN2@Fill
$LN4@Fill:
; Line 3160
	pop	ebp
	ret	0
??$_Fill@PAPAUHINSTANCE__@@PAU1@@std@@YAXPAPAUHINSTANCE__@@0ABQAU1@@Z ENDP ; std::_Fill<HINSTANCE__ * *,HINSTANCE__ *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Move_cat@PAPAUHINSTANCE__@@@std@@YA?AU_Undefined_move_tag@0@ABQAPAUHINSTANCE__@@@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
??$_Move_cat@PAPAUHINSTANCE__@@@std@@YA?AU_Undefined_move_tag@0@ABQAPAUHINSTANCE__@@@Z PROC ; std::_Move_cat<HINSTANCE__ * *>, COMDAT
; Line 1200
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 1202
	mov	al, BYTE PTR __Cat$[ebp]
; Line 1203
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move_cat@PAPAUHINSTANCE__@@@std@@YA?AU_Undefined_move_tag@0@ABQAPAUHINSTANCE__@@@Z ENDP ; std::_Move_cat<HINSTANCE__ * *>
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag>
; Function compile flags: /Odtp
;	COMDAT ??$_Move_backward_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T155227 = -2						; size = 1
$T155226 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__First_dest_cat$ = 20					; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Move_backward_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Move_backward_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag,std::_Undefined_move_tag>, COMDAT
; Line 2752
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 2754
	xor	eax, eax
	mov	BYTE PTR $T155226[ebp], al
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Ptr_cat@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAUHINSTANCE__@@0@Z ; std::_Ptr_cat<HINSTANCE__ * *,HINSTANCE__ * *>
	add	esp, 8
	mov	BYTE PTR $T155227[ebp], al
	movzx	eax, BYTE PTR $T155226[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T155227[ebp]
	push	ecx
	movzx	edx, BYTE PTR __First_dest_cat$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_backward_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_backward_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag>
	add	esp, 24					; 00000018H
; Line 2755
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Move_backward_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@U_Undefined_move_tag@3@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Move_backward_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag,std::_Undefined_move_tag>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@U_Unchanged_checked_iterator_base_type_tag@0@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
___formal$ = 12						; size = 1
??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@U_Unchanged_checked_iterator_base_type_tag@0@@Z PROC ; std::_Checked_base<HINSTANCE__ * *>, COMDAT
; Line 1146
	push	ebp
	mov	ebp, esp
; Line 1147
	mov	eax, DWORD PTR __It$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 1148
	pop	ebp
	ret	0
??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@U_Unchanged_checked_iterator_base_type_tag@0@@Z ENDP ; std::_Checked_base<HINSTANCE__ * *>
_TEXT	ENDS
PUBLIC	??$_Fill_n@PAPAUHINSTANCE__@@IPAU1@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>
PUBLIC	??$_Iter_cat@PAPAUHINSTANCE__@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@@Z ; std::_Iter_cat<HINSTANCE__ * *>
; Function compile flags: /Odtp
;	COMDAT ??$unchecked_fill_n@PAPAUHINSTANCE__@@IPAU1@@stdext@@YAXPAPAUHINSTANCE__@@IABQAU1@@Z
_TEXT	SEGMENT
$T155233 = -2						; size = 1
$T155232 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$unchecked_fill_n@PAPAUHINSTANCE__@@IPAU1@@stdext@@YAXPAPAUHINSTANCE__@@IABQAU1@@Z PROC ; stdext::unchecked_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>, COMDAT
; Line 3720
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 3721
	xor	eax, eax
	mov	BYTE PTR $T155232[ebp], al
	movzx	ecx, BYTE PTR $T155232[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	lea	eax, DWORD PTR $T155233[ebp]
	push	eax
	call	??$_Iter_cat@PAPAUHINSTANCE__@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@@Z ; std::_Iter_cat<HINSTANCE__ * *>
	add	esp, 8
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Fill_n@PAPAUHINSTANCE__@@IPAU1@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>
	add	esp, 20					; 00000014H
; Line 3722
	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_fill_n@PAPAUHINSTANCE__@@IPAU1@@stdext@@YAXPAPAUHINSTANCE__@@IABQAU1@@Z ENDP ; stdext::unchecked_fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>
_TEXT	ENDS
PUBLIC	??$unchecked_uninitialized_copy@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@std@@@Z ; stdext::unchecked_uninitialized_copy<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ??$_Uninit_move@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@U_Undefined_move_tag@3@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_move@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@U_Undefined_move_tag@3@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_move<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *>,std::_Undefined_move_tag>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
; Line 206
	push	ebp
	mov	ebp, esp
; Line 207
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$unchecked_uninitialized_copy@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@std@@@Z ; stdext::unchecked_uninitialized_copy<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >
	add	esp, 16					; 00000010H
; Line 208
	pop	ebp
	ret	0
??$_Uninit_move@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@U_Undefined_move_tag@3@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@0@U_Undefined_move_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_move<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *>,std::_Undefined_move_tag>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Off$ = -8						; size = 4
__Result$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Copy_backward_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_backward_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 2698
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 2706
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Off$[ebp], eax
; Line 2710
	mov	ecx, DWORD PTR __Off$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR __Dest$[ebp]
	sub	edx, ecx
	mov	DWORD PTR __Result$[ebp], edx
; Line 2711
	cmp	DWORD PTR __Off$[ebp], 0
	jle	SHORT $LN1@Copy_backw
; Line 2712
	mov	eax, DWORD PTR __Off$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Off$[ebp]
	shl	edx, 2
	push	edx
	mov	eax, DWORD PTR __Result$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN1@Copy_backw:
; Line 2713
	mov	eax, DWORD PTR __Result$[ebp]
; Line 2714
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_backward_opt@PAPAUHINSTANCE__@@PAPAU1@Urandom_access_iterator_tag@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00Urandom_access_iterator_tag@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<HINSTANCE__ * *,HINSTANCE__ * *,std::random_access_iterator_tag>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@PAPAUHINSTANCE__@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAPAUHINSTANCE__@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@@Z PROC ; std::_Iter_cat<HINSTANCE__ * *>, COMDAT
; Line 952
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 954
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 955
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Iter_cat@PAPAUHINSTANCE__@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAUHINSTANCE__@@@Z ENDP ; std::_Iter_cat<HINSTANCE__ * *>
_TEXT	ENDS
PUBLIC	??$_Fill_n@PAPAUHINSTANCE__@@IPAU1@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@U_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>
; Function compile flags: /Odtp
;	COMDAT ??$_Fill_n@PAPAUHINSTANCE__@@IPAU1@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
$T155242 = -5						; size = 1
__Last$ = -4						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
___formal$ = 24						; size = 1
??$_Fill_n@PAPAUHINSTANCE__@@IPAU1@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>, COMDAT
; Line 3250
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 3252
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __First$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR __Last$[ebp], edx
; Line 3254
	xor	eax, eax
	mov	BYTE PTR $T155242[ebp], al
	movzx	ecx, BYTE PTR $T155242[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	call	??$_Fill_n@PAPAUHINSTANCE__@@IPAU1@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@U_Range_checked_iterator_tag@0@@Z ; std::_Fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>
	add	esp, 16					; 00000010H
; Line 3255
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Fill_n@PAPAUHINSTANCE__@@IPAU1@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@Urandom_access_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ??$unchecked_uninitialized_copy@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@std@@@Z
_TEXT	SEGMENT
$T155246 = -2						; size = 1
$T155245 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$unchecked_uninitialized_copy@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@std@@@Z PROC ; stdext::unchecked_uninitialized_copy<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
; Line 819
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 822
	xor	eax, eax
	mov	BYTE PTR $T155245[ebp], al
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Ptr_cat@PAPAUHINSTANCE__@@PAPAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@AAPAPAUHINSTANCE__@@0@Z ; std::_Ptr_cat<HINSTANCE__ * *,HINSTANCE__ * *>
	add	esp, 8
	mov	BYTE PTR $T155246[ebp], al
	movzx	eax, BYTE PTR $T155245[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T155246[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Checked_base@PAPAUHINSTANCE__@@@std@@YAPAPAUHINSTANCE__@@AAPAPAU1@@Z ; std::_Checked_base<HINSTANCE__ * *>
	add	esp, 4
	push	eax
	call	??$_Uninit_copy@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Uninit_copy<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >
	add	esp, 24					; 00000018H
; Line 823
	mov	esp, ebp
	pop	ebp
	ret	0
??$unchecked_uninitialized_copy@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@stdext@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@std@@@Z ENDP ; stdext::unchecked_uninitialized_copy<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Fill_n@PAPAUHINSTANCE__@@IPAU1@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Fill_n@PAPAUHINSTANCE__@@IPAU1@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 3196
	push	ebp
	mov	ebp, esp
; Line 3197
	jmp	SHORT $LN3@Fill_n
$LN2@Fill_n:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 4
	mov	DWORD PTR __First$[ebp], ecx
$LN3@Fill_n:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Fill_n
; Line 3198
	mov	edx, DWORD PTR __First$[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN2@Fill_n
$LN4@Fill_n:
; Line 3199
	pop	ebp
	ret	0
??$_Fill_n@PAPAUHINSTANCE__@@IPAU1@@std@@YAXPAPAUHINSTANCE__@@IABQAU1@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Fill_n<HINSTANCE__ * *,unsigned int,HINSTANCE__ *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninit_copy@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Uninit_copy<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\memory
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 148
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 149
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Dest$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR __Result$[ebp], eax
; Line 150
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@Uninit_cop
; Line 151
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	DWORD PTR __imp__memmove_s
	add	esp, 16					; 00000010H
$LN1@Uninit_cop:
; Line 152
	mov	eax, DWORD PTR __Result$[ebp]
; Line 153
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAPAUHINSTANCE__@@PAPAU1@V?$allocator@PAUHINSTANCE__@@@std@@@std@@YAPAPAUHINSTANCE__@@PAPAU1@00AAV?$allocator@PAUHINSTANCE__@@@0@U_Scalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<HINSTANCE__ * *,HINSTANCE__ * *,std::allocator<HINSTANCE__ *> >
_TEXT	ENDS
PUBLIC	??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
EXTRN	_atexit:PROC
; Function compile flags: /Odtp
;	COMDAT ??__EvDLLs@@YAXXZ
text$yc	SEGMENT
??__EvDLLs@@YAXXZ PROC					; `dynamic initializer for 'vDLLs'', COMDAT
; File g:\max\bastelstube\fl\flhook source\flhookplugin_mod\plugins\playercntl_plugin\src\pluginutilities.cpp
; Line 919
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?vDLLs@@3V?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@A ; vDLLs
	call	??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
	push	OFFSET ??__FvDLLs@@YAXXZ		; `dynamic atexit destructor for 'vDLLs''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EvDLLs@@YAXXZ ENDP					; `dynamic initializer for 'vDLLs''
text$yc	ENDS
PUBLIC	??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ ; std::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::~_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
PUBLIC	?_Buy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE_NI@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Buy
PUBLIC	??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z ; std::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
PUBLIC	??0?$allocator@PAUHINSTANCE__@@@std@@QAE@XZ	; std::allocator<HINSTANCE__ *>::allocator<HINSTANCE__ *>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T155256 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >, COMDAT
; _this$ = ecx
; Line 470
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T155256[ebp], esp
	call	??0?$allocator@PAUHINSTANCE__@@@std@@QAE@XZ ; std::allocator<HINSTANCE__ *>::allocator<HINSTANCE__ *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z ; std::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 471
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE_NI@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Buy
; Line 472
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
__ehhandler$??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >::~_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::~_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >::~_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >::~_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >
__ehhandler$??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::~_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ?_Buy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE_NI@Z PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Buy, COMDAT
; _this$ = ecx
; Line 1102
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1103
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], 0
; Line 1104
	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy
; Line 1105
	xor	al, al
	jmp	SHORT $LN5@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:
; Line 1106
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QBEIXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy
; Line 1107
	call	?_Xlen@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@KAXXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Xlen
; Line 1108
	jmp	SHORT $LN3@Buy
$LN2@Buy:
; Line 1110
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@PAUHINSTANCE__@@@std@@QAEPAPAUHINSTANCE__@@I@Z ; std::allocator<HINSTANCE__ *>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1111
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+16], ecx
; Line 1112
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR __Capacity$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], edx
$LN3@Buy:
; Line 1114
	mov	al, 1
$LN5@Buy:
; Line 1115
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Buy
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >
PUBLIC	??0?$allocator@PAUHINSTANCE__@@@std@@QAE@ABV01@@Z ; std::allocator<HINSTANCE__ *>::allocator<HINSTANCE__ *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T155277 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z PROC ; std::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >, COMDAT
; _this$ = ecx
; Line 425
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T155277[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@PAUHINSTANCE__@@@std@@QAE@ABV01@@Z ; std::allocator<HINSTANCE__ *>::allocator<HINSTANCE__ *>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$allocator@PAUHINSTANCE__@@@std@@QAE@ABV01@@Z ; std::allocator<HINSTANCE__ *>::allocator<HINSTANCE__ *>
; Line 426
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >::~_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >
__ehhandler$??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z ENDP ; std::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Vector_val<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ$0
__ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >::~_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 439
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
; Line 440
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >::~_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PAUHINSTANCE__@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAUHINSTANCE__@@@std@@QAE@XZ PROC	; std::allocator<HINSTANCE__ *>::allocator<HINSTANCE__ *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAUHINSTANCE__@@@std@@QAE@XZ ENDP	; std::allocator<HINSTANCE__ *>::allocator<HINSTANCE__ *>
_TEXT	ENDS
PUBLIC	??$?0PAUHINSTANCE__@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAUHINSTANCE__@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><HINSTANCE__ *>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z$1
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z
_TEXT	SEGMENT
tv133 = -32						; size = 4
_this$ = -28						; size = 4
$T155300 = -24						; size = 4
$T155299 = -20						; size = 4
$T155298 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::_Container_base_aux
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0PAUHINSTANCE__@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAUHINSTANCE__@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><HINSTANCE__ *>
; Line 420
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
	mov	DWORD PTR $T155300[ebp], eax
	mov	ecx, DWORD PTR $T155300[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T155299[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T155299[ebp], 0
	je	SHORT $LN3@Container_@3
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T155299[ebp]
	call	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN4@Container_@3
$LN3@Container_@3:
	mov	DWORD PTR tv133[ebp], 0
$LN4@Container_@3:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T155298[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T155298[ebp]
	mov	DWORD PTR [ecx], edx
; Line 421
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z$1:
	mov	eax, DWORD PTR $T155300[ebp]
	push	eax
	mov	ecx, DWORD PTR $T155299[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAE@V?$allocator@PAUHINSTANCE__@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >::_Container_base_aux_alloc_real<std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@PAUHINSTANCE__@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@PAUHINSTANCE__@@@std@@QAE@ABV01@@Z PROC	; std::allocator<HINSTANCE__ *>::allocator<HINSTANCE__ *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@PAUHINSTANCE__@@@std@@QAE@ABV01@@Z ENDP	; std::allocator<HINSTANCE__ *>::allocator<HINSTANCE__ *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0PAUHINSTANCE__@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAUHINSTANCE__@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0PAUHINSTANCE__@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAUHINSTANCE__@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><HINSTANCE__ *>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0PAUHINSTANCE__@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@PAUHINSTANCE__@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><HINSTANCE__ *>
_TEXT	ENDS
PUBLIC	??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::~vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ??__FvDLLs@@YAXXZ
text$yd	SEGMENT
??__FvDLLs@@YAXXZ PROC					; `dynamic atexit destructor for 'vDLLs'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?vDLLs@@3V?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@A ; vDLLs
	call	??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::~vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
	pop	ebp
	ret	0
??__FvDLLs@@YAXXZ ENDP					; `dynamic atexit destructor for 'vDLLs''
text$yd	ENDS
PUBLIC	?_Tidy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
xdata$x	SEGMENT
__unwindtable$??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::~vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >, COMDAT
; _this$ = ecx
; Line 558
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 559
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXXZ ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Tidy
; Line 560
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
__ehhandler$??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@QAE@XZ ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::~vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXXZ PROC ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1124
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@Tidy
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXPAPAUHINSTANCE__@@0@Z ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Destroy
; Line 1132
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	sub	ecx, DWORD PTR [eax+12]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@PAUHINSTANCE__@@@std@@QAEXPAPAUHINSTANCE__@@I@Z ; std::allocator<HINSTANCE__ *>::deallocate
$LN1@Tidy:
; Line 1134
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 1135
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@IAEXXZ ENDP ; std::vector<HINSTANCE__ *,std::allocator<HINSTANCE__ *> >::_Tidy
_TEXT	ENDS
PUBLIC	?vDLLs@@3V?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@A ; vDLLs
_BSS	SEGMENT
?vDLLs@@3V?$vector@PAUHINSTANCE__@@V?$allocator@PAUHINSTANCE__@@@std@@@std@@A DB 018H DUP (?) ; vDLLs
_BSS	ENDS
CRT$XCU	SEGMENT
_vDLLs$initializer$ DD FLAT:??__EvDLLs@@YAXXZ
CRT$XCU	ENDS
END
