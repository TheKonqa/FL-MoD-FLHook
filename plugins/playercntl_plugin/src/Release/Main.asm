; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	g:\Max\Bastelstube\GitHub\FL-MoD-FLHook\plugins\playercntl_plugin\src\Main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?set_fSpinProtectMass@@3MA			; set_fSpinProtectMass
PUBLIC	?set_fSpinImpulseMultiplier@@3MA		; set_fSpinImpulseMultiplier
PUBLIC	?returncode@@3W4PLUGIN_RETURNCODE@@A		; returncode
PUBLIC	?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB ; std::_Is_swap_move<std::_Swap_move_tag>::_Value
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?set_iPluginDebug@@3HA				; set_iPluginDebug
PUBLIC	?set_bLogLooting@@3_NA				; set_bLogLooting
PUBLIC	?set_bEnablePimpShip@@3_NA			; set_bEnablePimpShip
PUBLIC	?set_bEnableRenameMe@@3_NA			; set_bEnableRenameMe
PUBLIC	?set_bEnableMoveChar@@3_NA			; set_bEnableMoveChar
PUBLIC	?set_bEnableRestart@@3_NA			; set_bEnableRestart
PUBLIC	?set_bEnableGiveCash@@3_NA			; set_bEnableGiveCash
PUBLIC	?set_bLocalTime@@3_NA				; set_bLocalTime
PUBLIC	?UserCmds@@3PAUUSERCMD@@A			; UserCmds
EXTRN	?UserCmd_SetTagPass@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Rename::UserCmd_SetTagPass
EXTRN	?UserCmd_DropTag@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Rename::UserCmd_DropTag
EXTRN	?UserCmd_MakeTag@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Rename::UserCmd_MakeTag
EXTRN	?UserCmd_Net@SystemSensor@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; SystemSensor::UserCmd_Net
EXTRN	?UserCmd_ShowScan@SystemSensor@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; SystemSensor::UserCmd_ShowScan
EXTRN	?UserCmd_ChargeJumpDrive@HyperJump@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; HyperJump::UserCmd_ChargeJumpDrive
EXTRN	?UserCmd_ActivateJumpDrive@HyperJump@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; HyperJump::UserCmd_ActivateJumpDrive
EXTRN	?UserCmd_SetCoords@HyperJump@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; HyperJump::UserCmd_SetCoords
EXTRN	?UserCmd_Survey@HyperJump@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; HyperJump::UserCmd_Survey
EXTRN	?UserCmd_Shields@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; MiscCmds::UserCmd_Shields
EXTRN	?UserCmd_Lights@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; MiscCmds::UserCmd_Lights
EXTRN	?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_Time
EXTRN	?UserCmd_SetInfo@PlayerInfo@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; PlayerInfo::UserCmd_SetInfo
EXTRN	?UserCmd_ShowInfo@PlayerInfo@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; PlayerInfo::UserCmd_ShowInfo
EXTRN	?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_MailDel
EXTRN	?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_MailShow
EXTRN	?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_CustomHelp
EXTRN	?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_SetChatTime
EXTRN	?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_ShowLastPMSender
EXTRN	?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_FactionInvite
EXTRN	?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_FactionMsg
EXTRN	?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_PrivateMsg
EXTRN	?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_PrivateMsgID
EXTRN	?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_ReplyToLastPMSender
EXTRN	?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_SendToLastTarget
EXTRN	?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_GMsg
EXTRN	?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_LMsg
EXTRN	?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_SMsg
EXTRN	?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_ShowMsgs
EXTRN	?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_SetMsg
EXTRN	?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Message::UserCmd_BuiltInCmdHelp
EXTRN	?UserCmd_DrawCash@GiveCash@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; GiveCash::UserCmd_DrawCash
EXTRN	?UserCmd_ShowCash@GiveCash@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; GiveCash::UserCmd_ShowCash
EXTRN	?UserCmd_SetCashCode@GiveCash@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; GiveCash::UserCmd_SetCashCode
EXTRN	?UserCmd_GiveCash@GiveCash@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; GiveCash::UserCmd_GiveCash
EXTRN	?UserCmd_ShowRestarts@Restart@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Restart::UserCmd_ShowRestarts
EXTRN	?UserCmd_Restart@Restart@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Restart::UserCmd_Restart
EXTRN	?UserCmd_SetMoveCharCode@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Rename::UserCmd_SetMoveCharCode
EXTRN	?UserCmd_MoveChar@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Rename::UserCmd_MoveChar
EXTRN	?UserCmd_RenameMe@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; Rename::UserCmd_RenameMe
EXTRN	?UserCmd_BuyNow@PimpShip@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; PimpShip::UserCmd_BuyNow
EXTRN	?UserCmd_ChangeItem@PimpShip@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; PimpShip::UserCmd_ChangeItem
EXTRN	?UserCmd_ShowItems@PimpShip@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; PimpShip::UserCmd_ShowItems
EXTRN	?UserCmd_ShowSetup@PimpShip@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; PimpShip::UserCmd_ShowSetup
EXTRN	?UserCmd_PimpShip@PimpShip@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; PimpShip::UserCmd_PimpShip
EXTRN	?UserCmd_Coin@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; MiscCmds::UserCmd_Coin
EXTRN	?UserCmd_Dice@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; MiscCmds::UserCmd_Dice
EXTRN	?UserCmd_DropRep@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; MiscCmds::UserCmd_DropRep
EXTRN	?UserCmd_Stuck@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; MiscCmds::UserCmd_Stuck
EXTRN	?UserCmd_Pos@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z:PROC ; MiscCmds::UserCmd_Pos
_BSS	SEGMENT
?set_fSpinProtectMass@@3MA DD 01H DUP (?)		; set_fSpinProtectMass
?set_fSpinImpulseMultiplier@@3MA DD 01H DUP (?)		; set_fSpinImpulseMultiplier
?returncode@@3W4PLUGIN_RETURNCODE@@A DD 01H DUP (?)	; returncode
?set_iPluginDebug@@3HA DD 01H DUP (?)			; set_iPluginDebug
?set_bLogLooting@@3_NA DB 01H DUP (?)			; set_bLogLooting
	ALIGN	4

?set_bEnablePimpShip@@3_NA DB 01H DUP (?)		; set_bEnablePimpShip
	ALIGN	4

?set_bEnableRenameMe@@3_NA DB 01H DUP (?)		; set_bEnableRenameMe
	ALIGN	4

?set_bEnableMoveChar@@3_NA DB 01H DUP (?)		; set_bEnableMoveChar
	ALIGN	4

?set_bEnableRestart@@3_NA DB 01H DUP (?)		; set_bEnableRestart
	ALIGN	4

?set_bEnableGiveCash@@3_NA DB 01H DUP (?)		; set_bEnableGiveCash
	ALIGN	4

?set_bLocalTime@@3_NA DB 01H DUP (?)			; set_bLocalTime
_BSS	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB
CONST	SEGMENT
?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB DB 01H ; std::_Is_swap_move<std::_Swap_move_tag>::_Value
CONST	ENDS
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:$SG63979
	ORG $+4
?UserCmds@@3PAUUSERCMD@@A DD FLAT:$SG143107		; UserCmds
	DD	FLAT:?UserCmd_Pos@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143108
	DD	FLAT:$SG143109
	DD	FLAT:?UserCmd_Stuck@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143110
	DD	FLAT:$SG143111
	DD	FLAT:?UserCmd_DropRep@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143112
	DD	FLAT:$SG143113
	DD	FLAT:?UserCmd_Dice@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143114
	DD	FLAT:$SG143115
	DD	FLAT:?UserCmd_Coin@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143116
	DD	FLAT:$SG143117
	DD	FLAT:?UserCmd_PimpShip@PimpShip@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143118
	DD	FLAT:$SG143119
	DD	FLAT:?UserCmd_ShowSetup@PimpShip@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143120
	DD	FLAT:$SG143121
	DD	FLAT:?UserCmd_ShowItems@PimpShip@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143122
	DD	FLAT:$SG143123
	DD	FLAT:?UserCmd_ChangeItem@PimpShip@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143124
	DD	FLAT:$SG143125
	DD	FLAT:?UserCmd_BuyNow@PimpShip@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143126
	DD	FLAT:$SG143127
	DD	FLAT:?UserCmd_RenameMe@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143128
	DD	FLAT:$SG143129
	DD	FLAT:?UserCmd_MoveChar@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143130
	DD	FLAT:$SG143131
	DD	FLAT:?UserCmd_SetMoveCharCode@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143132
	DD	FLAT:$SG143133
	DD	FLAT:?UserCmd_Restart@Restart@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143134
	DD	FLAT:$SG143135
	DD	FLAT:?UserCmd_ShowRestarts@Restart@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143136
	DD	FLAT:$SG143137
	DD	FLAT:?UserCmd_GiveCash@GiveCash@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143138
	DD	FLAT:$SG143139
	DD	FLAT:?UserCmd_GiveCash@GiveCash@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143140
	DD	FLAT:$SG143141
	DD	FLAT:?UserCmd_SetCashCode@GiveCash@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143142
	DD	FLAT:$SG143143
	DD	FLAT:?UserCmd_ShowCash@GiveCash@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143144
	DD	FLAT:$SG143145
	DD	FLAT:?UserCmd_DrawCash@GiveCash@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143146
	DD	FLAT:$SG143147
	DD	FLAT:?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143148
	DD	FLAT:$SG143149
	DD	FLAT:?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143150
	DD	FLAT:$SG143151
	DD	FLAT:?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143152
	DD	FLAT:$SG143153
	DD	FLAT:?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143154
	DD	FLAT:$SG143155
	DD	FLAT:?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143156
	DD	FLAT:$SG143157
	DD	FLAT:?UserCmd_BuiltInCmdHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143158
	DD	FLAT:$SG143159
	DD	FLAT:?UserCmd_SetMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143160
	DD	FLAT:$SG143161
	DD	FLAT:?UserCmd_ShowMsgs@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143162
	DD	FLAT:$SG143163
	DD	FLAT:?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143164
	DD	FLAT:$SG143165
	DD	FLAT:?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143166
	DD	FLAT:$SG143167
	DD	FLAT:?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143168
	DD	FLAT:$SG143169
	DD	FLAT:?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143170
	DD	FLAT:$SG143171
	DD	FLAT:?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143172
	DD	FLAT:$SG143173
	DD	FLAT:?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143174
	DD	FLAT:$SG143175
	DD	FLAT:?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143176
	DD	FLAT:$SG143177
	DD	FLAT:?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143178
	DD	FLAT:$SG143179
	DD	FLAT:?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143180
	DD	FLAT:$SG143181
	DD	FLAT:?UserCmd_SMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143182
	DD	FLAT:$SG143183
	DD	FLAT:?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143184
	DD	FLAT:$SG143185
	DD	FLAT:?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143186
	DD	FLAT:$SG143187
	DD	FLAT:?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143188
	DD	FLAT:$SG143189
	DD	FLAT:?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143190
	DD	FLAT:$SG143191
	DD	FLAT:?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143192
	DD	FLAT:$SG143193
	DD	FLAT:?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143194
	DD	FLAT:$SG143195
	DD	FLAT:?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143196
	DD	FLAT:$SG143197
	DD	FLAT:?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143198
	DD	FLAT:$SG143199
	DD	FLAT:?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143200
	DD	FLAT:$SG143201
	DD	FLAT:?UserCmd_LMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143202
	DD	FLAT:$SG143203
	DD	FLAT:?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143204
	DD	FLAT:$SG143205
	DD	FLAT:?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143206
	DD	FLAT:$SG143207
	DD	FLAT:?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143208
	DD	FLAT:$SG143209
	DD	FLAT:?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143210
	DD	FLAT:$SG143211
	DD	FLAT:?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143212
	DD	FLAT:$SG143213
	DD	FLAT:?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143214
	DD	FLAT:$SG143215
	DD	FLAT:?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143216
	DD	FLAT:$SG143217
	DD	FLAT:?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143218
	DD	FLAT:$SG143219
	DD	FLAT:?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143220
	DD	FLAT:$SG143221
	DD	FLAT:?UserCmd_GMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143222
	DD	FLAT:$SG143223
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143224
	DD	FLAT:$SG143225
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143226
	DD	FLAT:$SG143227
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143228
	DD	FLAT:$SG143229
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143230
	DD	FLAT:$SG143231
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143232
	DD	FLAT:$SG143233
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143234
	DD	FLAT:$SG143235
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143236
	DD	FLAT:$SG143237
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143238
	DD	FLAT:$SG143239
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143240
	DD	FLAT:$SG143241
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143242
	DD	FLAT:$SG143243
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143244
	DD	FLAT:$SG143245
	DD	FLAT:?UserCmd_SendToLastTarget@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143246
	DD	FLAT:$SG143247
	DD	FLAT:?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143248
	DD	FLAT:$SG143249
	DD	FLAT:?UserCmd_ReplyToLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143250
	DD	FLAT:$SG143251
	DD	FLAT:?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143252
	DD	FLAT:$SG143253
	DD	FLAT:?UserCmd_PrivateMsgID@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143254
	DD	FLAT:$SG143255
	DD	FLAT:?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143256
	DD	FLAT:$SG143257
	DD	FLAT:?UserCmd_PrivateMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143258
	DD	FLAT:$SG143259
	DD	FLAT:?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143260
	DD	FLAT:$SG143261
	DD	FLAT:?UserCmd_FactionMsg@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143262
	DD	FLAT:$SG143263
	DD	FLAT:?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143264
	DD	FLAT:$SG143265
	DD	FLAT:?UserCmd_FactionInvite@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143266
	DD	FLAT:$SG143267
	DD	FLAT:?UserCmd_ShowLastPMSender@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143268
	DD	FLAT:$SG143269
	DD	FLAT:?UserCmd_SetChatTime@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143270
	DD	FLAT:$SG143271
	DD	FLAT:?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143272
	DD	FLAT:$SG143273
	DD	FLAT:?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143274
	DD	FLAT:$SG143275
	DD	FLAT:?UserCmd_CustomHelp@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143276
	DD	FLAT:$SG143277
	DD	FLAT:?UserCmd_MailShow@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143278
	DD	FLAT:$SG143279
	DD	FLAT:?UserCmd_MailDel@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143280
	DD	FLAT:$SG143281
	DD	FLAT:?UserCmd_ShowInfo@PlayerInfo@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143282
	DD	FLAT:$SG143283
	DD	FLAT:?UserCmd_SetInfo@PlayerInfo@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143284
	DD	FLAT:$SG143285
	DD	FLAT:?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143286
	DD	FLAT:$SG143287
	DD	FLAT:?UserCmd_Time@Message@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143288
	DD	FLAT:$SG143289
	DD	FLAT:?UserCmd_ShowInfo@PlayerInfo@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143290
	DD	FLAT:$SG143291
	DD	FLAT:?UserCmd_ShowInfo@PlayerInfo@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143292
	DD	FLAT:$SG143293
	DD	FLAT:?UserCmd_Lights@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143294
	DD	FLAT:$SG143295
	DD	FLAT:?UserCmd_Lights@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143296
	DD	FLAT:$SG143297
	DD	FLAT:?UserCmd_Shields@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143298
	DD	FLAT:$SG143299
	DD	FLAT:?UserCmd_Shields@MiscCmds@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143300
	DD	FLAT:$SG143301
	DD	FLAT:?UserCmd_Survey@HyperJump@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143302
	DD	FLAT:$SG143303
	DD	FLAT:?UserCmd_SetCoords@HyperJump@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143304
	DD	FLAT:$SG143305
	DD	FLAT:?UserCmd_ActivateJumpDrive@HyperJump@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143306
	DD	FLAT:$SG143307
	DD	FLAT:?UserCmd_ActivateJumpDrive@HyperJump@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143308
	DD	FLAT:$SG143309
	DD	FLAT:?UserCmd_ChargeJumpDrive@HyperJump@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143310
	DD	FLAT:$SG143311
	DD	FLAT:?UserCmd_ChargeJumpDrive@HyperJump@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143312
	DD	FLAT:$SG143313
	DD	FLAT:?UserCmd_ShowScan@SystemSensor@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143314
	DD	FLAT:$SG143315
	DD	FLAT:?UserCmd_ShowScan@SystemSensor@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143316
	DD	FLAT:$SG143317
	DD	FLAT:?UserCmd_Net@SystemSensor@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143318
	DD	FLAT:$SG143319
	DD	FLAT:?UserCmd_MakeTag@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143320
	DD	FLAT:$SG143321
	DD	FLAT:?UserCmd_DropTag@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143322
	DD	FLAT:$SG143323
	DD	FLAT:?UserCmd_SetTagPass@Rename@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@0PBG@Z
	DD	FLAT:$SG143324
_DATA	ENDS
CONST	SEGMENT
$SG63979 DB	'bad allocation', 00H
	ORG $+1
$SG141987 DB	'\flhook_plugins\playercntl.ini', 00H
	ORG $+1
$SG141990 DB	'Debug', 00H
	ORG $+2
$SG141991 DB	'General', 00H
$SG141994 DB	'N', 00H, 'O', 00H, 'T', 00H, 'I', 00H, 'C', 00H, 'E', 00H
	DB	':', 00H, ' ', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H
	DB	'r', 00H, 'o', 00H, 'l', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'b'
	DB	00H, 'u', 00H, 'g', 00H, '=', 00H, '%', 00H, 'd', 00H, 0aH, 00H
	DB	00H, 00H
	ORG $+2
$SG141997 DB	'LogLooting', 00H
	ORG $+1
$SG141998 DB	'General', 00H
$SG142001 DB	'EnableMoveChar', 00H
	ORG $+1
$SG142002 DB	'General', 00H
$SG142005 DB	'EnableRenameMe', 00H
	ORG $+1
$SG142006 DB	'General', 00H
$SG142009 DB	'EnablePimpShip', 00H
	ORG $+1
$SG142010 DB	'General', 00H
$SG142013 DB	'EnableRestart', 00H
	ORG $+2
$SG142014 DB	'General', 00H
$SG142017 DB	'EnableGiveCash', 00H
	ORG $+1
$SG142018 DB	'General', 00H
$SG142021 DB	'SpinProtectionMass', 00H
	ORG $+1
$SG142022 DB	'General', 00H
$SG142025 DB	'SpinProtectionMultiplier', 00H
	ORG $+3
$SG142026 DB	'General', 00H
$SG142029 DB	'LocalTime', 00H
	ORG $+2
$SG142030 DB	'General', 00H
$SG142049 DB	'NOTICE: Death charname=%s killername=%s system=%08x', 00H
$SG142065 DB	'info_access_denied', 00H
	ORG $+5
$SG142067 DB	'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'D', 00H, 'e', 00H, 'n', 00H, 'i', 00H, 'e', 00H, 'd'
	DB	00H, '!', 00H, ' ', 00H, 'R', 00H, 'e', 00H, 'q', 00H, 'u', 00H
	DB	'e', 00H, 's', 00H, 't', 00H, ' ', 00H, 't', 00H, 'o', 00H, ' '
	DB	00H, 'd', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'd', 00H
	DB	'e', 00H, 'n', 00H, 'i', 00H, 'e', 00H, 'd', 00H, '.', 00H, ' '
	DB	00H, 'W', 00H, 'e', 00H, ' ', 00H, 'd', 00H, 'o', 00H, 'n', 00H
	DB	'''', 00H, 't', 00H, ' ', 00H, 'w', 00H, 'a', 00H, 'n', 00H, 't'
	DB	00H, ' ', 00H, 'y', 00H, 'o', 00H, 'u', 00H, 'r', 00H, ' ', 00H
	DB	'k', 00H, 'i', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r'
	DB	00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'h', 00H
	DB	'e', 00H, 'r', 00H, 'e', 00H, '.', 00H, 00H, 00H
$SG142068 DB	'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'D', 00H, 'e', 00H, 'n', 00H, 'i', 00H, 'e', 00H, 'd'
	DB	00H, '!', 00H, ' ', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'k', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'q'
	DB	00H, 'u', 00H, 'e', 00H, 's', 00H, 't', 00H, ' ', 00H, 'r', 00H
	DB	'e', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'e', 00H, 'd'
	DB	00H, '.', 00H, ' ', 00H, 'Y', 00H, 'o', 00H, 'u', 00H, 'r', 00H
	DB	' ', 00H, 'p', 00H, 'a', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 's'
	DB	00H, ' ', 00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'n', 00H
	DB	'o', 00H, ' ', 00H, 'g', 00H, 'o', 00H, 'o', 00H, 'd', 00H, '.'
	DB	00H, 00H, 00H
$SG142112 DB	'\Accts\MultiPlayer\', 00H
$SG142069 DB	'A', 00H, 'c', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'D', 00H, 'e', 00H, 'n', 00H, 'i', 00H, 'e', 00H, 'd'
	DB	00H, '!', 00H, ' ', 00H, 'Y', 00H, 'o', 00H, 'u', 00H, ' ', 00H
	DB	'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H, 'd'
	DB	00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'h', 00H, 'e', 00H
	DB	'r', 00H, 'e', 00H, '.', 00H, ' ', 00H, 'Y', 00H, 'o', 00H, 'u'
	DB	00H, 'r', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'u', 00H
	DB	't', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'k', 00H, 's', 00H
	DB	'.', 00H, 00H, 00H
$SG142086 DB	'T', 00H, 'r', 00H, 'a', 00H, 'f', 00H, 'f', 00H, 'i', 00H
	DB	'c', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r'
	DB	00H, 'o', 00H, 'l', 00H, ' ', 00H, 'a', 00H, 'l', 00H, 'e', 00H
	DB	'r', 00H, 't', 00H, ':', 00H, ' ', 00H, '%', 00H, 'p', 00H, 'l'
	DB	00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'h', 00H
	DB	'a', 00H, 's', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'q', 00H, 'u'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'k'
	DB	00H, 00H, 00H
	ORG $+2
$SG142090 DB	'%', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'e', 00H
	DB	'r', 00H, 00H, 00H
$SG142111 DB	'\banned', 00H
$SG142114 DB	'r', 00H
	ORG $+2
$SG142159 DB	'ERROR: Possible corrupt ship charname=%s asset_value=%0.'
	DB	'0f', 00H
	ORG $+5
$SG143090 DB	'ERROR: Exception in RequestBestPath p1=%d p2=%08x %08x %'
	DB	'08x %08x %08x %08x %08x %08x %08x p3=%08x', 00H
	ORG $+2
$SG143107 DB	'/', 00H, 'p', 00H, 'o', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143108 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'p', 00H, 'o', 00H, 's', 00H, 00H, 00H
$SG143109 DB	'/', 00H, 's', 00H, 't', 00H, 'u', 00H, 'c', 00H, 'k', 00H
	DB	00H, 00H
	ORG $+2
$SG143110 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 't', 00H, 'u', 00H, 'c', 00H, 'k'
	DB	00H, 00H, 00H
$SG143111 DB	'/', 00H, 'd', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'r', 00H
	DB	'e', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG143112 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'd', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'r'
	DB	00H, 'e', 00H, 'p', 00H, 00H, 00H
$SG143113 DB	'/', 00H, 'd', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 00H, 00H
$SG143114 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'd', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' '
	DB	00H, '[', 00H, 'm', 00H, 'a', 00H, 'x', 00H, ']', 00H, 00H, 00H
	ORG $+2
$SG143115 DB	'/', 00H, 'c', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG143116 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'c', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 00H
	DB	00H
	ORG $+2
$SG143117 DB	'/', 00H, 'p', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 's', 00H
	DB	'h', 00H, 'i', 00H, 'p', 00H, 00H, 00H
$SG143118 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'p', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 's'
	DB	00H, 'h', 00H, 'i', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG143119 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 's', 00H
	DB	'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG143120 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'e', 00H, 't', 00H, 'u', 00H, 'p', 00H, 00H, 00H
$SG143121 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143122 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 00H, 00H
$SG143123 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG143124 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 'm', 00H, 00H, 00H
$SG143125 DB	'/', 00H, 'b', 00H, 'u', 00H, 'y', 00H, 'n', 00H, 'o', 00H
	DB	'w', 00H, 00H, 00H
$SG143126 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'b', 00H, 'u', 00H, 'y', 00H, 'n', 00H, 'o'
	DB	00H, 'w', 00H, 00H, 00H
	ORG $+2
$SG143127 DB	'/', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG143129 DB	'/', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 00H, 00H
$SG143128 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '[', 00H, 'p', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, 'w', 00H, 'o', 00H, 'r', 00H, 'd', 00H, ']', 00H, 00H
	DB	00H
	ORG $+2
$SG143130 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, '>', 00H, 00H, 00H
	ORG $+2
$SG143131 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'm', 00H
	DB	'o', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H, 00H
$SG143133 DB	'/', 00H, 'r', 00H, 'e', 00H, 's', 00H, 't', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG143132 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'm'
	DB	00H, 'o', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '<'
	DB	00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, '>', 00H, 00H, 00H
$SG143134 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'r', 00H, 'e', 00H, 's', 00H, 't', 00H, 'a'
	DB	00H, 'r', 00H, 't', 00H, ' ', 00H, '<', 00H, 'f', 00H, 'a', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '>', 00H, 00H
	DB	00H
$SG143135 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'r', 00H
	DB	'e', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 's'
	DB	00H, 00H, 00H
$SG143136 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'r'
	DB	00H, 'e', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H
	DB	's', 00H, 00H, 00H
	ORG $+2
$SG143137 DB	'/', 00H, 'g', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'a', 00H, 's', 00H, 'h', 00H, 00H, 00H
$SG143138 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 'h', 00H, ' ', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'a', 00H, 's', 00H
	DB	'h', 00H, '>', 00H, ' ', 00H, '[', 00H, 'a', 00H, 'n', 00H, 'o'
	DB	00H, 'n', 00H, ']', 00H, 00H, 00H
$SG143139 DB	'/', 00H, 's', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'c', 00H
	DB	'a', 00H, 's', 00H, 'h', 00H, 00H, 00H
$SG143140 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 'h', 00H, ' ', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'a', 00H, 's', 00H
	DB	'h', 00H, '>', 00H, ' ', 00H, '[', 00H, 'a', 00H, 'n', 00H, 'o'
	DB	00H, 'n', 00H, ']', 00H, 00H, 00H
$SG143141 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 's', 00H, 'h', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, 00H, 00H
$SG143142 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 'h', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, '>', 00H, 00H, 00H
$SG143143 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'c', 00H
	DB	'a', 00H, 's', 00H, 'h', 00H, 00H, 00H
$SG143145 DB	'/', 00H, 'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 'c', 00H
	DB	'a', 00H, 's', 00H, 'h', 00H, 00H, 00H
$SG143144 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 'h', 00H, ' ', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, '>', 00H, 00H, 00H
	ORG $+2
$SG143146 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 'h', 00H, ' ', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, '>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'a', 00H, 's'
	DB	00H, 'h', 00H, '>', 00H, 00H, 00H
$SG143147 DB	'/', 00H, 'g', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p', 00H
	DB	00H, 00H
	ORG $+6
$SG143148 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'r', 00H, 'o', 00H, 'u', 00H, 'p'
	DB	00H, ' ', 00H, '<', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, '>', 00H, ' ', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '/', 00H, 'g', 00H, ' ', 00H, '.', 00H, '.', 00H
	DB	'.', 00H, 00H, 00H
$SG143149 DB	'/', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+6
$SG143150 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, '<', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, '>', 00H, ' ', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '/', 00H, 'l', 00H, ' ', 00H, '.', 00H, '.', 00H
	DB	'.', 00H, '>', 00H, 00H, 00H
	ORG $+2
$SG143151 DB	'/', 00H, 's', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, 00H, 00H
$SG143152 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e'
	DB	00H, 'm', 00H, ' ', 00H, '<', 00H, 'm', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '>', 00H, ' ', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '/', 00H, 's', 00H, ' ', 00H, '.', 00H
	DB	'.', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG143153 DB	'/', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 00H, 00H
$SG143154 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '>', 00H, ' '
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H, 'i', 00H, ' ', 00H
	DB	'.', 00H, '.', 00H, '.', 00H, 00H, 00H
$SG143155 DB	'/', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, '$', 00H, 00H, 00H
	ORG $+6
$SG143156 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'i', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 'i', 00H, 'd', 00H, '>', 00H, ' '
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H, 'i', 00H, '$', 00H
	DB	' ', 00H, '.', 00H, '.', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG143157 DB	'/', 00H, 'j', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG143158 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'j', 00H, 'o', 00H, 'i', 00H, 'n', 00H, ' '
	DB	00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, '>', 00H, ' ', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '/', 00H, 'j', 00H, 00H, 00H
$SG143159 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, 'm', 00H, 's', 00H
	DB	'g', 00H, 00H, 00H
$SG143160 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, 'm', 00H, 's'
	DB	00H, 'g', 00H, ' ', 00H, '<', 00H, 'n', 00H, '>', 00H, ' ', 00H
	DB	'<', 00H, 'm', 00H, 's', 00H, 'g', 00H, ' ', 00H, 't', 00H, 'e'
	DB	00H, 'x', 00H, 't', 00H, '>', 00H, 00H, 00H
$SG143161 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'm', 00H
	DB	's', 00H, 'g', 00H, 's', 00H, 00H, 00H
$SG143162 DB	00H, 00H
	ORG $+2
$SG143163 DB	'/', 00H, '0', 00H, 00H, 00H
	ORG $+2
$SG143164 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H, '='
	DB	00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143165 DB	'/', 00H, '1', 00H, 00H, 00H
	ORG $+2
$SG143166 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H, '='
	DB	00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143167 DB	'/', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG143168 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H, '='
	DB	00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143169 DB	'/', 00H, '3', 00H, 00H, 00H
	ORG $+2
$SG143170 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H, '='
	DB	00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143171 DB	'/', 00H, '4', 00H, 00H, 00H
	ORG $+2
$SG143172 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H, '='
	DB	00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143173 DB	'/', 00H, '5', 00H, 00H, 00H
	ORG $+2
$SG143174 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H, '='
	DB	00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143175 DB	'/', 00H, '6', 00H, 00H, 00H
	ORG $+2
$SG143176 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H, '='
	DB	00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143177 DB	'/', 00H, '7', 00H, 00H, 00H
	ORG $+2
$SG143178 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H, '='
	DB	00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143179 DB	'/', 00H, '8', 00H, 00H, 00H
	ORG $+2
$SG143180 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H, '='
	DB	00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143181 DB	'/', 00H, '9', 00H, 00H, 00H
	ORG $+2
$SG143182 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H, '='
	DB	00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143183 DB	'/', 00H, 'l', 00H, '0', 00H, 00H, 00H
$SG143184 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143185 DB	'/', 00H, 'l', 00H, '1', 00H, 00H, 00H
$SG143186 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143187 DB	'/', 00H, 'l', 00H, '2', 00H, 00H, 00H
$SG143188 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143189 DB	'/', 00H, 'l', 00H, '3', 00H, 00H, 00H
$SG143190 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143191 DB	'/', 00H, 'l', 00H, '4', 00H, 00H, 00H
$SG143192 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143193 DB	'/', 00H, 'l', 00H, '5', 00H, 00H, 00H
$SG143194 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143195 DB	'/', 00H, 'l', 00H, '6', 00H, 00H, 00H
$SG143196 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143197 DB	'/', 00H, 'l', 00H, '7', 00H, 00H, 00H
$SG143198 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143199 DB	'/', 00H, 'l', 00H, '8', 00H, 00H, 00H
$SG143200 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143201 DB	'/', 00H, 'l', 00H, '9', 00H, 00H, 00H
$SG143202 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143203 DB	'/', 00H, 'g', 00H, '0', 00H, 00H, 00H
$SG143204 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143205 DB	'/', 00H, 'g', 00H, '1', 00H, 00H, 00H
$SG143206 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143207 DB	'/', 00H, 'g', 00H, '2', 00H, 00H, 00H
$SG143208 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143209 DB	'/', 00H, 'g', 00H, '3', 00H, 00H, 00H
$SG143210 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143211 DB	'/', 00H, 'g', 00H, '4', 00H, 00H, 00H
$SG143212 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143213 DB	'/', 00H, 'g', 00H, '5', 00H, 00H, 00H
$SG143214 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143215 DB	'/', 00H, 'g', 00H, '6', 00H, 00H, 00H
$SG143216 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143217 DB	'/', 00H, 'g', 00H, '7', 00H, 00H, 00H
$SG143218 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143219 DB	'/', 00H, 'g', 00H, '8', 00H, 00H, 00H
$SG143220 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143221 DB	'/', 00H, 'g', 00H, '9', 00H, 00H, 00H
$SG143222 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143223 DB	'/', 00H, 't', 00H, '0', 00H, 00H, 00H
$SG143224 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143225 DB	'/', 00H, 't', 00H, '1', 00H, 00H, 00H
$SG143226 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143227 DB	'/', 00H, 't', 00H, '2', 00H, 00H, 00H
$SG143228 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143229 DB	'/', 00H, 't', 00H, '3', 00H, 00H, 00H
$SG143230 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143231 DB	'/', 00H, 't', 00H, '4', 00H, 00H, 00H
$SG143232 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143233 DB	'/', 00H, 't', 00H, '5', 00H, 00H, 00H
$SG143234 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143235 DB	'/', 00H, 't', 00H, '6', 00H, 00H, 00H
$SG143236 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143237 DB	'/', 00H, 't', 00H, '7', 00H, 00H, 00H
$SG143238 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143239 DB	'/', 00H, 't', 00H, '8', 00H, 00H, 00H
$SG143240 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143241 DB	'/', 00H, 't', 00H, '9', 00H, 00H, 00H
$SG143242 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n'
	DB	00H, '=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG143243 DB	'/', 00H, 't', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, 00H, 00H
$SG143244 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e'
	DB	00H, 't', 00H, ' ', 00H, '<', 00H, 'm', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '>', 00H, ' ', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '/', 00H, 't', 00H, ' ', 00H, '.', 00H
	DB	'.', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG143245 DB	'/', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG143246 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 't', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e'
	DB	00H, 't', 00H, ' ', 00H, '<', 00H, 'm', 00H, 'e', 00H, 's', 00H
	DB	's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '>', 00H, ' ', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '/', 00H, 't', 00H, ' ', 00H, '.', 00H
	DB	'.', 00H, '.', 00H, 00H, 00H
	ORG $+2
$SG143247 DB	'/', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'y', 00H
	DB	00H, 00H
	ORG $+2
$SG143248 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'y'
	DB	00H, ' ', 00H, '<', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, '>', 00H, ' ', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '/', 00H, 'r', 00H, ' ', 00H, '.', 00H, '.', 00H
	DB	00H, 00H
	ORG $+2
$SG143249 DB	'/', 00H, 'r', 00H, 00H, 00H
	ORG $+6
$SG143250 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'y'
	DB	00H, ' ', 00H, '<', 00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'a', 00H, 'g', 00H, 'e', 00H, '>', 00H, ' ', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '/', 00H, 'r', 00H, ' ', 00H, '.', 00H, '.', 00H
	DB	'.', 00H, 00H, 00H
$SG143251 DB	'/', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, '$', 00H, 00H
	DB	00H
	ORG $+2
$SG143252 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, '$', 00H
	DB	' ', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, 'i', 00H, 'd', 00H, '>', 00H, ' ', 00H, '<', 00H
	DB	'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, '>', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'/', 00H, 'p', 00H, 'm', 00H, ' ', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, 00H, 00H
	ORG $+2
$SG143253 DB	'/', 00H, 'p', 00H, 'm', 00H, '$', 00H, 00H, 00H
	ORG $+2
$SG143254 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, '$', 00H
	DB	' ', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, 'i', 00H, 'd', 00H, '>', 00H, ' ', 00H, '<', 00H
	DB	'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, '>', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'/', 00H, 'p', 00H, 'm', 00H, ' ', 00H, '.', 00H, '.', 00H, '.'
	DB	00H, 00H, 00H
	ORG $+2
$SG143255 DB	'/', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, 00H, 00H
$SG143268 DB	00H, 00H
	ORG $+2
$SG143256 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, ' ', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, '>', 00H, ' ', 00H, '<', 00H, 'm', 00H
	DB	'e', 00H, 's', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H
	DB	'p', 00H, 'm', 00H, ' ', 00H, '.', 00H, '.', 00H, '.', 00H, 00H
	DB	00H
$SG143257 DB	'/', 00H, 'p', 00H, 'm', 00H, 00H, 00H
$SG143258 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, ' ', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, '>', 00H, ' ', 00H, '<', 00H, 'm', 00H
	DB	'e', 00H, 's', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H
	DB	'p', 00H, 'm', 00H, ' ', 00H, '.', 00H, '.', 00H, '.', 00H, 00H
	DB	00H
$SG143259 DB	'/', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 'm', 00H, 's', 00H, 'g', 00H, 00H, 00H
$SG143260 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 'm', 00H, 's', 00H, 'g', 00H, ' ', 00H
	DB	'<', 00H, 't', 00H, 'a', 00H, 'g', 00H, '>', 00H, ' ', 00H, '<'
	DB	00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H
	DB	'e', 00H, '>', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '/'
	DB	00H, 'f', 00H, 'm', 00H, ' ', 00H, '.', 00H, '.', 00H, '.', 00H
	DB	00H, 00H
$SG143261 DB	'/', 00H, 'f', 00H, 'm', 00H, 00H, 00H
$SG143269 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 't', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e'
	DB	00H, 00H, 00H
$SG143262 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 'm', 00H, 's', 00H, 'g', 00H, ' ', 00H
	DB	'<', 00H, 't', 00H, 'a', 00H, 'g', 00H, '>', 00H, ' ', 00H, '<'
	DB	00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H
	DB	'e', 00H, '>', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '/'
	DB	00H, 'f', 00H, 'm', 00H, ' ', 00H, '.', 00H, '.', 00H, '.', 00H
	DB	00H, 00H
$SG143263 DB	'/', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG143264 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, ' ', 00H, '<', 00H, 't', 00H, 'a', 00H, 'g'
	DB	00H, '>', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H
	DB	'f', 00H, 'i', 00H, ' ', 00H, '.', 00H, '.', 00H, '.', 00H, 00H
	DB	00H
	ORG $+2
$SG143265 DB	'/', 00H, 'f', 00H, 'i', 00H, 00H, 00H
$SG143266 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, ' ', 00H, '<', 00H, 't', 00H, 'a', 00H, 'g'
	DB	00H, '>', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H
	DB	'f', 00H, 'i', 00H, ' ', 00H, '.', 00H, '.', 00H, '.', 00H, 00H
	DB	00H
	ORG $+2
$SG143267 DB	'/', 00H, 'l', 00H, 'a', 00H, 's', 00H, 't', 00H, 'p', 00H
	DB	'm', 00H, 00H, 00H
$SG143270 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'c'
	DB	00H, 'h', 00H, 'a', 00H, 't', 00H, 't', 00H, 'i', 00H, 'm', 00H
	DB	'e', 00H, ' ', 00H, '[', 00H, 'o', 00H, 'n', 00H, '|', 00H, 'o'
	DB	00H, 'f', 00H, 'f', 00H, ']', 00H, 00H, 00H
$SG143271 DB	'/', 00H, 'h', 00H, 'e', 00H, 'l', 00H, 'p', 00H, 00H, 00H
$SG143272 DB	00H, 00H
	ORG $+2
$SG143273 DB	'/', 00H, 'h', 00H, 00H, 00H
	ORG $+2
$SG143274 DB	00H, 00H
	ORG $+2
$SG143275 DB	'/', 00H, '?', 00H, 00H, 00H
	ORG $+2
$SG143276 DB	00H, 00H
	ORG $+2
$SG143277 DB	'/', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 00H, 00H
$SG143278 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'l', 00H, ' '
	DB	00H, '<', 00H, 'm', 00H, 's', 00H, 'g', 00H, 'n', 00H, 'u', 00H
	DB	'm', 00H, '>', 00H, 00H, 00H
$SG143279 DB	'/', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'd', 00H
	DB	'e', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG143280 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'd'
	DB	00H, 'e', 00H, 'l', 00H, ' ', 00H, '<', 00H, 'm', 00H, 's', 00H
	DB	'g', 00H, 'n', 00H, 'u', 00H, 'm', 00H, '>', 00H, 00H, 00H
	ORG $+2
$SG143281 DB	'/', 00H, 's', 00H, 'i', 00H, 00H, 00H
$SG143282 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'i'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG143283 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'f', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG143284 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'f', 00H, 'o', 00H, 00H, 00H
$SG143285 DB	'/', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG143286 DB	00H, 00H
	ORG $+2
$SG143287 DB	'/', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, '*', 00H
	DB	00H, 00H
	ORG $+2
$SG143288 DB	00H, 00H
	ORG $+2
$SG143289 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'i', 00H
	DB	'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H
$SG143290 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'i'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG143291 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'i', 00H
	DB	'n', 00H, 'f', 00H, 'o', 00H, '*', 00H, 00H, 00H
	ORG $+2
$SG143292 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'i'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG143293 DB	'/', 00H, 'l', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H
	DB	's', 00H, 00H, 00H
$SG143294 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143295 DB	'/', 00H, 'l', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't', 00H
	DB	's', 00H, '*', 00H, 00H, 00H
	ORG $+2
$SG143296 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'l', 00H, 'i', 00H, 'g', 00H, 'h', 00H, 't'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143297 DB	'/', 00H, 's', 00H, 'h', 00H, 'i', 00H, 'e', 00H, 'l', 00H
	DB	'd', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143298 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'i', 00H, 'e', 00H, 'l'
	DB	00H, 'd', 00H, 's', 00H, 00H, 00H
$SG143299 DB	'/', 00H, 's', 00H, 'h', 00H, 'i', 00H, 'e', 00H, 'l', 00H
	DB	'd', 00H, 's', 00H, '*', 00H, 00H, 00H
$SG143300 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'i', 00H, 'e', 00H, 'l'
	DB	00H, 'd', 00H, 's', 00H, 00H, 00H
$SG143301 DB	'/', 00H, 's', 00H, 'u', 00H, 'r', 00H, 'v', 00H, 'e', 00H
	DB	'y', 00H, 00H, 00H
$SG143302 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'u', 00H, 'r', 00H, 'v', 00H, 'e'
	DB	00H, 'y', 00H, 00H, 00H
	ORG $+2
$SG143303 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, 'c', 00H, 'o', 00H
	DB	'o', 00H, 'r', 00H, 'd', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143304 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, 'c', 00H, 'o'
	DB	00H, 'o', 00H, 'r', 00H, 'd', 00H, 's', 00H, 00H, 00H
$SG143305 DB	'/', 00H, 'j', 00H, 'u', 00H, 'm', 00H, 'p', 00H, 00H, 00H
$SG143306 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'j', 00H, 'u', 00H, 'm', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+2
$SG143307 DB	'/', 00H, 'j', 00H, 'u', 00H, 'm', 00H, 'p', 00H, '*', 00H
	DB	00H, 00H
	ORG $+2
$SG143308 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'j', 00H, 'u', 00H, 'm', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+2
$SG143309 DB	'/', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'g', 00H
	DB	'e', 00H, 00H, 00H
$SG143310 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'g'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG143311 DB	'/', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'g', 00H
	DB	'e', 00H, '*', 00H, 00H, 00H
	ORG $+2
$SG143312 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'g'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG143313 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 's', 00H
	DB	'c', 00H, 'a', 00H, 'n', 00H, 00H, 00H
$SG143314 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, ' ', 00H, '<', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e'
	DB	00H, '>', 00H, 00H, 00H
$SG143315 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 's', 00H
	DB	'c', 00H, 'a', 00H, 'n', 00H, '$', 00H, 00H, 00H
	ORG $+2
$SG143316 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 's'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '$', 00H, ' ', 00H, '<', 00H
	DB	'c', 00H, 'l', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'i'
	DB	00H, 'd', 00H, '>', 00H, 00H, 00H
	ORG $+2
$SG143317 DB	'/', 00H, 'n', 00H, 'e', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG143318 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'n', 00H, 'e', 00H, 't', 00H, ' ', 00H, '['
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, '|', 00H, 'j', 00H, 'u', 00H
	DB	'm', 00H, 'p', 00H, 'o', 00H, 'n', 00H, 'l', 00H, 'y', 00H, '|'
	DB	00H, 'o', 00H, 'f', 00H, 'f', 00H, ']', 00H, 00H, 00H
	ORG $+2
$SG143319 DB	'/', 00H, 'm', 00H, 'a', 00H, 'k', 00H, 'e', 00H, 't', 00H
	DB	'a', 00H, 'g', 00H, 00H, 00H
	ORG $+6
$SG143320 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'm', 00H, 'a', 00H, 'k', 00H, 'e', 00H, 't'
	DB	00H, 'a', 00H, 'g', 00H, ' ', 00H, '<', 00H, 't', 00H, 'a', 00H
	DB	'g', 00H, '>', 00H, ' ', 00H, '<', 00H, 'm', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'p', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, 'w', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '>'
	DB	00H, ' ', 00H, '<', 00H, 'd', 00H, 'e', 00H, 's', 00H, 'c', 00H
	DB	'r', 00H, 'i', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, '>', 00H, 00H, 00H
$SG143321 DB	'/', 00H, 'd', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 't', 00H
	DB	'a', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG143322 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 'd', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 't'
	DB	00H, 'a', 00H, 'g', 00H, ' ', 00H, '<', 00H, 't', 00H, 'a', 00H
	DB	'g', 00H, '>', 00H, ' ', 00H, '<', 00H, 'm', 00H, 'a', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H, 'p', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, 'w', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '>'
	DB	00H, 00H, 00H
$SG143323 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, 't', 00H, 'a', 00H
	DB	'g', 00H, 'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 00H, 00H
$SG143324 DB	'U', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, ':', 00H
	DB	' ', 00H, '/', 00H, 's', 00H, 'e', 00H, 't', 00H, 't', 00H, 'a'
	DB	00H, 'g', 00H, 'p', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	'<', 00H, 't', 00H, 'a', 00H, 'g', 00H, '>', 00H, ' ', 00H, '<'
	DB	00H, 'm', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	' ', 00H, 'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 'w', 00H, 'o'
	DB	00H, 'r', 00H, 'd', 00H, '>', 00H, ' ', 00H, '<', 00H, 'r', 00H
	DB	'e', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'p'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, 'w', 00H, 'o', 00H, 'r', 00H
	DB	'd', 00H, '>', 00H, 00H, 00H
	ORG $+2
$SG143339 DB	00H, 00H
	ORG $+2
$SG143346 DB	'ERROR: Exception in PlayerCntl::UserCmd_Process(iClientI'
	DB	'D=%u, wscCmd=%s)', 00H
	ORG $+3
$SG143347 DB	'UserCmd_Process', 00H
$SG143348 DB	'ERROR Exception in %s', 00H
	ORG $+2
$SG143364 DB	'/', 00H, 'p', 00H, 'o', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143366 DB	'/', 00H, 's', 00H, 't', 00H, 'u', 00H, 'c', 00H, 'k', 00H
	DB	00H, 00H
	ORG $+2
$SG143368 DB	'/', 00H, 'd', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 'r', 00H
	DB	'e', 00H, 'p', 00H, 00H, 00H
	ORG $+2
$SG143370 DB	'/', 00H, 'd', 00H, 'i', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'[', 00H, 'm', 00H, 'a', 00H, 'x', 00H, ']', 00H, 00H, 00H
$SG143372 DB	'/', 00H, 'c', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG143375 DB	'/', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	'>', 00H, 00H, 00H
	ORG $+2
$SG143378 DB	'/', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	'>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, '>', 00H, 00H, 00H
$SG143380 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'm', 00H
	DB	'o', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, '<', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, '>', 00H, 00H, 00H
	ORG $+2
$SG143383 DB	'/', 00H, 'r', 00H, 'e', 00H, 's', 00H, 't', 00H, 'a', 00H
	DB	'r', 00H, 't', 00H, ' ', 00H, '<', 00H, 'f', 00H, 'a', 00H, 'c'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, '>', 00H, 00H, 00H
	ORG $+2
$SG143385 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'r', 00H
	DB	'e', 00H, 's', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, 's'
	DB	00H, 00H, 00H
$SG143388 DB	'/', 00H, 'g', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	'a', 00H, 's', 00H, 'h', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	'>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'a', 00H, 's', 00H, 'h'
	DB	00H, '>', 00H, 00H, 00H
$SG143394 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'c', 00H
	DB	'a', 00H, 's', 00H, 'h', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, ' ', 00H, '<', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'>', 00H, 00H, 00H
	ORG $+2
$SG143390 DB	'/', 00H, 'd', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 'c', 00H
	DB	'a', 00H, 's', 00H, 'h', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	'>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'a', 00H, 's', 00H
	DB	'h', 00H, '>', 00H, 00H, 00H
	ORG $+2
$SG143392 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'c', 00H
	DB	'a', 00H, 's', 00H, 'h', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	'>', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, '>', 00H, 00H, 00H
$SG143396 DB	'/', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 'm', 00H
	DB	's', 00H, 'g', 00H, 's', 00H, 00H, 00H
$SG143398 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, 'm', 00H, 's', 00H
	DB	'g', 00H, 00H, 00H
$SG143400 DB	'/', 00H, 'n', 00H, ' ', 00H, ' ', 00H, '(', 00H, 'n', 00H
	DB	'=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143402 DB	'/', 00H, 'l', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H
	DB	'=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143404 DB	'/', 00H, 'g', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H
	DB	'=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143406 DB	'/', 00H, 't', 00H, 'n', 00H, ' ', 00H, '(', 00H, 'n', 00H
	DB	'=', 00H, '0', 00H, '-', 00H, '9', 00H, ')', 00H, 00H, 00H
$SG143408 DB	'/', 00H, 't', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H, 't'
	DB	00H, 00H, 00H
$SG143410 DB	'/', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'y', 00H
	DB	' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H, 'r', 00H, 00H
	DB	00H
	ORG $+2
$SG143415 DB	'/', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, ' ', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '/', 00H, 'p', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG143416 DB	'/', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, '$', 00H, ' '
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H, 'p', 00H, 'm', 00H
	DB	'$', 00H, 00H, 00H
	ORG $+2
$SG143417 DB	'/', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 'm', 00H, 's', 00H, 'g', 00H, ' ', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '/', 00H, 'f', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG143418 DB	'/', 00H, 'f', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'i', 00H, 't'
	DB	00H, 'e', 00H, ' ', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '/', 00H
	DB	'f', 00H, 'i', 00H, 00H, 00H
$SG143420 DB	'/', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'c', 00H
	DB	'h', 00H, 'a', 00H, 't', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e'
	DB	00H, 00H, 00H
$SG143422 DB	'/', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG143424 DB	'/', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 00H, 00H
$SG143426 DB	'/', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'l', 00H, 'd', 00H
	DB	'e', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG143431 DB	'FIGHTER', 00H
$SG143437 DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG143440 DB	's', 00H, 'm', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG143443 DB	'c', 00H, 'h', 00H, 'a', 00H, 's', 00H, 'e', 00H, 00H, 00H
$SG143447 DB	'b', 00H, 'e', 00H, 'a', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG143454 DB	'p', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 00H, 00H
	ORG $+2
$SG143458 DB	't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	't', 00H, 00H, 00H
$SG143462 DB	'a', 00H, 'u', 00H, 't', 00H, 'h', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, 00H, 00H
	ORG $+2
$SG143466 DB	'r', 00H, 'e', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'b', 00H, 'a', 00H, 'n', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143469 DB	's', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'c', 00H
	DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'd'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG143474 DB	'r', 00H, 'o', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'g', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143478 DB	'.old', 00H
	ORG $+3
$SG143479 DB	'wt', 00H
	ORG $+1
$SG143481 DB	'./flhook_logs/FLHook.log.old', 00H
	ORG $+3
$SG143482 DB	'./flhook_logs/FLHook.log', 00H
	ORG $+3
$SG143483 DB	'./flhook_logs/FLHook.log', 00H
	ORG $+3
$SG143484 DB	'wt', 00H
	ORG $+1
$SG143485 DB	'./flhook_logs/FLHook.log', 00H
	ORG $+3
$SG143487 DB	'O', 00H, 'K', 00H, 0aH, 00H, 00H, 00H
$SG143491 DB	'p', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG143492 DB	'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG143498 DB	'p', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG143499 DB	'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG143504 DB	's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 't', 00H, 'a', 00H
	DB	'g', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG143507 DB	'a', 00H, 'd', 00H, 'd', 00H, 't', 00H, 'a', 00H, 'g', 00H
	DB	00H, 00H
	ORG $+2
$SG143513 DB	'd', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 't', 00H, 'a', 00H
	DB	'g', 00H, 00H, 00H
$SG143517 DB	'j', 00H, 'u', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'e', 00H
	DB	's', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG143523 DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, ' ', 00H, 'x', 00H
	DB	',', 00H, ' ', 00H, 'y', 00H, ',', 00H, ' ', 00H, 'z', 00H, 0aH
	DB	00H, 00H, 00H
$SG143525 DB	'p', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, '<', 00H
	DB	'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, '>', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG143527 DB	'c', 00H, 'h', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'a'
	DB	00H, 'm', 00H, 'e', 00H, '>', 00H, 0aH, 00H, 00H, 00H
$SG143529 DB	's', 00H, 'm', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, ' ', 00H, '[', 00H, 'd', 00H, 'i', 00H, 'e'
	DB	00H, ']', 00H, 0aH, 00H, 00H, 00H
$SG143531 DB	't', 00H, 'e', 00H, 's', 00H, 't', 00H, 'b', 00H, 'o', 00H
	DB	't', 00H, ' ', 00H, '<', 00H, 's', 00H, 'y', 00H, 's', 00H, 't'
	DB	00H, 'e', 00H, 'm', 00H, '>', 00H, ' ', 00H, '<', 00H, 't', 00H
	DB	'e', 00H, 's', 00H, 't', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e'
	DB	00H, '>', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG143533 DB	'a', 00H, 'u', 00H, 't', 00H, 'h', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a'
	DB	00H, 'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '>', 00H
	DB	0aH, 00H, 00H, 00H
	ORG $+2
$SG143535 DB	'r', 00H, 'e', 00H, 'l', 00H, 'o', 00H, 'a', 00H, 'd', 00H
	DB	'b', 00H, 'a', 00H, 'n', 00H, 's', 00H, 0aH, 00H, 00H, 00H
$SG143543 DB	's', 00H, 'h', 00H, 'o', 00H, 'w', 00H, 't', 00H, 'a', 00H
	DB	'g', 00H, 's', 00H, 0aH, 00H, 00H, 00H
$SG143537 DB	's', 00H, 'e', 00H, 't', 00H, 'a', 00H, 'c', 00H, 'c', 00H
	DB	'm', 00H, 'o', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'd'
	DB	00H, 'e', 00H, ' ', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '>', 00H, ' '
	DB	00H, '<', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, '>', 00H
	DB	0aH, 00H, 00H, 00H
$SG143539 DB	'r', 00H, 'o', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	'l', 00H, 'o', 00H, 'g', 00H, 's', 00H, 0aH, 00H, 00H, 00H
$SG143545 DB	'a', 00H, 'd', 00H, 'd', 00H, 't', 00H, 'a', 00H, 'g', 00H
	DB	' ', 00H, '<', 00H, 't', 00H, 'a', 00H, 'g', 00H, '>', 00H, ' '
	DB	00H, '<', 00H, 'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 'w', 00H
	DB	'o', 00H, 'r', 00H, 'd', 00H, '>', 00H, 0aH, 00H, 00H, 00H
	ORG $+2
$SG143541 DB	'p', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'm', 00H, 's', 00H, 'g', 00H, '|', 00H, 'p', 00H, 'm'
	DB	00H, ' ', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H
	DB	'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '>', 00H, ' ', 00H, '<'
	DB	00H, 'm', 00H, 'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H
	DB	'e', 00H, '>', 00H, 0aH, 00H, 00H, 00H
$SG143547 DB	'd', 00H, 'r', 00H, 'o', 00H, 'p', 00H, 't', 00H, 'a', 00H
	DB	'g', 00H, ' ', 00H, '<', 00H, 't', 00H, 'a', 00H, 'g', 00H, '>'
	DB	00H, ' ', 00H, '<', 00H, 'p', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	'w', 00H, 'o', 00H, 'r', 00H, 'd', 00H, '>', 00H, 0aH, 00H, 00H
	DB	00H
$SG143552 DB	'ERROR: Elapse time correction delta=%f', 00H
	ORG $+5
$SG143554 DB	'E', 00H, 'l', 00H, 'a', 00H, 'p', 00H, 's', 00H, 'e', 00H
	DB	' ', 00H, 't', 00H, 'i', 00H, 'm', 00H, 'e', 00H, ' ', 00H, 'c'
	DB	00H, 'o', 00H, 'r', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'l'
	DB	00H, 't', 00H, 'a', 00H, '=', 00H, '%', 00H, 'f', 00H, 0aH, 00H
	DB	00H, 00H
	ORG $+2
$SG143556 DB	'ERROR: Exception in Server.ElapseTime(delta=%f)', 00H
$SG143557 DB	'Elapse_Time', 00H
$SG143558 DB	'ERROR Exception in %s', 00H
	ORG $+2
$SG143566 DB	'Player Control Plugin by cannon 2.0', 00H
$SG143567 DB	'playercntl', 00H
CONST	ENDS
PUBLIC	?LoadSettings@@YAXXZ				; LoadSettings
PUBLIC	_DllMain@12
EXTRN	?HkUnloadStringDLLs@@YAXXZ:PROC			; HkUnloadStringDLLs
EXTRN	?Shutdown@CrashCatcher@@YAXXZ:PROC		; CrashCatcher::Shutdown
EXTRN	?HkLoadStringDLLs@@YAXXZ:PROC			; HkLoadStringDLLs
EXTRN	__imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:PROC
EXTRN	__imp_?set_scCfgFile@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE
EXTRN	__imp__srand:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_hinstDLL$ = 8						; size = 4
_fdwReason$ = 12					; size = 4
_lpvReserved$ = 16					; size = 4
_DllMain@12 PROC
; File g:\max\bastelstube\github\fl-mod-flhook\plugins\playercntl_plugin\src\main.cpp
; Line 61
	push	ebp
	mov	ebp, esp
; Line 62
	push	0
	call	_time
	add	esp, 4
	push	eax
	call	DWORD PTR __imp__srand
	add	esp, 4
; Line 67
	cmp	DWORD PTR _fdwReason$[ebp], 1
	jne	SHORT $LN4@DllMain
; Line 69
	mov	ecx, DWORD PTR __imp_?set_scCfgFile@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
	call	DWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	test	eax, eax
	jbe	SHORT $LN3@DllMain
; Line 70
	call	?LoadSettings@@YAXXZ			; LoadSettings
$LN3@DllMain:
; Line 71
	call	?HkLoadStringDLLs@@YAXXZ		; HkLoadStringDLLs
	jmp	SHORT $LN2@DllMain
$LN4@DllMain:
; Line 73
	cmp	DWORD PTR _fdwReason$[ebp], 0
	jne	SHORT $LN2@DllMain
; Line 75
	call	?Shutdown@CrashCatcher@@YAXXZ		; CrashCatcher::Shutdown
; Line 76
	call	?HkUnloadStringDLLs@@YAXXZ		; HkUnloadStringDLLs
$LN2@DllMain:
; Line 78
	mov	eax, 1
; Line 79
	pop	ebp
	ret	12					; 0000000cH
_DllMain@12 ENDP
_TEXT	ENDS
EXTRN	__imp___time64:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\time.inl
; Line 134
	push	ebp
	mov	ebp, esp
; Line 135
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4
; Line 136
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
PUBLIC	?Get_PluginReturnCode@@YA?AW4PLUGIN_RETURNCODE@@XZ ; Get_PluginReturnCode
; Function compile flags: /Odtp
_TEXT	SEGMENT
?Get_PluginReturnCode@@YA?AW4PLUGIN_RETURNCODE@@XZ PROC	; Get_PluginReturnCode
; File g:\max\bastelstube\github\fl-mod-flhook\plugins\playercntl_plugin\src\main.cpp
; Line 85
	push	ebp
	mov	ebp, esp
; Line 86
	mov	eax, DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A ; returncode
; Line 87
	pop	ebp
	ret	0
?Get_PluginReturnCode@@YA?AW4PLUGIN_RETURNCODE@@XZ ENDP	; Get_PluginReturnCode
_TEXT	ENDS
PUBLIC	__real@bf800000
PUBLIC	__real@43340000
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ:PROC
EXTRN	?Init@CrashCatcher@@YAXXZ:PROC			; CrashCatcher::Init
EXTRN	?LoadSettings@SystemSensor@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; SystemSensor::LoadSettings
EXTRN	?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; Message::LoadSettings
EXTRN	?LoadSettings@RepFixer@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; RepFixer::LoadSettings
EXTRN	?LoadSettings@Restart@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; Restart::LoadSettings
EXTRN	?LoadSettings@CargoDrop@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; CargoDrop::LoadSettings
EXTRN	?LoadSettings@IPBans@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; IPBans::LoadSettings
EXTRN	?LoadSettings@PurchaseRestrictions@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; PurchaseRestrictions::LoadSettings
EXTRN	?LoadSettings@HyperJump@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; HyperJump::LoadSettings
EXTRN	?LoadSettings@PimpShip@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; PimpShip::LoadSettings
EXTRN	?LoadSettings@MiscCmds@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; MiscCmds::LoadSettings
EXTRN	?LoadSettings@GiveCash@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; GiveCash::LoadSettings
EXTRN	?LoadSettings@Rename@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; Rename::LoadSettings
EXTRN	?ReadIniNicknames@EquipmentUtilities@@YAXXZ:PROC ; EquipmentUtilities::ReadIniNicknames
EXTRN	?ReadUniverse@ZoneUtilities@@YAXXZ:PROC		; ZoneUtilities::ReadUniverse
EXTRN	__imp_?IniGetF@@YAMABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00M@Z:PROC
EXTRN	__imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z:PROC
EXTRN	__imp_?ConPrint@@YAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ:PROC
EXTRN	__imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z:PROC
EXTRN	__imp_?IniGetI@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00H@Z:PROC
EXTRN	__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:PROC
EXTRN	__imp__GetCurrentDirectoryA@8:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
xdata$x	SEGMENT
__ehfuncinfo$?LoadSettings@@YAXXZ DD 019930522H
	DD	018H
	DD	FLAT:__unwindtable$?LoadSettings@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?LoadSettings@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$1
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$2
	DD	03H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$3
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$4
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$5
	DD	06H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$6
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$7
	DD	08H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$8
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$9
	DD	0aH
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$10
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$11
	DD	0cH
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$12
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$13
	DD	0eH
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$14
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$15
	DD	010H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$16
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$17
	DD	012H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$18
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$19
	DD	014H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$20
	DD	02H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$21
	DD	016H
	DD	FLAT:__unwindfunclet$?LoadSettings@@YAXXZ$22
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv305 = -916						; size = 4
tv84 = -912						; size = 4
tv299 = -908						; size = 4
tv324 = -904						; size = 4
$T149316 = -900						; size = 28
$T149315 = -872						; size = 28
$T149314 = -844						; size = 28
$T149313 = -816						; size = 28
$T149312 = -788						; size = 28
$T149311 = -760						; size = 28
$T149310 = -732						; size = 28
$T149309 = -704						; size = 28
$T149308 = -676						; size = 28
$T149307 = -648						; size = 28
$T149306 = -620						; size = 28
$T149305 = -592						; size = 28
$T149304 = -564						; size = 28
$T149303 = -536						; size = 28
$T149302 = -508						; size = 28
$T149301 = -480						; size = 28
$T149300 = -452						; size = 28
$T149299 = -424						; size = 28
$T149298 = -396						; size = 4
$T149297 = -392						; size = 28
$T149296 = -364						; size = 28
$T149295 = -336						; size = 28
_szCurDir$ = -308					; size = 260
_scPluginCfgFile$ = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?LoadSettings@@YAXXZ PROC				; LoadSettings
; Line 91
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadSettings@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 904				; 00000388H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 92
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 96
	lea	eax, DWORD PTR _szCurDir$[ebp]
	push	eax
	push	260					; 00000104H
	call	DWORD PTR __imp__GetCurrentDirectoryA@8
; Line 97
	push	OFFSET $SG141987
	lea	ecx, DWORD PTR _szCurDir$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T149295[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv324[ebp], eax
	mov	edx, DWORD PTR tv324[ebp]
	mov	DWORD PTR tv299[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv299[ebp]
	push	eax
	lea	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	push	ecx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149295[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 99
	push	OFFSET $SG141990
	lea	ecx, DWORD PTR $T149296[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	push	OFFSET $SG141991
	lea	ecx, DWORD PTR $T149297[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	push	0
	lea	edx, DWORD PTR $T149296[ebp]
	push	edx
	lea	eax, DWORD PTR $T149297[ebp]
	push	eax
	lea	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	push	ecx
	call	DWORD PTR __imp_?IniGetI@@YAHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00H@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR ?set_iPluginDebug@@3HA, eax	; set_iPluginDebug
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T149297[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149296[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 100
	cmp	DWORD PTR ?set_iPluginDebug@@3HA, 0	; set_iPluginDebug
	je	SHORT $LN1@LoadSettin
; Line 101
	mov	edx, DWORD PTR ?set_iPluginDebug@@3HA	; set_iPluginDebug
	push	edx
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149298[ebp], esp
	push	OFFSET $SG141994
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv84[ebp], eax
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR tv305[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?ConPrint@@YAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
$LN1@LoadSettin:
; Line 103
	push	OFFSET $SG141997
	lea	ecx, DWORD PTR $T149299[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	push	OFFSET $SG141998
	lea	ecx, DWORD PTR $T149300[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	push	0
	lea	ecx, DWORD PTR $T149299[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149300[ebp]
	push	edx
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR ?set_bLogLooting@@3_NA, al	; set_bLogLooting
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T149300[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149299[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 104
	push	OFFSET $SG142001
	lea	ecx, DWORD PTR $T149301[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	push	OFFSET $SG142002
	lea	ecx, DWORD PTR $T149302[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	push	0
	lea	ecx, DWORD PTR $T149301[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149302[ebp]
	push	edx
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR ?set_bEnableMoveChar@@3_NA, al	; set_bEnableMoveChar
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T149302[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149301[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 105
	push	OFFSET $SG142005
	lea	ecx, DWORD PTR $T149303[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	push	OFFSET $SG142006
	lea	ecx, DWORD PTR $T149304[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	push	0
	lea	ecx, DWORD PTR $T149303[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149304[ebp]
	push	edx
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR ?set_bEnableRenameMe@@3_NA, al	; set_bEnableRenameMe
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T149304[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149303[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 106
	push	OFFSET $SG142009
	lea	ecx, DWORD PTR $T149305[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	push	OFFSET $SG142010
	lea	ecx, DWORD PTR $T149306[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	push	0
	lea	ecx, DWORD PTR $T149305[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149306[ebp]
	push	edx
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR ?set_bEnablePimpShip@@3_NA, al	; set_bEnablePimpShip
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T149306[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149305[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 107
	push	OFFSET $SG142013
	lea	ecx, DWORD PTR $T149307[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	push	OFFSET $SG142014
	lea	ecx, DWORD PTR $T149308[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	push	0
	lea	ecx, DWORD PTR $T149307[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149308[ebp]
	push	edx
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR ?set_bEnableRestart@@3_NA, al	; set_bEnableRestart
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T149308[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149307[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 108
	push	OFFSET $SG142017
	lea	ecx, DWORD PTR $T149309[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	push	OFFSET $SG142018
	lea	ecx, DWORD PTR $T149310[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	push	0
	lea	ecx, DWORD PTR $T149309[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149310[ebp]
	push	edx
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR ?set_bEnableGiveCash@@3_NA, al	; set_bEnableGiveCash
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR $T149310[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149309[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 110
	push	OFFSET $SG142021
	lea	ecx, DWORD PTR $T149311[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	push	OFFSET $SG142022
	lea	ecx, DWORD PTR $T149312[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	push	ecx
	fld	DWORD PTR __real@43340000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T149311[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149312[ebp]
	push	edx
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetF@@YAMABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00M@Z
	add	esp, 16					; 00000010H
	fstp	DWORD PTR ?set_fSpinProtectMass@@3MA	; set_fSpinProtectMass
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR $T149312[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149311[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 111
	push	OFFSET $SG142025
	lea	ecx, DWORD PTR $T149313[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	push	OFFSET $SG142026
	lea	ecx, DWORD PTR $T149314[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	push	ecx
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T149313[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149314[ebp]
	push	edx
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetF@@YAMABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00M@Z
	add	esp, 16					; 00000010H
	fstp	DWORD PTR ?set_fSpinImpulseMultiplier@@3MA ; set_fSpinImpulseMultiplier
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR $T149314[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149313[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 113
	push	OFFSET $SG142029
	lea	ecx, DWORD PTR $T149315[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	push	OFFSET $SG142030
	lea	ecx, DWORD PTR $T149316[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	push	0
	lea	ecx, DWORD PTR $T149315[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149316[ebp]
	push	edx
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	DWORD PTR __imp_?IniGetB@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@00_N@Z
	add	esp, 16					; 00000010H
	mov	BYTE PTR ?set_bLocalTime@@3_NA, al	; set_bLocalTime
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR $T149316[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149315[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 115
	call	?ReadUniverse@ZoneUtilities@@YAXXZ	; ZoneUtilities::ReadUniverse
; Line 116
	call	?ReadIniNicknames@EquipmentUtilities@@YAXXZ ; EquipmentUtilities::ReadIniNicknames
; Line 117
	lea	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	push	ecx
	call	?LoadSettings@Rename@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Rename::LoadSettings
	add	esp, 4
; Line 118
	lea	edx, DWORD PTR _scPluginCfgFile$[ebp]
	push	edx
	call	?LoadSettings@GiveCash@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; GiveCash::LoadSettings
	add	esp, 4
; Line 119
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	?LoadSettings@MiscCmds@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; MiscCmds::LoadSettings
	add	esp, 4
; Line 120
	lea	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	push	ecx
	call	?LoadSettings@PimpShip@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; PimpShip::LoadSettings
	add	esp, 4
; Line 121
	lea	edx, DWORD PTR _scPluginCfgFile$[ebp]
	push	edx
	call	?LoadSettings@HyperJump@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; HyperJump::LoadSettings
	add	esp, 4
; Line 122
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	?LoadSettings@PurchaseRestrictions@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; PurchaseRestrictions::LoadSettings
	add	esp, 4
; Line 123
	lea	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	push	ecx
	call	?LoadSettings@IPBans@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; IPBans::LoadSettings
	add	esp, 4
; Line 124
	lea	edx, DWORD PTR _scPluginCfgFile$[ebp]
	push	edx
	call	?LoadSettings@CargoDrop@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CargoDrop::LoadSettings
	add	esp, 4
; Line 125
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	?LoadSettings@Restart@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Restart::LoadSettings
	add	esp, 4
; Line 126
	lea	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	push	ecx
	call	?LoadSettings@RepFixer@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; RepFixer::LoadSettings
	add	esp, 4
; Line 127
	lea	edx, DWORD PTR _scPluginCfgFile$[ebp]
	push	edx
	call	?LoadSettings@Message@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Message::LoadSettings
	add	esp, 4
; Line 128
	lea	eax, DWORD PTR _scPluginCfgFile$[ebp]
	push	eax
	call	?LoadSettings@SystemSensor@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; SystemSensor::LoadSettings
	add	esp, 4
; Line 129
	call	?Init@CrashCatcher@@YAXXZ		; CrashCatcher::Init
; Line 130
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?LoadSettings@@YAXXZ$0:
	lea	ecx, DWORD PTR $T149295[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$1:
	lea	ecx, DWORD PTR _scPluginCfgFile$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$2:
	lea	ecx, DWORD PTR $T149296[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$3:
	lea	ecx, DWORD PTR $T149297[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$4:
	mov	ecx, DWORD PTR $T149298[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$5:
	lea	ecx, DWORD PTR $T149299[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$6:
	lea	ecx, DWORD PTR $T149300[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$7:
	lea	ecx, DWORD PTR $T149301[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$8:
	lea	ecx, DWORD PTR $T149302[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$9:
	lea	ecx, DWORD PTR $T149303[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$10:
	lea	ecx, DWORD PTR $T149304[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$11:
	lea	ecx, DWORD PTR $T149305[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$12:
	lea	ecx, DWORD PTR $T149306[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$13:
	lea	ecx, DWORD PTR $T149307[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$14:
	lea	ecx, DWORD PTR $T149308[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$15:
	lea	ecx, DWORD PTR $T149309[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$16:
	lea	ecx, DWORD PTR $T149310[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$17:
	lea	ecx, DWORD PTR $T149311[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$18:
	lea	ecx, DWORD PTR $T149312[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$19:
	lea	ecx, DWORD PTR $T149313[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$20:
	lea	ecx, DWORD PTR $T149314[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$21:
	lea	ecx, DWORD PTR $T149315[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?LoadSettings@@YAXXZ$22:
	lea	ecx, DWORD PTR $T149316[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?LoadSettings@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-908]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadSettings@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadSettings@@YAXXZ ENDP				; LoadSettings
PUBLIC	?ClearClientInfo@@YAXI@Z			; ClearClientInfo
EXTRN	?ClearClientInfo@SystemSensor@@YAXI@Z:PROC	; SystemSensor::ClearClientInfo
EXTRN	?ClearClientInfo@AntiJumpDisconnect@@YAXI@Z:PROC ; AntiJumpDisconnect::ClearClientInfo
EXTRN	?ClearClientInfo@PurchaseRestrictions@@YAXI@Z:PROC ; PurchaseRestrictions::ClearClientInfo
EXTRN	?ClearClientInfo@Message@@YAXI@Z:PROC		; Message::ClearClientInfo
EXTRN	?ClearClientInfo@IPBans@@YAXI@Z:PROC		; IPBans::ClearClientInfo
EXTRN	?ClearClientInfo@CargoDrop@@YAXI@Z:PROC		; CargoDrop::ClearClientInfo
EXTRN	?ClearClientInfo@HyperJump@@YAXI@Z:PROC		; HyperJump::ClearClientInfo
EXTRN	?ClearClientInfo@MiscCmds@@YAXI@Z:PROC		; MiscCmds::ClearClientInfo
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = 8						; size = 4
?ClearClientInfo@@YAXI@Z PROC				; ClearClientInfo
; Line 134
	push	ebp
	mov	ebp, esp
; Line 135
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 136
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?ClearClientInfo@MiscCmds@@YAXI@Z	; MiscCmds::ClearClientInfo
	add	esp, 4
; Line 137
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?ClearClientInfo@HyperJump@@YAXI@Z	; HyperJump::ClearClientInfo
	add	esp, 4
; Line 138
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	?ClearClientInfo@CargoDrop@@YAXI@Z	; CargoDrop::ClearClientInfo
	add	esp, 4
; Line 139
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?ClearClientInfo@IPBans@@YAXI@Z		; IPBans::ClearClientInfo
	add	esp, 4
; Line 140
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?ClearClientInfo@Message@@YAXI@Z	; Message::ClearClientInfo
	add	esp, 4
; Line 141
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	?ClearClientInfo@PurchaseRestrictions@@YAXI@Z ; PurchaseRestrictions::ClearClientInfo
	add	esp, 4
; Line 142
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?ClearClientInfo@AntiJumpDisconnect@@YAXI@Z ; AntiJumpDisconnect::ClearClientInfo
	add	esp, 4
; Line 143
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?ClearClientInfo@SystemSensor@@YAXI@Z	; SystemSensor::ClearClientInfo
	add	esp, 4
; Line 144
	pop	ebp
	ret	0
?ClearClientInfo@@YAXI@Z ENDP				; ClearClientInfo
_TEXT	ENDS
PUBLIC	?HkTimer@@YAXXZ					; HkTimer
EXTRN	?Timer@Rename@@YAXXZ:PROC			; Rename::Timer
EXTRN	?Timer@Restart@@YAXXZ:PROC			; Restart::Timer
EXTRN	?Timer@Message@@YAXXZ:PROC			; Message::Timer
EXTRN	?Timer@CargoDrop@@YAXXZ:PROC			; CargoDrop::Timer
EXTRN	?Timer@HyperJump@@YAXXZ:PROC			; HyperJump::Timer
EXTRN	?Timer@MiscCmds@@YAXXZ:PROC			; MiscCmds::Timer
; Function compile flags: /Odtp
_TEXT	SEGMENT
?HkTimer@@YAXXZ PROC					; HkTimer
; Line 148
	push	ebp
	mov	ebp, esp
; Line 149
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 150
	call	?Timer@MiscCmds@@YAXXZ			; MiscCmds::Timer
; Line 151
	call	?Timer@HyperJump@@YAXXZ			; HyperJump::Timer
; Line 152
	call	?Timer@CargoDrop@@YAXXZ			; CargoDrop::Timer
; Line 153
	call	?Timer@Message@@YAXXZ			; Message::Timer
; Line 154
	call	?Timer@Restart@@YAXXZ			; Restart::Timer
; Line 155
	call	?Timer@Rename@@YAXXZ			; Rename::Timer
; Line 156
	pop	ebp
	ret	0
?HkTimer@@YAXXZ ENDP					; HkTimer
_TEXT	ENDS
PUBLIC	?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z ; SendDeathMsg
EXTRN	__imp_?AddLog@@YAXPBDZZ:PROC
EXTRN	__imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:PROC
EXTRN	__imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z:PROC
EXTRN	__imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z:PROC
EXTRN	__imp_?Players@@3VPlayerDB@@A:BYTE
EXTRN	?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z:PROC ; Message::SendDeathMsg
EXTRN	?SendDeathMsg@CargoDrop@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z:PROC ; CargoDrop::SendDeathMsg
EXTRN	?SendDeathMsg@HyperJump@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z:PROC ; HyperJump::SendDeathMsg
xdata$x	SEGMENT
__unwindtable$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$3
__ehfuncinfo$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv147 = -148						; size = 4
tv87 = -144						; size = 4
tv145 = -140						; size = 4
tv131 = -136						; size = 4
$T149360 = -132						; size = 28
$T149359 = -104						; size = 28
$T149358 = -76						; size = 28
$T149357 = -48						; size = 28
_killer$ = -20						; size = 4
_victim$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wscMsg$ = 8						; size = 4
_iSystem$ = 12						; size = 4
_iClientIDVictim$ = 16					; size = 4
_iClientIDKiller$ = 20					; size = 4
?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z PROC ; SendDeathMsg
; Line 161
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 136				; 00000088H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 162
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 3 ; returncode
; Line 164
	mov	eax, DWORD PTR _iClientIDKiller$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientIDVictim$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iSystem$[ebp]
	push	edx
	mov	eax, DWORD PTR _wscMsg$[ebp]
	push	eax
	call	?SendDeathMsg@HyperJump@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z ; HyperJump::SendDeathMsg
	add	esp, 16					; 00000010H
; Line 165
	mov	ecx, DWORD PTR _iClientIDKiller$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iClientIDVictim$[ebp]
	push	edx
	mov	eax, DWORD PTR _iSystem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscMsg$[ebp]
	push	ecx
	call	?SendDeathMsg@CargoDrop@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z ; CargoDrop::SendDeathMsg
	add	esp, 16					; 00000010H
; Line 166
	mov	edx, DWORD PTR _iClientIDKiller$[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientIDVictim$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSystem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wscMsg$[ebp]
	push	edx
	call	?SendDeathMsg@Message@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z ; Message::SendDeathMsg
	add	esp, 16					; 00000010H
; Line 168
	mov	eax, DWORD PTR _iClientIDVictim$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	mov	DWORD PTR _victim$[ebp], eax
; Line 169
	mov	ecx, DWORD PTR _iClientIDKiller$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	mov	DWORD PTR _killer$[ebp], eax
; Line 170
	cmp	DWORD PTR _victim$[ebp], 0
	je	$LN2@SendDeathM
	cmp	DWORD PTR _killer$[ebp], 0
	je	$LN2@SendDeathM
; Line 173
	mov	edx, DWORD PTR _killer$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T149357[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _victim$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T149359[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _iSystem$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149357[ebp]
	push	edx
	lea	eax, DWORD PTR $T149358[ebp]
	push	eax
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv131[ebp], eax
	mov	ecx, DWORD PTR tv131[ebp]
	mov	DWORD PTR tv145[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv145[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	lea	edx, DWORD PTR $T149359[ebp]
	push	edx
	lea	eax, DWORD PTR $T149360[ebp]
	push	eax
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR tv87[ebp]
	mov	DWORD PTR tv147[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv147[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	OFFSET $SG142049
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149360[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T149358[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T149359[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149357[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN2@SendDeathM:
; Line 175
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$0:
	lea	ecx, DWORD PTR $T149357[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$1:
	lea	ecx, DWORD PTR $T149359[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$2:
	lea	ecx, DWORD PTR $T149358[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z$3:
	lea	ecx, DWORD PTR $T149360[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z ENDP ; SendDeathMsg
PUBLIC	?HkCb_AddDmgEntry@@YGXPAUDamageList@@GMW4SubObjFate@DamageEntry@@@Z ; HkCb_AddDmgEntry
; Function compile flags: /Odtp
_TEXT	SEGMENT
_dmgList$ = 8						; size = 4
_p1$ = 12						; size = 2
_p2$ = 16						; size = 4
_p3$ = 20						; size = 4
?HkCb_AddDmgEntry@@YGXPAUDamageList@@GMW4SubObjFate@DamageEntry@@@Z PROC ; HkCb_AddDmgEntry
; Line 178
	push	ebp
	mov	ebp, esp
; Line 179
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 180
	pop	ebp
	ret	16					; 00000010H
?HkCb_AddDmgEntry@@YGXPAUDamageList@@GMW4SubObjFate@DamageEntry@@@Z ENDP ; HkCb_AddDmgEntry
_TEXT	ENDS
PUBLIC	__real@466a6000
PUBLIC	__$ArrayPad$
PUBLIC	?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z ; HkIEngine::Dock_Call
EXTRN	?Dock_Call@SystemSensor@@YAXABI0HW4DOCK_HOST_RESPONSE@@@Z:PROC ; SystemSensor::Dock_Call
EXTRN	?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z:PROC ; PrintLocalUserCmdText
EXTRN	__imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?ReplaceStr@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@00@Z:PROC
EXTRN	__imp_?GetType@SpaceObj@pub@@YAHIAAI@Z:PROC
EXTRN	__imp_?HkGetClientIDByShip@@YAII@Z:PROC
;	COMDAT __real@466a6000
CONST	SEGMENT
__real@466a6000 DD 0466a6000r			; 15000
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z$3
__ehfuncinfo$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv145 = -144						; size = 4
tv94 = -140						; size = 4
$T149374 = -136						; size = 28
$T149373 = -108						; size = 28
$T149372 = -80						; size = 28
_wscMsg$142085 = -52					; size = 28
__$ArrayPad$ = -24					; size = 4
_iTypeID$142081 = -20					; size = 4
_iClientID$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iShip$ = 8						; size = 4
_iDockTarget$ = 12					; size = 4
_iCancel$ = 16						; size = 4
_response$ = 20						; size = 4
?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z PROC ; HkIEngine::Dock_Call
; Line 212
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 132				; 00000084H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 213
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 215
	mov	eax, DWORD PTR _iShip$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp_?HkGetClientIDByShip@@YAII@Z
	add	esp, 4
	mov	DWORD PTR _iClientID$[ebp], eax
; Line 216
	cmp	DWORD PTR _iClientID$[ebp], 0
	je	$LN3@Dock_Call
	cmp	DWORD PTR _response$[ebp], 4
	jne	$LN3@Dock_Call
; Line 219
	lea	edx, DWORD PTR _iTypeID$142081[ebp]
	push	edx
	mov	eax, DWORD PTR _iDockTarget$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp_?GetType@SpaceObj@pub@@YAHIAAI@Z
	add	esp, 8
; Line 220
	cmp	DWORD PTR _iTypeID$142081[ebp], 32	; 00000020H
	je	SHORT $LN2@Dock_Call
	cmp	DWORD PTR _iTypeID$142081[ebp], 256	; 00000100H
	jne	$LN3@Dock_Call
$LN2@Dock_Call:
; Line 222
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _iDockTarget$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _iShip$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?IsDockingAllowed@@YA_NIII@Z		; IsDockingAllowed
	add	esp, 12					; 0000000cH
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@Dock_Call
; Line 225
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 226
	xor	eax, eax
	jmp	$LN5@Dock_Call
$LN1@Dock_Call:
; Line 230
	push	OFFSET $SG142086
	lea	ecx, DWORD PTR _wscMsg$142085[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 231
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T149372[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	OFFSET $SG142090
	lea	ecx, DWORD PTR $T149373[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	eax, DWORD PTR $T149372[ebp]
	push	eax
	lea	ecx, DWORD PTR $T149373[ebp]
	push	ecx
	lea	edx, DWORD PTR _wscMsg$142085[ebp]
	push	edx
	lea	eax, DWORD PTR $T149374[ebp]
	push	eax
	call	DWORD PTR __imp_?ReplaceStr@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@00@Z
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR tv145[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR tv145[ebp]
	push	edx
	lea	ecx, DWORD PTR _wscMsg$142085[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T149374[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T149373[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T149372[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 232
	push	ecx
	fld	DWORD PTR __real@466a6000
	fstp	DWORD PTR [esp]
	lea	eax, DWORD PTR _wscMsg$142085[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?PrintLocalUserCmdText@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@M@Z ; PrintLocalUserCmdText
	add	esp, 12					; 0000000cH
; Line 233
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscMsg$142085[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN3@Dock_Call:
; Line 236
	mov	edx, DWORD PTR _response$[ebp]
	push	edx
	mov	eax, DWORD PTR _iCancel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iDockTarget$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iShip$[ebp]
	push	edx
	call	?Dock_Call@SystemSensor@@YAXABI0HW4DOCK_HOST_RESPONSE@@@Z ; SystemSensor::Dock_Call
	add	esp, 16					; 00000010H
; Line 237
	xor	eax, eax
$LN5@Dock_Call:
; Line 238
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z$0:
	lea	ecx, DWORD PTR _wscMsg$142085[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z$1:
	lea	ecx, DWORD PTR $T149372[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z$2:
	lea	ecx, DWORD PTR $T149373[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z$3:
	lea	ecx, DWORD PTR $T149374[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-136]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z ENDP ; HkIEngine::Dock_Call
PUBLIC	__real@bfe19999a0000000
PUBLIC	__real@00000000
PUBLIC	__$ArrayPad$
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ:PROC
EXTRN	__imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp__rand:PROC
EXTRN	__imp_?SendNNMessage@Player@pub@@YAHII@Z:PROC
EXTRN	__imp_?GetNicknameId@pub@@YAIPBD@Z:PROC
EXTRN	__imp_?GetAttitude@Reputation@pub@@YAHABH0AAM@Z:PROC
EXTRN	__imp_?GetRep@SpaceObj@pub@@YAHIAAH@Z:PROC
EXTRN	__imp_?GetSolarRep@SpaceObj@pub@@YAHIAAH@Z:PROC
;	COMDAT __real@bfe19999a0000000
CONST	SEGMENT
__real@bfe19999a0000000 DQ 0bfe19999a0000000r	; -0.55
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?IsDockingAllowed@@YA_NIII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsDockingAllowed@@YA_NIII@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?IsDockingAllowed@@YA_NIII@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?IsDockingAllowed@@YA_NIII@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?IsDockingAllowed@@YA_NIII@Z$4
__ehfuncinfo$?IsDockingAllowed@@YA_NIII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?IsDockingAllowed@@YA_NIII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv152 = -132						; size = 4
tv86 = -128						; size = 4
$T149388 = -121						; size = 1
$T149387 = -120						; size = 4
_wscMsg$142066 = -116					; size = 84
__$ArrayPad$ = -28					; size = 4
_fAttitude$ = -24					; size = 4
_iPlayerRep$ = -20					; size = 4
_iSolarRep$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iShip$ = 8						; size = 4
_iDockTarget$ = 12					; size = 4
_iClientID$ = 16					; size = 4
?IsDockingAllowed@@YA_NIII@Z PROC			; IsDockingAllowed
; Line 183
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?IsDockingAllowed@@YA_NIII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 120				; 00000078H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 187
	lea	eax, DWORD PTR _iSolarRep$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iDockTarget$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetSolarRep@SpaceObj@pub@@YAHIAAH@Z
	add	esp, 8
; Line 190
	lea	edx, DWORD PTR _iPlayerRep$[ebp]
	push	edx
	mov	eax, DWORD PTR _iShip$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetRep@SpaceObj@pub@@YAHIAAH@Z
	add	esp, 8
; Line 192
	fldz
	fstp	DWORD PTR _fAttitude$[ebp]
; Line 193
	lea	ecx, DWORD PTR _fAttitude$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iPlayerRep$[ebp]
	push	edx
	lea	eax, DWORD PTR _iSolarRep$[ebp]
	push	eax
	call	DWORD PTR __imp_?GetAttitude@Reputation@pub@@YAHABH0AAM@Z
	add	esp, 12					; 0000000cH
; Line 194
	fld	DWORD PTR _fAttitude$[ebp]
	fcomp	QWORD PTR __real@bfe19999a0000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	$LN1@IsDockingA
; Line 196
	push	OFFSET $SG142065
	call	DWORD PTR __imp_?GetNicknameId@pub@@YAIPBD@Z
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	DWORD PTR __imp_?SendNNMessage@Player@pub@@YAHII@Z
	add	esp, 8
; Line 198
	push	OFFSET $SG142067
	lea	ecx, DWORD PTR _wscMsg$142066[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 199
	push	OFFSET $SG142068
	lea	ecx, DWORD PTR _wscMsg$142066[ebp+28]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 201
	push	OFFSET $SG142069
	lea	ecx, DWORD PTR _wscMsg$142066[ebp+56]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 202
	call	DWORD PTR __imp__rand
	cdq
	mov	ecx, 3
	idiv	ecx
	imul	edx, 28					; 0000001cH
	lea	edx, DWORD PTR _wscMsg$142066[ebp+edx]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149387[ebp], esp
	push	edx
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv86[ebp], eax
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv152[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 203
	mov	BYTE PTR $T149388[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	push	edx
	push	3
	push	28					; 0000001cH
	lea	eax, DWORD PTR _wscMsg$142066[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	al, BYTE PTR $T149388[ebp]
	jmp	SHORT $LN2@IsDockingA
$LN1@IsDockingA:
; Line 206
	mov	al, 1
$LN2@IsDockingA:
; Line 207
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?IsDockingAllowed@@YA_NIII@Z$0:
	lea	ecx, DWORD PTR _wscMsg$142066[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?IsDockingAllowed@@YA_NIII@Z$1:
	lea	ecx, DWORD PTR _wscMsg$142066[ebp+28]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?IsDockingAllowed@@YA_NIII@Z$3:
	mov	eax, DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	push	eax
	push	3
	push	28					; 0000001cH
	lea	ecx, DWORD PTR _wscMsg$142066[ebp]
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
__unwindfunclet$?IsDockingAllowed@@YA_NIII@Z$4:
	mov	ecx, DWORD PTR $T149387[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?IsDockingAllowed@@YA_NIII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-124]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?IsDockingAllowed@@YA_NIII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?IsDockingAllowed@@YA_NIII@Z ENDP			; IsDockingAllowed
PUBLIC	?Startup_AFTER@HkIServerImpl@@YG_NABUSStartupInfo@@@Z ; HkIServerImpl::Startup_AFTER
EXTRN	?Done@StartupCache@@YAXXZ:PROC			; StartupCache::Done
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p1$ = 8						; size = 4
?Startup_AFTER@HkIServerImpl@@YG_NABUSStartupInfo@@@Z PROC ; HkIServerImpl::Startup_AFTER
; Line 244
	push	ebp
	mov	ebp, esp
; Line 245
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 246
	call	?Done@StartupCache@@YAXXZ		; StartupCache::Done
; Line 247
	mov	al, 1
; Line 248
	pop	ebp
	ret	4
?Startup_AFTER@HkIServerImpl@@YG_NABUSStartupInfo@@@Z ENDP ; HkIServerImpl::Startup_AFTER
_TEXT	ENDS
PUBLIC	?Startup@HkIServerImpl@@YG_NABUSStartupInfo@@@Z	; HkIServerImpl::Startup
EXTRN	?Init@StartupCache@@YAXXZ:PROC			; StartupCache::Init
; Function compile flags: /Odtp
_TEXT	SEGMENT
_p1$ = 8						; size = 4
?Startup@HkIServerImpl@@YG_NABUSStartupInfo@@@Z PROC	; HkIServerImpl::Startup
; Line 251
	push	ebp
	mov	ebp, esp
; Line 252
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 253
	call	?Init@StartupCache@@YAXXZ		; StartupCache::Init
; Line 254
	mov	al, 1
; Line 255
	pop	ebp
	ret	4
?Startup@HkIServerImpl@@YG_NABUSStartupInfo@@@Z ENDP	; HkIServerImpl::Startup
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z	; HkIServerImpl::Login
EXTRN	__imp_?ForceLogout@CAccount@@QAEXXZ:PROC
EXTRN	__imp_?FreeWString@@3P6AXPAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@@ZA:DWORD
EXTRN	__imp_?BanAccount@PlayerDB@@QAE_NAAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@_N@Z:PROC
EXTRN	__imp_?CreateWString@@3P6APAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@PBG@ZA:DWORD
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z:PROC
EXTRN	__imp_?GetUserDataPath@@YA_NQAD@Z:PROC
EXTRN	__imp_?HkGetAccountDirName@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC
EXTRN	__imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ:PROC
EXTRN	__imp_?FindAccountFromClientID@PlayerDB@@QAEPAVCAccount@@I@Z:PROC
xdata$x	SEGMENT
__ehfuncinfo$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z DD 019930522H
	DD	0aH
	DD	FLAT:__unwindtable$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$5
	DD	03H
	DD	FLAT:__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$5
	DD	02H
	DD	FLAT:__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$5
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv156 = -492						; size = 4
tv160 = -488						; size = 4
tv154 = -484						; size = 4
tv159 = -480						; size = 4
tv152 = -476						; size = 4
tv158 = -472						; size = 4
tv150 = -468						; size = 4
tv69 = -464						; size = 4
$T149409 = -460						; size = 28
$T149408 = -432						; size = 28
$T149407 = -404						; size = 28
$T149406 = -376						; size = 28
_flStr$142116 = -348					; size = 4
_wscDir$142103 = -344					; size = 28
_path$142105 = -316					; size = 28
_file$142113 = -288					; size = 4
_szDataPath$142104 = -284				; size = 260
__$ArrayPad$ = -20					; size = 4
_acc$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_li$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z PROC	; HkIServerImpl::Login
; Line 261
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 480				; 000001e0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 262
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 264
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?FindAccountFromClientID@PlayerDB@@QAEPAVCAccount@@I@Z
	mov	DWORD PTR _acc$[ebp], eax
; Line 265
	cmp	DWORD PTR _acc$[ebp], 0
	je	$LN3@Login
; Line 267
	lea	ecx, DWORD PTR _wscDir$142103[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 268
	lea	ecx, DWORD PTR _wscDir$142103[ebp]
	push	ecx
	mov	edx, DWORD PTR _acc$[ebp]
	push	edx
	call	DWORD PTR __imp_?HkGetAccountDirName@@YA?AW4HK_ERROR@@PAVCAccount@@AAV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	add	esp, 8
; Line 271
	lea	eax, DWORD PTR _szDataPath$142104[ebp]
	push	eax
	call	DWORD PTR __imp_?GetUserDataPath@@YA_NQAD@Z
	add	esp, 4
; Line 273
	push	OFFSET $SG142111
	lea	ecx, DWORD PTR _wscDir$142103[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149406[ebp]
	push	edx
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv150[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv150[ebp]
	push	ecx
	push	OFFSET $SG142112
	lea	edx, DWORD PTR _szDataPath$142104[ebp]
	push	edx
	lea	ecx, DWORD PTR $T149407[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR tv158[ebp], eax
	mov	eax, DWORD PTR tv158[ebp]
	mov	DWORD PTR tv152[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv152[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149408[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv159[ebp], eax
	mov	eax, DWORD PTR tv159[ebp]
	mov	DWORD PTR tv154[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv154[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149409[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv160[ebp], eax
	mov	eax, DWORD PTR tv160[ebp]
	mov	DWORD PTR tv156[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR tv156[ebp]
	push	ecx
	lea	edx, DWORD PTR _path$142105[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T149409[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T149408[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR $T149407[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T149406[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 275
	push	OFFSET $SG142114
	lea	ecx, DWORD PTR _path$142105[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	DWORD PTR _file$142113[ebp], eax
; Line 276
	cmp	DWORD PTR _file$142113[ebp], 0
	je	SHORT $LN1@Login
; Line 278
	mov	eax, DWORD PTR _file$142113[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
; Line 281
	mov	ecx, DWORD PTR _acc$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __imp_?CreateWString@@3P6APAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@PBG@ZA
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 4
	mov	DWORD PTR _flStr$142116[ebp], eax
; Line 282
	push	1
	mov	edx, DWORD PTR _flStr$142116[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?BanAccount@PlayerDB@@QAE_NAAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@_N@Z
; Line 283
	mov	eax, DWORD PTR _flStr$142116[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?FreeWString@@3P6AXPAV?$basic_string@GUci_wchar_traits@@V?$allocator@G@std@@@std@@@ZA
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 4
; Line 286
	mov	ecx, DWORD PTR _acc$[ebp]
	call	DWORD PTR __imp_?ForceLogout@CAccount@@QAEXXZ
; Line 289
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN1@Login:
; Line 291
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _path$142105[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _wscDir$142103[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN3@Login:
; Line 292
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$0:
	lea	ecx, DWORD PTR _wscDir$142103[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$1:
	lea	ecx, DWORD PTR $T149406[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$2:
	lea	ecx, DWORD PTR $T149407[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$3:
	lea	ecx, DWORD PTR $T149408[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$4:
	lea	ecx, DWORD PTR $T149409[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z$5:
	lea	ecx, DWORD PTR _path$142105[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-484]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z ENDP	; HkIServerImpl::Login
PUBLIC	?CreateNewCharacter@HkIServerImpl@@YGXABUSCreateCharacterInfo@@I@Z ; HkIServerImpl::CreateNewCharacter
EXTRN	__imp_?CharacterInfoReq@IServerImpl@@UAEXI_N@Z:PROC
EXTRN	__imp__Server:BYTE
EXTRN	?CreateNewCharacter@Rename@@YA_NABUSCreateCharacterInfo@@I@Z:PROC ; Rename::CreateNewCharacter
; Function compile flags: /Odtp
_TEXT	SEGMENT
_si$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?CreateNewCharacter@HkIServerImpl@@YGXABUSCreateCharacterInfo@@I@Z PROC ; HkIServerImpl::CreateNewCharacter
; Line 295
	push	ebp
	mov	ebp, esp
; Line 296
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 297
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _si$[ebp]
	push	ecx
	call	?CreateNewCharacter@Rename@@YA_NABUSCreateCharacterInfo@@I@Z ; Rename::CreateNewCharacter
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@CreateNewC
; Line 299
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 300
	push	1
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp__Server
	call	DWORD PTR __imp_?CharacterInfoReq@IServerImpl@@UAEXI_N@Z
$LN2@CreateNewC:
; Line 302
	pop	ebp
	ret	8
?CreateNewCharacter@HkIServerImpl@@YGXABUSCreateCharacterInfo@@I@Z ENDP ; HkIServerImpl::CreateNewCharacter
_TEXT	ENDS
PUBLIC	?RequestEvent@HkIServerImpl@@YGXHIIIKI@Z	; HkIServerImpl::RequestEvent
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iTargetTypeID$142132 = -4				; size = 4
_iIsFormationRequest$ = 8				; size = 4
_iShip$ = 12						; size = 4
_iDockTarget$ = 16					; size = 4
_p4$ = 20						; size = 4
_p5$ = 24						; size = 4
_iClientID$ = 28					; size = 4
?RequestEvent@HkIServerImpl@@YGXHIIIKI@Z PROC		; HkIServerImpl::RequestEvent
; Line 305
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 306
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 307
	cmp	DWORD PTR _iClientID$[ebp], 0
	je	SHORT $LN6@RequestEve
; Line 309
	cmp	DWORD PTR _iIsFormationRequest$[ebp], 0
	jne	SHORT $LN6@RequestEve
; Line 312
	lea	eax, DWORD PTR _iTargetTypeID$142132[ebp]
	push	eax
	mov	ecx, DWORD PTR _iDockTarget$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetType@SpaceObj@pub@@YAHIAAI@Z
	add	esp, 8
; Line 313
	cmp	DWORD PTR _iTargetTypeID$142132[ebp], 32 ; 00000020H
	je	SHORT $LN2@RequestEve
	cmp	DWORD PTR _iTargetTypeID$142132[ebp], 256 ; 00000100H
	jne	SHORT $LN6@RequestEve
$LN2@RequestEve:
; Line 315
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _iDockTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iShip$[ebp]
	push	ecx
	call	?IsDockingAllowed@@YA_NIII@Z		; IsDockingAllowed
	add	esp, 12					; 0000000cH
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN6@RequestEve
; Line 318
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN6@RequestEve:
; Line 324
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?RequestEvent@HkIServerImpl@@YGXHIIIKI@Z ENDP		; HkIServerImpl::RequestEvent
_TEXT	ENDS
PUBLIC	?PlayerLaunch@HkIServerImpl@@YGXII@Z		; HkIServerImpl::PlayerLaunch
EXTRN	?PlayerLaunch@SystemSensor@@YAXII@Z:PROC	; SystemSensor::PlayerLaunch
EXTRN	?PlayerLaunch@HyperJump@@YAXII@Z:PROC		; HyperJump::PlayerLaunch
EXTRN	?PlayerLaunch@PurchaseRestrictions@@YAXII@Z:PROC ; PurchaseRestrictions::PlayerLaunch
EXTRN	?PlayerLaunch@GiveCash@@YAXII@Z:PROC		; GiveCash::PlayerLaunch
EXTRN	?PlayerLaunch@Message@@YAXII@Z:PROC		; Message::PlayerLaunch
EXTRN	?PlayerLaunch@RepFixer@@YAXII@Z:PROC		; RepFixer::PlayerLaunch
EXTRN	?PlayerLaunch@IPBans@@YAXII@Z:PROC		; IPBans::PlayerLaunch
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iShip$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?PlayerLaunch@HkIServerImpl@@YGXII@Z PROC		; HkIServerImpl::PlayerLaunch
; Line 327
	push	ebp
	mov	ebp, esp
; Line 328
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 331
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iShip$[ebp]
	push	ecx
	call	?PlayerLaunch@IPBans@@YAXII@Z		; IPBans::PlayerLaunch
	add	esp, 8
; Line 332
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _iShip$[ebp]
	push	eax
	call	?PlayerLaunch@RepFixer@@YAXII@Z		; RepFixer::PlayerLaunch
	add	esp, 8
; Line 333
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iShip$[ebp]
	push	edx
	call	?PlayerLaunch@Message@@YAXII@Z		; Message::PlayerLaunch
	add	esp, 8
; Line 334
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iShip$[ebp]
	push	ecx
	call	?PlayerLaunch@GiveCash@@YAXII@Z		; GiveCash::PlayerLaunch
	add	esp, 8
; Line 335
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _iShip$[ebp]
	push	eax
	call	?PlayerLaunch@PurchaseRestrictions@@YAXII@Z ; PurchaseRestrictions::PlayerLaunch
	add	esp, 8
; Line 336
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iShip$[ebp]
	push	edx
	call	?PlayerLaunch@HyperJump@@YAXII@Z	; HyperJump::PlayerLaunch
	add	esp, 8
; Line 337
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iShip$[ebp]
	push	ecx
	call	?PlayerLaunch@SystemSensor@@YAXII@Z	; SystemSensor::PlayerLaunch
	add	esp, 8
; Line 338
	pop	ebp
	ret	8
?PlayerLaunch@HkIServerImpl@@YGXII@Z ENDP		; HkIServerImpl::PlayerLaunch
_TEXT	ENDS
PUBLIC	?PlayerLaunch_AFTER@HkIServerImpl@@YGXII@Z	; HkIServerImpl::PlayerLaunch_AFTER
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iShip$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?PlayerLaunch_AFTER@HkIServerImpl@@YGXII@Z PROC		; HkIServerImpl::PlayerLaunch_AFTER
; Line 341
	push	ebp
	mov	ebp, esp
; Line 342
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 343
	pop	ebp
	ret	8
?PlayerLaunch_AFTER@HkIServerImpl@@YGXII@Z ENDP		; HkIServerImpl::PlayerLaunch_AFTER
_TEXT	ENDS
PUBLIC	?BaseEnter@HkIServerImpl@@YGXII@Z		; HkIServerImpl::BaseEnter
EXTRN	?BaseEnter@MiscCmds@@YAXII@Z:PROC		; MiscCmds::BaseEnter
EXTRN	?BaseEnter@PurchaseRestrictions@@YAXII@Z:PROC	; PurchaseRestrictions::BaseEnter
EXTRN	?BaseEnter@GiveCash@@YAXII@Z:PROC		; GiveCash::BaseEnter
EXTRN	?BaseEnter@Message@@YAXII@Z:PROC		; Message::BaseEnter
EXTRN	?BaseEnter@RepFixer@@YAXII@Z:PROC		; RepFixer::BaseEnter
EXTRN	?BaseEnter@IPBans@@YAXII@Z:PROC			; IPBans::BaseEnter
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iBaseID$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?BaseEnter@HkIServerImpl@@YGXII@Z PROC			; HkIServerImpl::BaseEnter
; Line 346
	push	ebp
	mov	ebp, esp
; Line 347
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 348
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iBaseID$[ebp]
	push	ecx
	call	?BaseEnter@IPBans@@YAXII@Z		; IPBans::BaseEnter
	add	esp, 8
; Line 349
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _iBaseID$[ebp]
	push	eax
	call	?BaseEnter@RepFixer@@YAXII@Z		; RepFixer::BaseEnter
	add	esp, 8
; Line 350
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iBaseID$[ebp]
	push	edx
	call	?BaseEnter@Message@@YAXII@Z		; Message::BaseEnter
	add	esp, 8
; Line 351
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iBaseID$[ebp]
	push	ecx
	call	?BaseEnter@GiveCash@@YAXII@Z		; GiveCash::BaseEnter
	add	esp, 8
; Line 352
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _iBaseID$[ebp]
	push	eax
	call	?BaseEnter@PurchaseRestrictions@@YAXII@Z ; PurchaseRestrictions::BaseEnter
	add	esp, 8
; Line 353
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iBaseID$[ebp]
	push	edx
	call	?BaseEnter@MiscCmds@@YAXII@Z		; MiscCmds::BaseEnter
	add	esp, 8
; Line 354
	pop	ebp
	ret	8
?BaseEnter@HkIServerImpl@@YGXII@Z ENDP			; HkIServerImpl::BaseEnter
_TEXT	ENDS
PUBLIC	__real@41df4add40000000
PUBLIC	?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z		; HkIServerImpl::BaseEnter_AFTER
EXTRN	?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z:PROC ; HKGetShipValue
;	COMDAT __real@41df4add40000000
CONST	SEGMENT
__real@41df4add40000000 DQ 041df4add40000000r	; 2.1e+009
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z$2
__ehfuncinfo$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv134 = -112						; size = 4
tv85 = -108						; size = 4
$T149429 = -104						; size = 28
$T149428 = -76						; size = 28
$T149427 = -48						; size = 28
$T149426 = -17						; size = 1
_fValue$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iBaseID$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z PROC		; HkIServerImpl::BaseEnter_AFTER
; Line 357
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 100				; 00000064H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 359
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T149427[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fValue$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149427[ebp]
	push	edx
	call	?HKGetShipValue@@YA?AW4HK_ERROR@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@AAM@Z ; HKGetShipValue
	add	esp, 8
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	BYTE PTR $T149426[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149427[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	movzx	eax, BYTE PTR $T149426[ebp]
	test	eax, eax
	je	$LN1@BaseEnter_
; Line 361
	fld	DWORD PTR _fValue$[ebp]
	fcomp	QWORD PTR __real@41df4add40000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN1@BaseEnter_
; Line 363
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __imp_?Players@@3VPlayerDB@@A
	call	DWORD PTR __imp_?GetActiveCharacterName@PlayerDB@@QBEPBGI@Z
	push	eax
	lea	ecx, DWORD PTR $T149428[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	fld	DWORD PTR _fValue$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	lea	edx, DWORD PTR $T149428[ebp]
	push	edx
	lea	eax, DWORD PTR $T149429[ebp]
	push	eax
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv85[ebp], eax
	mov	ecx, DWORD PTR tv85[ebp]
	mov	DWORD PTR tv134[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv134[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	push	OFFSET $SG142159
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T149429[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149428[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN1@BaseEnter_:
; Line 366
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z$0:
	lea	ecx, DWORD PTR $T149427[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z$1:
	lea	ecx, DWORD PTR $T149428[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z$2:
	lea	ecx, DWORD PTR $T149429[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?BaseEnter_AFTER@HkIServerImpl@@YGXII@Z ENDP		; HkIServerImpl::BaseEnter_AFTER
PUBLIC	?LocationEnter@HkIServerImpl@@YGXII@Z		; HkIServerImpl::LocationEnter
EXTRN	?LocationEnter@PimpShip@@YAXII@Z:PROC		; PimpShip::LocationEnter
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iLocationID$ = 8					; size = 4
_iClientID$ = 12					; size = 4
?LocationEnter@HkIServerImpl@@YGXII@Z PROC		; HkIServerImpl::LocationEnter
; Line 369
	push	ebp
	mov	ebp, esp
; Line 370
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 371
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iLocationID$[ebp]
	push	ecx
	call	?LocationEnter@PimpShip@@YAXII@Z	; PimpShip::LocationEnter
	add	esp, 8
; Line 372
	pop	ebp
	ret	8
?LocationEnter@HkIServerImpl@@YGXII@Z ENDP		; HkIServerImpl::LocationEnter
_TEXT	ENDS
PUBLIC	?DisConnect@HkIServerImpl@@YGXIW4EFLConnection@@@Z ; HkIServerImpl::DisConnect
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = 8						; size = 4
_state$ = 12						; size = 4
?DisConnect@HkIServerImpl@@YGXIW4EFLConnection@@@Z PROC	; HkIServerImpl::DisConnect
; Line 375
	push	ebp
	mov	ebp, esp
; Line 376
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 377
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?ClearClientInfo@@YAXI@Z		; ClearClientInfo
	add	esp, 4
; Line 378
	pop	ebp
	ret	8
?DisConnect@HkIServerImpl@@YGXIW4EFLConnection@@@Z ENDP	; HkIServerImpl::DisConnect
_TEXT	ENDS
PUBLIC	?CharacterSelect_AFTER@HkIServerImpl@@YGXABUCHARACTER_ID@@I@Z ; HkIServerImpl::CharacterSelect_AFTER
EXTRN	?CharacterSelect_AFTER@Rename@@YAXABUCHARACTER_ID@@I@Z:PROC ; Rename::CharacterSelect_AFTER
; Function compile flags: /Odtp
_TEXT	SEGMENT
_charId$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?CharacterSelect_AFTER@HkIServerImpl@@YGXABUCHARACTER_ID@@I@Z PROC ; HkIServerImpl::CharacterSelect_AFTER
; Line 381
	push	ebp
	mov	ebp, esp
; Line 382
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 383
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?ClearClientInfo@@YAXI@Z		; ClearClientInfo
	add	esp, 4
; Line 384
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _charId$[ebp]
	push	edx
	call	?CharacterSelect_AFTER@Rename@@YAXABUCHARACTER_ID@@I@Z ; Rename::CharacterSelect_AFTER
	add	esp, 8
; Line 385
	pop	ebp
	ret	8
?CharacterSelect_AFTER@HkIServerImpl@@YGXABUCHARACTER_ID@@I@Z ENDP ; HkIServerImpl::CharacterSelect_AFTER
_TEXT	ENDS
PUBLIC	?JumpInComplete_AFTER@HkIServerImpl@@YGXII@Z	; HkIServerImpl::JumpInComplete_AFTER
EXTRN	__imp_?SetInvincible@SpaceObj@pub@@YAHI_N0M@Z:PROC
EXTRN	?JumpInComplete@SystemSensor@@YAXIII@Z:PROC	; SystemSensor::JumpInComplete
EXTRN	?JumpInComplete@AntiJumpDisconnect@@YAXIII@Z:PROC ; AntiJumpDisconnect::JumpInComplete
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = -4					; size = 4
_iSystem$ = 8						; size = 4
_iShip$ = 12						; size = 4
?JumpInComplete_AFTER@HkIServerImpl@@YGXII@Z PROC	; HkIServerImpl::JumpInComplete_AFTER
; Line 388
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 389
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 390
	mov	eax, DWORD PTR _iShip$[ebp]
	push	eax
	call	DWORD PTR __imp_?HkGetClientIDByShip@@YAII@Z
	add	esp, 4
	mov	DWORD PTR _iClientID$[ebp], eax
; Line 391
	cmp	DWORD PTR _iClientID$[ebp], 0
	je	SHORT $LN1@JumpInComp
; Line 393
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iShip$[ebp]
	push	edx
	mov	eax, DWORD PTR _iSystem$[ebp]
	push	eax
	call	?JumpInComplete@AntiJumpDisconnect@@YAXIII@Z ; AntiJumpDisconnect::JumpInComplete
	add	esp, 12					; 0000000cH
; Line 394
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iShip$[ebp]
	push	edx
	mov	eax, DWORD PTR _iSystem$[ebp]
	push	eax
	call	?JumpInComplete@SystemSensor@@YAXIII@Z	; SystemSensor::JumpInComplete
	add	esp, 12					; 0000000cH
$LN1@JumpInComp:
; Line 398
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	0
	push	0
	mov	ecx, DWORD PTR _iShip$[ebp]
	push	ecx
	call	DWORD PTR __imp_?SetInvincible@SpaceObj@pub@@YAHI_N0M@Z
	add	esp, 16					; 00000010H
; Line 399
	mov	esp, ebp
	pop	ebp
	ret	8
?JumpInComplete_AFTER@HkIServerImpl@@YGXII@Z ENDP	; HkIServerImpl::JumpInComplete_AFTER
_TEXT	ENDS
PUBLIC	?SystemSwitchOutComplete@HkIServerImpl@@YGXII@Z	; HkIServerImpl::SystemSwitchOutComplete
EXTRN	?SystemSwitchOutComplete@HyperJump@@YA_NII@Z:PROC ; HyperJump::SystemSwitchOutComplete
EXTRN	?SystemSwitchOutComplete@AntiJumpDisconnect@@YAXII@Z:PROC ; AntiJumpDisconnect::SystemSwitchOutComplete
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iShip$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?SystemSwitchOutComplete@HkIServerImpl@@YGXII@Z PROC	; HkIServerImpl::SystemSwitchOutComplete
; Line 402
	push	ebp
	mov	ebp, esp
; Line 403
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 406
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	1
	push	1
	mov	eax, DWORD PTR _iShip$[ebp]
	push	eax
	call	DWORD PTR __imp_?SetInvincible@SpaceObj@pub@@YAHI_N0M@Z
	add	esp, 16					; 00000010H
; Line 407
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iShip$[ebp]
	push	edx
	call	?SystemSwitchOutComplete@AntiJumpDisconnect@@YAXII@Z ; AntiJumpDisconnect::SystemSwitchOutComplete
	add	esp, 8
; Line 408
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iShip$[ebp]
	push	ecx
	call	?SystemSwitchOutComplete@HyperJump@@YA_NII@Z ; HyperJump::SystemSwitchOutComplete
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@SystemSwit
; Line 409
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN1@SystemSwit:
; Line 410
	pop	ebp
	ret	8
?SystemSwitchOutComplete@HkIServerImpl@@YGXII@Z ENDP	; HkIServerImpl::SystemSwitchOutComplete
_TEXT	ENDS
PUBLIC	__real@bff0000000000000
PUBLIC	?SPObjCollision@HkIServerImpl@@YGXABUSSPObjCollisionInfo@@I@Z ; HkIServerImpl::SPObjCollision
EXTRN	__imp_?AddImpulse@SpaceObj@pub@@YAHABIABVVector@@1@Z:PROC
EXTRN	__imp_?GetMotion@SpaceObj@pub@@YAHIAAVVector@@0@Z:PROC
EXTRN	__imp_?GetShip@Player@pub@@YAHABIAAI@Z:PROC
EXTRN	__imp_?GetMass@SpaceObj@pub@@YAHABIAAM@Z:PROC
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
; Function compile flags: /Odtp
CONST	ENDS
_TEXT	SEGMENT
$T149446 = -44						; size = 4
$T149445 = -40						; size = 4
_client_mass$ = -36					; size = 4
_V1$ = -32						; size = 12
_target_mass$ = -20					; size = 4
_V2$ = -16						; size = 12
_client_ship$ = -4					; size = 4
_ci$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?SPObjCollision@HkIServerImpl@@YGXABUSSPObjCollisionInfo@@I@Z PROC ; HkIServerImpl::SPObjCollision
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
; Line 414
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 417
	fld	DWORD PTR ?set_fSpinProtectMass@@3MA	; set_fSpinProtectMass
	fcomp	QWORD PTR __real@bff0000000000000
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@SPObjColli
; Line 418
	jmp	$LN4@SPObjColli
$LN3@SPObjColli:
; Line 426
	mov	eax, DWORD PTR _ci$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T149445[ebp], ecx
	lea	edx, DWORD PTR _target_mass$[ebp]
	push	edx
	lea	eax, DWORD PTR $T149445[ebp]
	push	eax
	call	DWORD PTR __imp_?GetMass@SpaceObj@pub@@YAHABIAAM@Z
	add	esp, 8
; Line 429
	lea	ecx, DWORD PTR _client_ship$[ebp]
	push	ecx
	lea	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	DWORD PTR __imp_?GetShip@Player@pub@@YAHABIAAI@Z
	add	esp, 8
; Line 432
	lea	eax, DWORD PTR _client_mass$[ebp]
	push	eax
	lea	ecx, DWORD PTR _client_ship$[ebp]
	push	ecx
	call	DWORD PTR __imp_?GetMass@SpaceObj@pub@@YAHABIAAM@Z
	add	esp, 8
; Line 435
	fld	DWORD PTR _target_mass$[ebp]
	fld	DWORD PTR ?set_fSpinProtectMass@@3MA	; set_fSpinProtectMass
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN2@SPObjColli
; Line 436
	jmp	$LN4@SPObjColli
$LN2@SPObjColli:
; Line 439
	fld	DWORD PTR _client_mass$[ebp]
	fadd	ST(0), ST(0)
	fld	DWORD PTR _target_mass$[ebp]
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN1@SPObjColli
; Line 440
	jmp	$LN4@SPObjColli
$LN1@SPObjColli:
; Line 443
	lea	edx, DWORD PTR _V2$[ebp]
	push	edx
	lea	eax, DWORD PTR _V1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ci$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp_?GetMotion@SpaceObj@pub@@YAHIAAVVector@@0@Z
	add	esp, 12					; 0000000cH
; Line 444
	fld	DWORD PTR ?set_fSpinImpulseMultiplier@@3MA ; set_fSpinImpulseMultiplier
	fmul	DWORD PTR _client_mass$[ebp]
	fmul	DWORD PTR _V1$[ebp]
	fstp	DWORD PTR _V1$[ebp]
; Line 445
	fld	DWORD PTR ?set_fSpinImpulseMultiplier@@3MA ; set_fSpinImpulseMultiplier
	fmul	DWORD PTR _client_mass$[ebp]
	fmul	DWORD PTR _V1$[ebp+4]
	fstp	DWORD PTR _V1$[ebp+4]
; Line 446
	fld	DWORD PTR ?set_fSpinImpulseMultiplier@@3MA ; set_fSpinImpulseMultiplier
	fmul	DWORD PTR _client_mass$[ebp]
	fmul	DWORD PTR _V1$[ebp+8]
	fstp	DWORD PTR _V1$[ebp+8]
; Line 447
	fld	DWORD PTR ?set_fSpinImpulseMultiplier@@3MA ; set_fSpinImpulseMultiplier
	fmul	DWORD PTR _client_mass$[ebp]
	fmul	DWORD PTR _V2$[ebp]
	fstp	DWORD PTR _V2$[ebp]
; Line 448
	fld	DWORD PTR ?set_fSpinImpulseMultiplier@@3MA ; set_fSpinImpulseMultiplier
	fmul	DWORD PTR _client_mass$[ebp]
	fmul	DWORD PTR _V2$[ebp+4]
	fstp	DWORD PTR _V2$[ebp+4]
; Line 449
	fld	DWORD PTR ?set_fSpinImpulseMultiplier@@3MA ; set_fSpinImpulseMultiplier
	fmul	DWORD PTR _client_mass$[ebp]
	fmul	DWORD PTR _V2$[ebp+8]
	fstp	DWORD PTR _V2$[ebp+8]
; Line 450
	mov	eax, DWORD PTR _ci$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T149446[ebp], ecx
	lea	edx, DWORD PTR _V2$[ebp]
	push	edx
	lea	eax, DWORD PTR _V1$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T149446[ebp]
	push	ecx
	call	DWORD PTR __imp_?AddImpulse@SpaceObj@pub@@YAHABIABVVector@@1@Z
	add	esp, 12					; 0000000cH
$LN4@SPObjColli:
; Line 452
	mov	esp, ebp
	pop	ebp
	ret	8
?SPObjCollision@HkIServerImpl@@YGXABUSSPObjCollisionInfo@@I@Z ENDP ; HkIServerImpl::SPObjCollision
_TEXT	ENDS
PUBLIC	?GFGoodBuy@HkIServerImpl@@YGXABUSGFGoodBuyInfo@@I@Z ; HkIServerImpl::GFGoodBuy
EXTRN	?GFGoodBuy@PurchaseRestrictions@@YA_NABUSGFGoodBuyInfo@@I@Z:PROC ; PurchaseRestrictions::GFGoodBuy
; Function compile flags: /Odtp
_TEXT	SEGMENT
_gbi$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?GFGoodBuy@HkIServerImpl@@YGXABUSGFGoodBuyInfo@@I@Z PROC ; HkIServerImpl::GFGoodBuy
; Line 455
	push	ebp
	mov	ebp, esp
; Line 456
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 457
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _gbi$[ebp]
	push	ecx
	call	?GFGoodBuy@PurchaseRestrictions@@YA_NABUSGFGoodBuyInfo@@I@Z ; PurchaseRestrictions::GFGoodBuy
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GFGoodBuy
; Line 459
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN2@GFGoodBuy:
; Line 461
	pop	ebp
	ret	8
?GFGoodBuy@HkIServerImpl@@YGXABUSGFGoodBuyInfo@@I@Z ENDP ; HkIServerImpl::GFGoodBuy
_TEXT	ENDS
PUBLIC	?ReqAddItem@HkIServerImpl@@YGXIPBDHM_NI@Z	; HkIServerImpl::ReqAddItem
EXTRN	?ReqAddItem@PurchaseRestrictions@@YA_NIPBDHM_NI@Z:PROC ; PurchaseRestrictions::ReqAddItem
; Function compile flags: /Odtp
_TEXT	SEGMENT
_goodID$ = 8						; size = 4
_hardpoint$ = 12					; size = 4
_count$ = 16						; size = 4
_status$ = 20						; size = 4
_mounted$ = 24						; size = 1
_iClientID$ = 28					; size = 4
?ReqAddItem@HkIServerImpl@@YGXIPBDHM_NI@Z PROC		; HkIServerImpl::ReqAddItem
; Line 464
	push	ebp
	mov	ebp, esp
; Line 465
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 466
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _mounted$[ebp]
	push	ecx
	push	ecx
	fld	DWORD PTR _status$[ebp]
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _hardpoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _goodID$[ebp]
	push	ecx
	call	?ReqAddItem@PurchaseRestrictions@@YA_NIPBDHM_NI@Z ; PurchaseRestrictions::ReqAddItem
	add	esp, 24					; 00000018H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@ReqAddItem
; Line 468
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN1@ReqAddItem:
; Line 470
	pop	ebp
	ret	24					; 00000018H
?ReqAddItem@HkIServerImpl@@YGXIPBDHM_NI@Z ENDP		; HkIServerImpl::ReqAddItem
_TEXT	ENDS
PUBLIC	?ReqChangeCash@HkIServerImpl@@YGXHI@Z		; HkIServerImpl::ReqChangeCash
EXTRN	?ReqChangeCash@PurchaseRestrictions@@YA_NHI@Z:PROC ; PurchaseRestrictions::ReqChangeCash
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iMoneyDiff$ = 8					; size = 4
_iClientID$ = 12					; size = 4
?ReqChangeCash@HkIServerImpl@@YGXHI@Z PROC		; HkIServerImpl::ReqChangeCash
; Line 473
	push	ebp
	mov	ebp, esp
; Line 474
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 475
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMoneyDiff$[ebp]
	push	ecx
	call	?ReqChangeCash@PurchaseRestrictions@@YA_NHI@Z ; PurchaseRestrictions::ReqChangeCash
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@ReqChangeC
; Line 477
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN2@ReqChangeC:
; Line 479
	pop	ebp
	ret	8
?ReqChangeCash@HkIServerImpl@@YGXHI@Z ENDP		; HkIServerImpl::ReqChangeCash
_TEXT	ENDS
PUBLIC	?ReqSetCash@HkIServerImpl@@YGXHI@Z		; HkIServerImpl::ReqSetCash
EXTRN	?ReqSetCash@PurchaseRestrictions@@YA_NHI@Z:PROC	; PurchaseRestrictions::ReqSetCash
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iMoney$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?ReqSetCash@HkIServerImpl@@YGXHI@Z PROC			; HkIServerImpl::ReqSetCash
; Line 482
	push	ebp
	mov	ebp, esp
; Line 483
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 484
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iMoney$[ebp]
	push	ecx
	call	?ReqSetCash@PurchaseRestrictions@@YA_NHI@Z ; PurchaseRestrictions::ReqSetCash
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@ReqSetCash
; Line 486
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN2@ReqSetCash:
; Line 488
	pop	ebp
	ret	8
?ReqSetCash@HkIServerImpl@@YGXHI@Z ENDP			; HkIServerImpl::ReqSetCash
_TEXT	ENDS
PUBLIC	?ReqEquipment@HkIServerImpl@@YGXABVEquipDescList@@I@Z ; HkIServerImpl::ReqEquipment
EXTRN	?ReqEquipment@PurchaseRestrictions@@YA_NABVEquipDescList@@I@Z:PROC ; PurchaseRestrictions::ReqEquipment
; Function compile flags: /Odtp
_TEXT	SEGMENT
_eqDesc$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?ReqEquipment@HkIServerImpl@@YGXABVEquipDescList@@I@Z PROC ; HkIServerImpl::ReqEquipment
; Line 491
	push	ebp
	mov	ebp, esp
; Line 492
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 493
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _eqDesc$[ebp]
	push	ecx
	call	?ReqEquipment@PurchaseRestrictions@@YA_NABVEquipDescList@@I@Z ; PurchaseRestrictions::ReqEquipment
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@ReqEquipme
; Line 495
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN2@ReqEquipme:
; Line 497
	pop	ebp
	ret	8
?ReqEquipment@HkIServerImpl@@YGXABVEquipDescList@@I@Z ENDP ; HkIServerImpl::ReqEquipment
_TEXT	ENDS
PUBLIC	?ReqHullStatus@HkIServerImpl@@YGXMI@Z		; HkIServerImpl::ReqHullStatus
EXTRN	?ReqHullStatus@PurchaseRestrictions@@YA_NMI@Z:PROC ; PurchaseRestrictions::ReqHullStatus
; Function compile flags: /Odtp
_TEXT	SEGMENT
_fStatus$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?ReqHullStatus@HkIServerImpl@@YGXMI@Z PROC		; HkIServerImpl::ReqHullStatus
; Line 500
	push	ebp
	mov	ebp, esp
; Line 501
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 502
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	push	ecx
	fld	DWORD PTR _fStatus$[ebp]
	fstp	DWORD PTR [esp]
	call	?ReqHullStatus@PurchaseRestrictions@@YA_NMI@Z ; PurchaseRestrictions::ReqHullStatus
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@ReqHullSta
; Line 504
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN1@ReqHullSta:
; Line 506
	pop	ebp
	ret	8
?ReqHullStatus@HkIServerImpl@@YGXMI@Z ENDP		; HkIServerImpl::ReqHullStatus
_TEXT	ENDS
PUBLIC	?ReqShipArch@HkIServerImpl@@YGXII@Z		; HkIServerImpl::ReqShipArch
EXTRN	?ReqShipArch@PurchaseRestrictions@@YA_NII@Z:PROC ; PurchaseRestrictions::ReqShipArch
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iArchID$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?ReqShipArch@HkIServerImpl@@YGXII@Z PROC		; HkIServerImpl::ReqShipArch
; Line 509
	push	ebp
	mov	ebp, esp
; Line 510
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 511
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iArchID$[ebp]
	push	ecx
	call	?ReqShipArch@PurchaseRestrictions@@YA_NII@Z ; PurchaseRestrictions::ReqShipArch
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@ReqShipArc
; Line 513
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN2@ReqShipArc:
; Line 515
	pop	ebp
	ret	8
?ReqShipArch@HkIServerImpl@@YGXII@Z ENDP		; HkIServerImpl::ReqShipArch
_TEXT	ENDS
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator->
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator!=
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator++
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::begin
PUBLIC	?Timer@HkIServerImpl@@YAXXZ			; HkIServerImpl::Timer
EXTRN	?HkSaveChar@@YAXI@Z:PROC			; HkSaveChar
EXTRN	__imp_?HkIsInCharSelectMenu@@YA_NI@Z:PROC
EXTRN	__imp_?HkIsValidClientID@@YA_NI@Z:PROC
EXTRN	?GetTimeInMS@@YA_KXZ:PROC			; GetTimeInMS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv167 = -36						; size = 4
tv160 = -32						; size = 4
$T149459 = -28						; size = 8
_iClientID$142999 = -20					; size = 4
_iter$142993 = -16					; size = 8
_currTime$ = -8						; size = 8
?Timer@HkIServerImpl@@YAXXZ PROC			; HkIServerImpl::Timer
; Line 520
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
; Line 521
	call	?GetTimeInMS@@YA_KXZ			; GetTimeInMS
	mov	DWORD PTR _currTime$[ebp], eax
	mov	DWORD PTR _currTime$[ebp+4], edx
; Line 522
	lea	eax, DWORD PTR _iter$142993[ebp]
	push	eax
	mov	ecx, OFFSET ?mapSaveTimes@HkIServerImpl@@3V?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@A ; HkIServerImpl::mapSaveTimes
	call	?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::begin
	jmp	SHORT $LN5@Timer
$LN4@Timer:
	lea	ecx, DWORD PTR _iter$142993[ebp]
	call	??Eiterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator++
$LN5@Timer:
	lea	ecx, DWORD PTR $T149459[ebp]
	push	ecx
	mov	ecx, OFFSET ?mapSaveTimes@HkIServerImpl@@3V?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@A ; HkIServerImpl::mapSaveTimes
	call	?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR _iter$142993[ebp]
	call	??9const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN6@Timer
; Line 524
	lea	ecx, DWORD PTR _iter$142993[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator->
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _iClientID$142999[ebp], eax
; Line 525
	lea	ecx, DWORD PTR _iter$142993[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator->
	mov	DWORD PTR tv160[ebp], eax
	mov	ecx, DWORD PTR tv160[ebp]
	mov	edx, DWORD PTR tv160[ebp]
	mov	eax, DWORD PTR [ecx+8]
	or	eax, DWORD PTR [edx+12]
	je	SHORT $LN2@Timer
	lea	ecx, DWORD PTR _iter$142993[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator->
	mov	DWORD PTR tv167[ebp], eax
	mov	ecx, DWORD PTR tv167[ebp]
	mov	edx, DWORD PTR [ecx+12]
	cmp	edx, DWORD PTR _currTime$[ebp+4]
	ja	SHORT $LN2@Timer
	jb	SHORT $LN8@Timer
	mov	eax, DWORD PTR tv167[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _currTime$[ebp]
	jae	SHORT $LN2@Timer
$LN8@Timer:
; Line 527
	mov	edx, DWORD PTR _iClientID$142999[ebp]
	push	edx
	call	DWORD PTR __imp_?HkIsValidClientID@@YA_NI@Z
	add	esp, 4
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@Timer
	mov	ecx, DWORD PTR _iClientID$142999[ebp]
	push	ecx
	call	DWORD PTR __imp_?HkIsInCharSelectMenu@@YA_NI@Z
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@Timer
; Line 528
	lea	ecx, DWORD PTR _iter$142993[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator->
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?HkSaveChar@@YAXI@Z			; HkSaveChar
	add	esp, 4
$LN1@Timer:
; Line 529
	lea	ecx, DWORD PTR _iter$142993[ebp]
	call	??Citerator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator->
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
$LN2@Timer:
; Line 530
	jmp	$LN4@Timer
$LN6@Timer:
; Line 532
	mov	esp, ebp
	pop	ebp
	ret	0
?Timer@HkIServerImpl@@YAXXZ ENDP			; HkIServerImpl::Timer
_TEXT	ENDS
PUBLIC	??A?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAEAA_KABI@Z ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::operator[]
PUBLIC	?TractorObjects@HkIServerImpl@@YGXIABUXTractorObjects@@@Z ; HkIServerImpl::TractorObjects
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv75 = -4						; size = 4
_iClientID$ = 8						; size = 4
_objs$ = 12						; size = 4
?TractorObjects@HkIServerImpl@@YGXIABUXTractorObjects@@@Z PROC ; HkIServerImpl::TractorObjects
; Line 536
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
; Line 537
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 538
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, OFFSET ?mapSaveTimes@HkIServerImpl@@3V?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@A ; HkIServerImpl::mapSaveTimes
	call	??A?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAEAA_KABI@Z ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::operator[]
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [ecx]
	or	eax, DWORD PTR [edx+4]
	jne	SHORT $LN2@TractorObj
; Line 540
	call	?GetTimeInMS@@YA_KXZ			; GetTimeInMS
	mov	esi, eax
	mov	edi, edx
	add	esi, 60000				; 0000ea60H
	adc	edi, 0
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	ecx, OFFSET ?mapSaveTimes@HkIServerImpl@@3V?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@A ; HkIServerImpl::mapSaveTimes
	call	??A?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAEAA_KABI@Z ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::operator[]
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], edi
$LN2@TractorObj:
; Line 542
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?TractorObjects@HkIServerImpl@@YGXIABUXTractorObjects@@@Z ENDP ; HkIServerImpl::TractorObjects
_TEXT	ENDS
PUBLIC	?JettisonCargo@HkIServerImpl@@YGXIABUXJettisonCargo@@@Z ; HkIServerImpl::JettisonCargo
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv75 = -4						; size = 4
_iClientID$ = 8						; size = 4
_objs$ = 12						; size = 4
?JettisonCargo@HkIServerImpl@@YGXIABUXJettisonCargo@@@Z PROC ; HkIServerImpl::JettisonCargo
; Line 546
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
; Line 547
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, OFFSET ?mapSaveTimes@HkIServerImpl@@3V?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@A ; HkIServerImpl::mapSaveTimes
	call	??A?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAEAA_KABI@Z ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::operator[]
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [ecx]
	or	eax, DWORD PTR [edx+4]
	jne	SHORT $LN2@JettisonCa
; Line 549
	call	?GetTimeInMS@@YA_KXZ			; GetTimeInMS
	mov	esi, eax
	mov	edi, edx
	add	esi, 60000				; 0000ea60H
	adc	edi, 0
	lea	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	ecx, OFFSET ?mapSaveTimes@HkIServerImpl@@3V?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@A ; HkIServerImpl::mapSaveTimes
	call	??A?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAEAA_KABI@Z ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::operator[]
	mov	DWORD PTR [eax], esi
	mov	DWORD PTR [eax+4], edi
$LN2@JettisonCa:
; Line 551
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
?JettisonCargo@HkIServerImpl@@YGXIABUXJettisonCargo@@@Z ENDP ; HkIServerImpl::JettisonCargo
_TEXT	ENDS
PUBLIC	?SetTarget@HkIServerImpl@@YGXIABUXSetTarget@@@Z	; HkIServerImpl::SetTarget
EXTRN	?SetTarget@Message@@YAXIABUXSetTarget@@@Z:PROC	; Message::SetTarget
; Function compile flags: /Odtp
_TEXT	SEGMENT
_uClientID$ = 8						; size = 4
_p2$ = 12						; size = 4
?SetTarget@HkIServerImpl@@YGXIABUXSetTarget@@@Z PROC	; HkIServerImpl::SetTarget
; Line 554
	push	ebp
	mov	ebp, esp
; Line 555
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 556
	mov	eax, DWORD PTR _p2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uClientID$[ebp]
	push	ecx
	call	?SetTarget@Message@@YAXIABUXSetTarget@@@Z ; Message::SetTarget
	add	esp, 8
; Line 557
	pop	ebp
	ret	8
?SetTarget@HkIServerImpl@@YGXIABUXSetTarget@@@Z ENDP	; HkIServerImpl::SetTarget
_TEXT	ENDS
PUBLIC	?CharacterInfoReq@HkIServerImpl@@YGXI_N@Z	; HkIServerImpl::CharacterInfoReq
EXTRN	?CharacterInfoReq@MiscCmds@@YAXI_N@Z:PROC	; MiscCmds::CharacterInfoReq
EXTRN	?CharacterInfoReq@AntiJumpDisconnect@@YAXI_N@Z:PROC ; AntiJumpDisconnect::CharacterInfoReq
EXTRN	?CharacterInfoReq@Message@@YAXI_N@Z:PROC	; Message::CharacterInfoReq
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = 8						; size = 4
_p2$ = 12						; size = 1
?CharacterInfoReq@HkIServerImpl@@YGXI_N@Z PROC		; HkIServerImpl::CharacterInfoReq
; Line 560
	push	ebp
	mov	ebp, esp
; Line 561
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 562
	movzx	eax, BYTE PTR _p2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?CharacterInfoReq@Message@@YAXI_N@Z	; Message::CharacterInfoReq
	add	esp, 8
; Line 563
	movzx	edx, BYTE PTR _p2$[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?CharacterInfoReq@AntiJumpDisconnect@@YAXI_N@Z ; AntiJumpDisconnect::CharacterInfoReq
	add	esp, 8
; Line 564
	movzx	ecx, BYTE PTR _p2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	?CharacterInfoReq@MiscCmds@@YAXI_N@Z	; MiscCmds::CharacterInfoReq
	add	esp, 8
; Line 565
	pop	ebp
	ret	8
?CharacterInfoReq@HkIServerImpl@@YGXI_N@Z ENDP		; HkIServerImpl::CharacterInfoReq
_TEXT	ENDS
PUBLIC	?SubmitChat@HkIServerImpl@@YGXUCHAT_ID@@KPBX0H@Z ; HkIServerImpl::SubmitChat
EXTRN	?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z:PROC ; Message::SubmitChat
EXTRN	__imp_?ClientInfo@@3PAUCLIENT_INFO@@A:BYTE
; Function compile flags: /Odtp
_TEXT	SEGMENT
_cId$ = 8						; size = 4
_lP1$ = 12						; size = 4
_rdlReader$ = 16					; size = 4
_cIdTo$ = 20						; size = 4
_iP2$ = 24						; size = 4
?SubmitChat@HkIServerImpl@@YGXUCHAT_ID@@KPBX0H@Z PROC	; HkIServerImpl::SubmitChat
; Line 568
	push	ebp
	mov	ebp, esp
; Line 569
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 573
	mov	eax, DWORD PTR _cId$[ebp]
	imul	eax, 368				; 00000170H
	mov	ecx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	cmp	DWORD PTR [ecx+eax+100], 0
	je	SHORT $LN2@SubmitChat
; Line 575
	push	0
	call	_time
	add	esp, 4
	mov	edx, DWORD PTR _cId$[ebp]
	imul	edx, 368				; 00000170H
	mov	ecx, DWORD PTR __imp_?ClientInfo@@3PAUCLIENT_INFO@@A
	mov	DWORD PTR [ecx+edx+100], eax
$LN2@SubmitChat:
; Line 579
	mov	edx, DWORD PTR _iP2$[ebp]
	push	edx
	mov	eax, DWORD PTR _cIdTo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rdlReader$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lP1$[ebp]
	push	edx
	mov	eax, DWORD PTR _cId$[ebp]
	push	eax
	call	?SubmitChat@Message@@YA_NUCHAT_ID@@KPBX0H@Z ; Message::SubmitChat
	add	esp, 20					; 00000014H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@SubmitChat
; Line 581
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN3@SubmitChat:
; Line 583
	pop	ebp
	ret	20					; 00000014H
?SubmitChat@HkIServerImpl@@YGXUCHAT_ID@@KPBX0H@Z ENDP	; HkIServerImpl::SubmitChat
_TEXT	ENDS
PUBLIC	?GoTradelane@HkIServerImpl@@YGXIABUXGoTradelane@@@Z ; HkIServerImpl::GoTradelane
EXTRN	?GoTradelane@SystemSensor@@YAXIABUXGoTradelane@@@Z:PROC ; SystemSensor::GoTradelane
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = 8						; size = 4
_xgt$ = 12						; size = 4
?GoTradelane@HkIServerImpl@@YGXIABUXGoTradelane@@@Z PROC ; HkIServerImpl::GoTradelane
; Line 586
	push	ebp
	mov	ebp, esp
; Line 587
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 588
	mov	eax, DWORD PTR _xgt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	call	?GoTradelane@SystemSensor@@YAXIABUXGoTradelane@@@Z ; SystemSensor::GoTradelane
	add	esp, 8
; Line 589
	pop	ebp
	ret	8
?GoTradelane@HkIServerImpl@@YGXIABUXGoTradelane@@@Z ENDP ; HkIServerImpl::GoTradelane
_TEXT	ENDS
PUBLIC	?StopTradelane@HkIServerImpl@@YGXIIII@Z		; HkIServerImpl::StopTradelane
EXTRN	?StopTradelane@SystemSensor@@YAXIIII@Z:PROC	; SystemSensor::StopTradelane
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = 8						; size = 4
_p1$ = 12						; size = 4
_p2$ = 16						; size = 4
_p3$ = 20						; size = 4
?StopTradelane@HkIServerImpl@@YGXIIII@Z PROC		; HkIServerImpl::StopTradelane
; Line 592
	push	ebp
	mov	ebp, esp
; Line 593
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 594
	mov	eax, DWORD PTR _p3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p1$[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?StopTradelane@SystemSensor@@YAXIIII@Z	; SystemSensor::StopTradelane
	add	esp, 16					; 00000010H
; Line 595
	pop	ebp
	ret	16					; 00000010H
?StopTradelane@HkIServerImpl@@YGXIIII@Z ENDP		; HkIServerImpl::StopTradelane
_TEXT	ENDS
PUBLIC	?SPObjUpdate@HkIServerImpl@@YGXABUSSPObjUpdateInfo@@I@Z ; HkIServerImpl::SPObjUpdate
EXTRN	?SPObjUpdate@CargoDrop@@YAXABUSSPObjUpdateInfo@@I@Z:PROC ; CargoDrop::SPObjUpdate
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ui$ = 8						; size = 4
_iClientID$ = 12					; size = 4
?SPObjUpdate@HkIServerImpl@@YGXABUSSPObjUpdateInfo@@I@Z PROC ; HkIServerImpl::SPObjUpdate
; Line 598
	push	ebp
	mov	ebp, esp
; Line 599
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 600
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ui$[ebp]
	push	ecx
	call	?SPObjUpdate@CargoDrop@@YAXABUSSPObjUpdateInfo@@I@Z ; CargoDrop::SPObjUpdate
	add	esp, 8
; Line 601
	pop	ebp
	ret	8
?SPObjUpdate@HkIServerImpl@@YGXABUSSPObjUpdateInfo@@I@Z ENDP ; HkIServerImpl::SPObjUpdate
_TEXT	ENDS
PUBLIC	?HkCb_SendChat@@YGXIIIPAX@Z			; HkCb_SendChat
EXTRN	?HkCb_SendChat@Message@@YA_NIIIPAX@Z:PROC	; Message::HkCb_SendChat
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = 8						; size = 4
_iTo$ = 12						; size = 4
_iSize$ = 16						; size = 4
_pRDL$ = 20						; size = 4
?HkCb_SendChat@@YGXIIIPAX@Z PROC			; HkCb_SendChat
; Line 605
	push	ebp
	mov	ebp, esp
; Line 606
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 608
	mov	eax, DWORD PTR _pRDL$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iTo$[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?HkCb_SendChat@Message@@YA_NIIIPAX@Z	; Message::HkCb_SendChat
	add	esp, 16					; 00000010H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@HkCb_SendC
; Line 610
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
$LN2@HkCb_SendC:
; Line 612
	pop	ebp
	ret	16					; 00000010H
?HkCb_SendChat@@YGXIIIPAX@Z ENDP			; HkCb_SendChat
_TEXT	ENDS
PUBLIC	?HkCB_MissileTorpHit@@YGHPAD0PAUDamageList@@@Z	; HkCB_MissileTorpHit
EXTRN	?MissileTorpHit@HyperJump@@YAXIPAUDamageList@@@Z:PROC ; HyperJump::MissileTorpHit
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iClientID$ = -8					; size = 4
_szP$ = -4						; size = 4
_ECX$ = 8						; size = 4
_p1$ = 12						; size = 4
_dmg$ = 16						; size = 4
?HkCB_MissileTorpHit@@YGHPAD0PAUDamageList@@@Z PROC	; HkCB_MissileTorpHit
; Line 615
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 616
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 619
	push	4
	mov	eax, DWORD PTR _ECX$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _szP$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 621
	push	4
	mov	edx, DWORD PTR _szP$[ebp]
	add	edx, 180				; 000000b4H
	push	edx
	lea	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 623
	cmp	DWORD PTR _iClientID$[ebp], 0
	je	SHORT $LN1@HkCB_Missi
; Line 625
	mov	ecx, DWORD PTR _dmg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	call	?MissileTorpHit@HyperJump@@YAXIPAUDamageList@@@Z ; HyperJump::MissileTorpHit
	add	esp, 8
$LN1@HkCB_Missi:
; Line 627
	xor	eax, eax
; Line 628
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?HkCB_MissileTorpHit@@YGHPAD0PAUDamageList@@@Z ENDP	; HkCB_MissileTorpHit
_TEXT	ENDS
PUBLIC	?RequestBestPath@@YGXIPAKH@Z			; RequestBestPath
EXTRN	__imp_?RequestBestPath@IServerImpl@@UAEXIPAEH@Z:PROC
xdata$x	SEGMENT
__catchsym$?RequestBestPath@@YGXIPAKH@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?RequestBestPath@@YGXIPAKH@Z$0
__unwindtable$?RequestBestPath@@YGXIPAKH@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?RequestBestPath@@YGXIPAKH@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?RequestBestPath@@YGXIPAKH@Z$2
__ehfuncinfo$?RequestBestPath@@YGXIPAKH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RequestBestPath@@YGXIPAKH@Z
	DD	01H
	DD	FLAT:__tryblocktable$?RequestBestPath@@YGXIPAKH@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
_p3$ = 16						; size = 4
?RequestBestPath@@YGXIPAKH@Z PROC			; RequestBestPath
; Line 631
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RequestBestPath@@YGXIPAKH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 632
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 634
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 635
	mov	eax, DWORD PTR _p3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p1$[ebp]
	push	edx
	mov	ecx, DWORD PTR __imp__Server
	call	DWORD PTR __imp_?RequestBestPath@IServerImpl@@UAEXIPAEH@Z
; Line 636
	jmp	SHORT $LN4@RequestBes
__catch$?RequestBestPath@@YGXIPAKH@Z$0:
; Line 640
	mov	eax, DWORD PTR _p2$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	mov	edx, DWORD PTR _p2$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _p2$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	push	edx
	mov	eax, DWORD PTR _p2$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _p2$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _p2$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _p2$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _p2$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _p2$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	push	OFFSET $SG143090
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 44					; 0000002cH
; Line 641
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN2@RequestBes
	ret	0
$LN4@RequestBes:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN2@RequestBes:
; Line 642
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
__ehhandler$?RequestBestPath@@YGXIPAKH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RequestBestPath@@YGXIPAKH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RequestBestPath@@YGXIPAKH@Z ENDP			; RequestBestPath
PUBLIC	__$ArrayPad$
PUBLIC	?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; UserCmd_Process
EXTRN	?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z:PROC ; AddExceptionInfoLog
EXTRN	__imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z:PROC
EXTRN	__imp_?npos@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@2IB:DWORD
EXTRN	__imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEABGI@Z:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	__imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ:PROC
EXTRN	__imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z:PROC
EXTRN	?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC ; Message::UserCmd_Process
EXTRN	__imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z:PROC
xdata$x	SEGMENT
__catchsym$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
__tryblocktable$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 00H
	DD	03H
	DD	05H
	DD	01H
	DD	FLAT:__catchsym$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6
__ehfuncinfo$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$4
	DD	0ffffffffH
	DD	00H
	DD	04H
	DD	FLAT:__unwindfunclet$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$5
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv179 = -156						; size = 4
tv64 = -152						; size = 4
tv175 = -148						; size = 4
tv80 = -144						; size = 4
$T149487 = -140						; size = 28
$T149486 = -109						; size = 1
$T149485 = -108						; size = 28
_wscParam$143338 = -80					; size = 28
_i$143332 = -52						; size = 4
_wscCmdLineLower$143330 = -48				; size = 28
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_iClientID$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; UserCmd_Process
; Line 776
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 140				; 0000008cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 777
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 780
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 781
	mov	eax, DWORD PTR _wscCmd$[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscCmdLineLower$143330[ebp]
	push	ecx
	call	DWORD PTR __imp_?ToLower@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ABV12@@Z
	add	esp, 8
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 783
	lea	edx, DWORD PTR _wscCmdLineLower$143330[ebp]
	push	edx
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	call	?UserCmd_Process@Message@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; Message::UserCmd_Process
	add	esp, 8
; Line 787
	mov	DWORD PTR _i$143332[ebp], 0
	jmp	SHORT $LN7@UserCmd_Pr
$LN6@UserCmd_Pr:
	mov	ecx, DWORD PTR _i$143332[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$143332[ebp], ecx
$LN7@UserCmd_Pr:
	cmp	DWORD PTR _i$143332[ebp], 109		; 0000006dH
	jae	$LN5@UserCmd_Pr
; Line 789
	push	0
	mov	edx, DWORD PTR _i$143332[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR ?UserCmds@@3PAUUSERCMD@@A[edx]
	push	eax
	lea	ecx, DWORD PTR _wscCmdLineLower$143330[ebp]
	call	DWORD PTR __imp_?find@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z
	test	eax, eax
	jne	$LN4@UserCmd_Pr
; Line 793
	push	OFFSET $SG143339
	lea	ecx, DWORD PTR _wscParam$143338[ebp]
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 794
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ
	mov	esi, eax
	mov	ecx, DWORD PTR _i$143332[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR ?UserCmds@@3PAUUSERCMD@@A[ecx]
	push	edx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, eax
	jbe	$LN3@UserCmd_Pr
; Line 796
	mov	eax, DWORD PTR _i$143332[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR ?UserCmds@@3PAUUSERCMD@@A[eax]
	push	ecx
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEABGI@Z
	movzx	edx, WORD PTR [eax]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN2@UserCmd_Pr
; Line 797
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _wscParam$143338[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN6@UserCmd_Pr
$LN2@UserCmd_Pr:
; Line 798
	mov	eax, DWORD PTR __imp_?npos@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@2IB
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _i$143332[ebp]
	imul	edx, 12					; 0000000cH
	mov	eax, DWORD PTR ?UserCmds@@3PAUUSERCMD@@A[edx]
	push	eax
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR $T149485[ebp]
	push	ecx
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?substr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBE?AV12@II@Z
	mov	DWORD PTR tv80[ebp], eax
	mov	edx, DWORD PTR tv80[ebp]
	mov	DWORD PTR tv175[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	mov	eax, DWORD PTR tv175[ebp]
	push	eax
	lea	ecx, DWORD PTR _wscParam$143338[ebp]
	call	DWORD PTR __imp_??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	lea	ecx, DWORD PTR $T149485[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN3@UserCmd_Pr:
; Line 802
	mov	ecx, DWORD PTR _i$143332[ebp]
	imul	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR ?UserCmds@@3PAUUSERCMD@@A[ecx+8]
	push	edx
	lea	eax, DWORD PTR _wscParam$143338[ebp]
	push	eax
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	eax, DWORD PTR _i$143332[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR ?UserCmds@@3PAUUSERCMD@@A[eax+4]
	call	ecx
	add	esp, 16					; 00000010H
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@UserCmd_Pr
; Line 806
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 807
	mov	BYTE PTR $T149486[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _wscParam$143338[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _wscCmdLineLower$143330[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	al, BYTE PTR $T149486[ebp]
	jmp	$LN9@UserCmd_Pr
$LN1@UserCmd_Pr:
; Line 809
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	lea	ecx, DWORD PTR _wscParam$143338[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
$LN4@UserCmd_Pr:
; Line 810
	jmp	$LN6@UserCmd_Pr
$LN5@UserCmd_Pr:
; Line 811
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _wscCmdLineLower$143330[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	jmp	$LN11@UserCmd_Pr
__catch$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
; Line 814
	mov	eax, DWORD PTR _wscCmd$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T149487[ebp]
	push	ecx
	call	DWORD PTR __imp_?wstos@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@2@@Z
	add	esp, 8
	mov	DWORD PTR tv64[ebp], eax
	mov	edx, DWORD PTR tv64[ebp]
	mov	DWORD PTR tv179[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	mov	ecx, DWORD PTR tv179[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	push	OFFSET $SG143346
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	lea	ecx, DWORD PTR $T149487[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 815
	push	OFFSET $SG143347
	push	OFFSET $SG143348
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 8
	push	0
	call	?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z ; AddExceptionInfoLog
	add	esp, 4
; Line 816
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1
	ret	0
$LN11@UserCmd_Pr:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1:
; Line 817
	xor	al, al
$LN9@UserCmd_Pr:
; Line 818
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2:
	lea	ecx, DWORD PTR _wscCmdLineLower$143330[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3:
	lea	ecx, DWORD PTR _wscParam$143338[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T149485[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T149487[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-160]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; UserCmd_Process
PUBLIC	?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; UserCmd_Help
xdata$x	SEGMENT
__ehfuncinfo$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	01eH
	DD	FLAT:__unwindtable$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$15
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$16
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$17
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$18
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$19
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$20
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$21
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$22
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$23
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$24
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$25
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$26
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$27
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$28
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$29
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv677 = -372						; size = 4
tv707 = -368						; size = 4
tv675 = -364						; size = 4
tv706 = -360						; size = 4
tv673 = -356						; size = 4
tv705 = -352						; size = 4
tv671 = -348						; size = 4
tv704 = -344						; size = 4
tv669 = -340						; size = 4
tv703 = -336						; size = 4
tv667 = -332						; size = 4
tv702 = -328						; size = 4
tv665 = -324						; size = 4
tv701 = -320						; size = 4
tv663 = -316						; size = 4
tv700 = -312						; size = 4
tv661 = -308						; size = 4
tv699 = -304						; size = 4
tv659 = -300						; size = 4
tv698 = -296						; size = 4
tv657 = -292						; size = 4
tv697 = -288						; size = 4
tv655 = -284						; size = 4
tv696 = -280						; size = 4
tv653 = -276						; size = 4
tv695 = -272						; size = 4
tv651 = -268						; size = 4
tv694 = -264						; size = 4
tv649 = -260						; size = 4
tv693 = -256						; size = 4
tv647 = -252						; size = 4
tv692 = -248						; size = 4
tv645 = -244						; size = 4
tv691 = -240						; size = 4
tv643 = -236						; size = 4
tv690 = -232						; size = 4
tv641 = -228						; size = 4
tv689 = -224						; size = 4
tv639 = -220						; size = 4
tv688 = -216						; size = 4
tv637 = -212						; size = 4
tv687 = -208						; size = 4
tv635 = -204						; size = 4
tv686 = -200						; size = 4
tv633 = -196						; size = 4
tv685 = -192						; size = 4
tv631 = -188						; size = 4
tv684 = -184						; size = 4
tv629 = -180						; size = 4
tv683 = -176						; size = 4
tv627 = -172						; size = 4
tv682 = -168						; size = 4
tv625 = -164						; size = 4
tv681 = -160						; size = 4
tv623 = -156						; size = 4
tv680 = -152						; size = 4
tv621 = -148						; size = 4
tv679 = -144						; size = 4
tv619 = -140						; size = 4
tv678 = -136						; size = 4
$T149533 = -132						; size = 4
$T149532 = -128						; size = 4
$T149531 = -124						; size = 4
$T149530 = -120						; size = 4
$T149529 = -116						; size = 4
$T149528 = -112						; size = 4
$T149527 = -108						; size = 4
$T149526 = -104						; size = 4
$T149525 = -100						; size = 4
$T149524 = -96						; size = 4
$T149523 = -92						; size = 4
$T149522 = -88						; size = 4
$T149521 = -84						; size = 4
$T149520 = -80						; size = 4
$T149519 = -76						; size = 4
$T149518 = -72						; size = 4
$T149517 = -68						; size = 4
$T149516 = -64						; size = 4
$T149515 = -60						; size = 4
$T149514 = -56						; size = 4
$T149513 = -52						; size = 4
$T149512 = -48						; size = 4
$T149511 = -44						; size = 4
$T149510 = -40						; size = 4
$T149509 = -36						; size = 4
$T149508 = -32						; size = 4
$T149507 = -28						; size = 4
$T149506 = -24						; size = 4
$T149505 = -20						; size = 4
$T149504 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_iClientID$ = 8						; size = 4
_wscParam$ = 12						; size = 4
?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; UserCmd_Help
; Line 823
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 360				; 00000168H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 824
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 825
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149504[ebp], esp
	push	OFFSET $SG143364
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv678[ebp], eax
	mov	eax, DWORD PTR tv678[ebp]
	mov	DWORD PTR tv619[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 826
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149505[ebp], esp
	push	OFFSET $SG143366
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv679[ebp], eax
	mov	edx, DWORD PTR tv679[ebp]
	mov	DWORD PTR tv621[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 827
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149506[ebp], esp
	push	OFFSET $SG143368
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv680[ebp], eax
	mov	ecx, DWORD PTR tv680[ebp]
	mov	DWORD PTR tv623[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 828
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149507[ebp], esp
	push	OFFSET $SG143370
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv681[ebp], eax
	mov	eax, DWORD PTR tv681[ebp]
	mov	DWORD PTR tv625[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 829
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149508[ebp], esp
	push	OFFSET $SG143372
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv682[ebp], eax
	mov	edx, DWORD PTR tv682[ebp]
	mov	DWORD PTR tv627[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 831
	movzx	ecx, BYTE PTR ?set_bEnableRenameMe@@3_NA ; set_bEnableRenameMe
	test	ecx, ecx
	jne	SHORT $LN4@UserCmd_He
; Line 833
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149509[ebp], esp
	push	OFFSET $SG143375
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv683[ebp], eax
	mov	edx, DWORD PTR tv683[ebp]
	mov	DWORD PTR tv629[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
$LN4@UserCmd_He:
; Line 836
	movzx	ecx, BYTE PTR ?set_bEnableMoveChar@@3_NA ; set_bEnableMoveChar
	test	ecx, ecx
	jne	$LN3@UserCmd_He
; Line 838
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149510[ebp], esp
	push	OFFSET $SG143378
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv684[ebp], eax
	mov	edx, DWORD PTR tv684[ebp]
	mov	DWORD PTR tv631[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 839
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149511[ebp], esp
	push	OFFSET $SG143380
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv685[ebp], eax
	mov	ecx, DWORD PTR tv685[ebp]
	mov	DWORD PTR tv633[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
$LN3@UserCmd_He:
; Line 842
	movzx	eax, BYTE PTR ?set_bEnableRestart@@3_NA	; set_bEnableRestart
	test	eax, eax
	jne	$LN2@UserCmd_He
; Line 844
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149512[ebp], esp
	push	OFFSET $SG143383
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv686[ebp], eax
	mov	ecx, DWORD PTR tv686[ebp]
	mov	DWORD PTR tv635[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 845
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149513[ebp], esp
	push	OFFSET $SG143385
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv687[ebp], eax
	mov	eax, DWORD PTR tv687[ebp]
	mov	DWORD PTR tv637[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
$LN2@UserCmd_He:
; Line 848
	movzx	edx, BYTE PTR ?set_bEnableGiveCash@@3_NA ; set_bEnableGiveCash
	test	edx, edx
	je	$LN1@UserCmd_He
; Line 850
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149514[ebp], esp
	push	OFFSET $SG143388
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv688[ebp], eax
	mov	eax, DWORD PTR tv688[ebp]
	mov	DWORD PTR tv639[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 851
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149515[ebp], esp
	push	OFFSET $SG143390
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv689[ebp], eax
	mov	edx, DWORD PTR tv689[ebp]
	mov	DWORD PTR tv641[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 852
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149516[ebp], esp
	push	OFFSET $SG143392
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv690[ebp], eax
	mov	ecx, DWORD PTR tv690[ebp]
	mov	DWORD PTR tv643[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 853
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149517[ebp], esp
	push	OFFSET $SG143394
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv691[ebp], eax
	mov	eax, DWORD PTR tv691[ebp]
	mov	DWORD PTR tv645[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
$LN1@UserCmd_He:
; Line 856
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149518[ebp], esp
	push	OFFSET $SG143396
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv692[ebp], eax
	mov	edx, DWORD PTR tv692[ebp]
	mov	DWORD PTR tv647[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 857
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149519[ebp], esp
	push	OFFSET $SG143398
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv693[ebp], eax
	mov	ecx, DWORD PTR tv693[ebp]
	mov	DWORD PTR tv649[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 858
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149520[ebp], esp
	push	OFFSET $SG143400
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv694[ebp], eax
	mov	eax, DWORD PTR tv694[ebp]
	mov	DWORD PTR tv651[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 859
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149521[ebp], esp
	push	OFFSET $SG143402
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv695[ebp], eax
	mov	edx, DWORD PTR tv695[ebp]
	mov	DWORD PTR tv653[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 860
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149522[ebp], esp
	push	OFFSET $SG143404
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv696[ebp], eax
	mov	ecx, DWORD PTR tv696[ebp]
	mov	DWORD PTR tv655[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 861
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149523[ebp], esp
	push	OFFSET $SG143406
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv697[ebp], eax
	mov	eax, DWORD PTR tv697[ebp]
	mov	DWORD PTR tv657[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 862
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149524[ebp], esp
	push	OFFSET $SG143408
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv698[ebp], eax
	mov	edx, DWORD PTR tv698[ebp]
	mov	DWORD PTR tv659[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 20		; 00000014H
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 863
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149525[ebp], esp
	push	OFFSET $SG143410
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv699[ebp], eax
	mov	ecx, DWORD PTR tv699[ebp]
	mov	DWORD PTR tv661[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 867
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149526[ebp], esp
	push	OFFSET $SG143415
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv700[ebp], eax
	mov	eax, DWORD PTR tv700[ebp]
	mov	DWORD PTR tv663[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 4
	mov	ecx, esp
	mov	DWORD PTR $T149527[ebp], esp
	push	OFFSET $SG143416
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv701[ebp], eax
	mov	edx, DWORD PTR tv701[ebp]
	mov	DWORD PTR tv665[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 23		; 00000017H
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 4
	mov	ecx, esp
	mov	DWORD PTR $T149528[ebp], esp
	push	OFFSET $SG143417
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv702[ebp], eax
	mov	ecx, DWORD PTR tv702[ebp]
	mov	DWORD PTR tv667[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 4
	mov	ecx, esp
	mov	DWORD PTR $T149529[ebp], esp
	push	OFFSET $SG143418
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv703[ebp], eax
	mov	eax, DWORD PTR tv703[ebp]
	mov	DWORD PTR tv669[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 868
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149530[ebp], esp
	push	OFFSET $SG143420
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv704[ebp], eax
	mov	edx, DWORD PTR tv704[ebp]
	mov	DWORD PTR tv671[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 26		; 0000001aH
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 869
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149531[ebp], esp
	push	OFFSET $SG143422
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv705[ebp], eax
	mov	ecx, DWORD PTR tv705[ebp]
	mov	DWORD PTR tv673[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	edx, DWORD PTR _iClientID$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 870
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149532[ebp], esp
	push	OFFSET $SG143424
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv706[ebp], eax
	mov	eax, DWORD PTR tv706[ebp]
	mov	DWORD PTR tv675[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	ecx, DWORD PTR _iClientID$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 871
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149533[ebp], esp
	push	OFFSET $SG143426
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv707[ebp], eax
	mov	edx, DWORD PTR tv707[ebp]
	mov	DWORD PTR tv677[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 29		; 0000001dH
	mov	eax, DWORD PTR _iClientID$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?PrintUserCmdText@@YAXIV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 872
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
	mov	ecx, DWORD PTR $T149504[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1:
	mov	ecx, DWORD PTR $T149505[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2:
	mov	ecx, DWORD PTR $T149506[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3:
	mov	ecx, DWORD PTR $T149507[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$4:
	mov	ecx, DWORD PTR $T149508[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$5:
	mov	ecx, DWORD PTR $T149509[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6:
	mov	ecx, DWORD PTR $T149510[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$7:
	mov	ecx, DWORD PTR $T149511[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$8:
	mov	ecx, DWORD PTR $T149512[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$9:
	mov	ecx, DWORD PTR $T149513[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$10:
	mov	ecx, DWORD PTR $T149514[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$11:
	mov	ecx, DWORD PTR $T149515[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$12:
	mov	ecx, DWORD PTR $T149516[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$13:
	mov	ecx, DWORD PTR $T149517[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$14:
	mov	ecx, DWORD PTR $T149518[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$15:
	mov	ecx, DWORD PTR $T149519[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$16:
	mov	ecx, DWORD PTR $T149520[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$17:
	mov	ecx, DWORD PTR $T149521[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$18:
	mov	ecx, DWORD PTR $T149522[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$19:
	mov	ecx, DWORD PTR $T149523[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$20:
	mov	ecx, DWORD PTR $T149524[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$21:
	mov	ecx, DWORD PTR $T149525[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$22:
	mov	ecx, DWORD PTR $T149526[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$23:
	mov	ecx, DWORD PTR $T149527[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$24:
	mov	ecx, DWORD PTR $T149528[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$25:
	mov	ecx, DWORD PTR $T149529[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$26:
	mov	ecx, DWORD PTR $T149530[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$27:
	mov	ecx, DWORD PTR $T149531[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$28:
	mov	ecx, DWORD PTR $T149532[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$29:
	mov	ecx, DWORD PTR $T149533[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-364]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UserCmd_Help@@YAXIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; UserCmd_Help
PUBLIC	__real@459c4000
PUBLIC	__real@46c35000
PUBLIC	__real@453b8000
PUBLIC	__real@3c23d70a
PUBLIC	__real@40a00000
PUBLIC	__real@3c8ef34d
PUBLIC	__real@44480000
PUBLIC	__real@43480000
PUBLIC	__real@3f490ff9
PUBLIC	__real@41000000
PUBLIC	__real@3e99999a
PUBLIC	__real@3727c5ac
PUBLIC	__real@40000000
PUBLIC	__real@3dcccccd
PUBLIC	__real@3db2ca58
PUBLIC	__real@447a0000
PUBLIC	__real@3ea8f5c3
PUBLIC	__real@3eb2bd3c
PUBLIC	__real@43fa0000
PUBLIC	__real@3e800000
PUBLIC	__real@3f000000
PUBLIC	__real@42c80000
PUBLIC	__real@42960000
PUBLIC	__real@3f800000
PUBLIC	__real@41200000
PUBLIC	__real@3fc90ff9
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3ecccccd
PUBLIC	?HkMakePersonality@@YA?AUSetPersonalityParams@AI@pub@@XZ ; HkMakePersonality
EXTRN	__imp_??0SetPersonalityParams@AI@pub@@QAE@ABU012@@Z:PROC
EXTRN	__imp_?get_state_graph@StateGraph@pub@@YAHPBDW4Type@12@@Z:PROC
EXTRN	__imp_??0SetPersonalityParams@AI@pub@@QAE@XZ:PROC
;	COMDAT __real@459c4000
CONST	SEGMENT
__real@459c4000 DD 0459c4000r			; 5000
CONST	ENDS
;	COMDAT __real@46c35000
CONST	SEGMENT
__real@46c35000 DD 046c35000r			; 25000
CONST	ENDS
;	COMDAT __real@453b8000
CONST	SEGMENT
__real@453b8000 DD 0453b8000r			; 3000
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@3c8ef34d
CONST	SEGMENT
__real@3c8ef34d DD 03c8ef34dr			; 0.01745
CONST	ENDS
;	COMDAT __real@44480000
CONST	SEGMENT
__real@44480000 DD 044480000r			; 800
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@3f490ff9
CONST	SEGMENT
__real@3f490ff9 DD 03f490ff9r			; 0.7854
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-005
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3db2ca58
CONST	SEGMENT
__real@3db2ca58 DD 03db2ca58r			; 0.0873
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@3ea8f5c3
CONST	SEGMENT
__real@3ea8f5c3 DD 03ea8f5c3r			; 0.33
CONST	ENDS
;	COMDAT __real@3eb2bd3c
CONST	SEGMENT
__real@3eb2bd3c DD 03eb2bd3cr			; 0.3491
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42960000
CONST	SEGMENT
__real@42960000 DD 042960000r			; 75
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@3fc90ff9
CONST	SEGMENT
__real@3fc90ff9 DD 03fc90ff9r			; 1.5708
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
; Function compile flags: /Odtp
CONST	ENDS
_TEXT	SEGMENT
_p$ = -1016						; size = 1012
___$ReturnUdt$ = 8					; size = 4
?HkMakePersonality@@YA?AUSetPersonalityParams@AI@pub@@XZ PROC ; HkMakePersonality
; Line 875
	push	ebp
	mov	ebp, esp
	sub	esp, 1016				; 000003f8H
; Line 877
	lea	ecx, DWORD PTR _p$[ebp]
	call	DWORD PTR __imp_??0SetPersonalityParams@AI@pub@@QAE@XZ
; Line 878
	push	0
	push	OFFSET $SG143431
	call	DWORD PTR __imp_?get_state_graph@StateGraph@pub@@YAHPBDW4Type@12@@Z
	add	esp, 8
	mov	DWORD PTR _p$[ebp+12], eax
; Line 879
	mov	BYTE PTR _p$[ebp+24], 1
; Line 881
	fld	DWORD PTR __real@3ecccccd
	fstp	DWORD PTR _p$[ebp+32]
; Line 882
	fldz
	fstp	DWORD PTR _p$[ebp+36]
; Line 883
	fld	DWORD PTR __real@3ecccccd
	fstp	DWORD PTR _p$[ebp+40]
; Line 884
	fld	DWORD PTR __real@3e4ccccd
	fstp	DWORD PTR _p$[ebp+44]
; Line 885
	fld	DWORD PTR __real@3fc90ff9
	fstp	DWORD PTR _p$[ebp+48]
; Line 886
	fld	DWORD PTR __real@41200000
	fstp	DWORD PTR _p$[ebp+64]
; Line 887
	fld1
	fstp	DWORD PTR _p$[ebp+76]
; Line 888
	fld	DWORD PTR __real@42960000
	fstp	DWORD PTR _p$[ebp+72]
; Line 889
	fld	DWORD PTR __real@42c80000
	fstp	DWORD PTR _p$[ebp+28]
; Line 890
	fld	DWORD PTR __real@3fc90ff9
	fstp	DWORD PTR _p$[ebp+60]
; Line 891
	fld	DWORD PTR __real@3fc90ff9
	fstp	DWORD PTR _p$[ebp+56]
; Line 892
	fld1
	fstp	DWORD PTR _p$[ebp+80]
; Line 893
	fld1
	fstp	DWORD PTR _p$[ebp+84]
; Line 894
	mov	BYTE PTR _p$[ebp+96], 1
; Line 895
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR _p$[ebp+68]
; Line 896
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR _p$[ebp+52]
; Line 897
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+100]
; Line 898
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+104]
; Line 899
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+108]
; Line 900
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+112]
; Line 902
	fld1
	fstp	DWORD PTR _p$[ebp+148]
; Line 903
	fld1
	fstp	DWORD PTR _p$[ebp+116]
; Line 904
	fld	DWORD PTR __real@41200000
	fstp	DWORD PTR _p$[ebp+120]
; Line 905
	fldz
	fstp	DWORD PTR _p$[ebp+124]
; Line 906
	fld1
	fstp	DWORD PTR _p$[ebp+152]
; Line 907
	fld1
	fstp	DWORD PTR _p$[ebp+132]
; Line 908
	fld1
	fstp	DWORD PTR _p$[ebp+136]
; Line 909
	fld1
	fstp	DWORD PTR _p$[ebp+140]
; Line 910
	fld1
	fstp	DWORD PTR _p$[ebp+144]
; Line 911
	fld1
	fstp	DWORD PTR _p$[ebp+156]
; Line 912
	fld1
	fstp	DWORD PTR _p$[ebp+160]
; Line 913
	fld1
	fstp	DWORD PTR _p$[ebp+164]
; Line 915
	fld	DWORD PTR __real@43fa0000
	fstp	DWORD PTR _p$[ebp+192]
; Line 916
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+196]
; Line 917
	fld1
	fstp	DWORD PTR _p$[ebp+176]
; Line 918
	fld1
	fstp	DWORD PTR _p$[ebp+200]
; Line 919
	fld1
	fstp	DWORD PTR _p$[ebp+204]
; Line 920
	fld1
	fstp	DWORD PTR _p$[ebp+208]
; Line 921
	fld1
	fstp	DWORD PTR _p$[ebp+232]
; Line 922
	fld	DWORD PTR __real@3fc90ff9
	fstp	DWORD PTR _p$[ebp+236]
; Line 923
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR _p$[ebp+240]
; Line 924
	fld	DWORD PTR __real@3eb2bd3c
	fstp	DWORD PTR _p$[ebp+244]
; Line 925
	fld	DWORD PTR __real@3fc90ff9
	fstp	DWORD PTR _p$[ebp+248]
; Line 926
	fld	DWORD PTR __real@41200000
	fstp	DWORD PTR _p$[ebp+252]
; Line 927
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR _p$[ebp+256]
; Line 928
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+216]
; Line 929
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+220]
; Line 930
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+224]
; Line 931
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+228]
; Line 932
	fld	DWORD PTR __real@3ea8f5c3
	fstp	DWORD PTR _p$[ebp+180]
; Line 933
	fld	DWORD PTR __real@3ea8f5c3
	fstp	DWORD PTR _p$[ebp+184]
; Line 934
	fld	DWORD PTR __real@3ea8f5c3
	fstp	DWORD PTR _p$[ebp+188]
; Line 936
	fld	DWORD PTR __real@447a0000
	fstp	DWORD PTR _p$[ebp+284]
; Line 937
	fld1
	fstp	DWORD PTR _p$[ebp+288]
; Line 938
	fld	DWORD PTR __real@3fc90ff9
	fstp	DWORD PTR _p$[ebp+312]
; Line 939
	fld1
	fstp	DWORD PTR _p$[ebp+316]
; Line 940
	mov	BYTE PTR _p$[ebp+292], 1
; Line 941
	fld1
	fstp	DWORD PTR _p$[ebp+296]
; Line 942
	fld1
	fstp	DWORD PTR _p$[ebp+300]
; Line 943
	fld1
	fstp	DWORD PTR _p$[ebp+304]
; Line 944
	fld1
	fstp	DWORD PTR _p$[ebp+308]
; Line 945
	fld1
	fstp	DWORD PTR _p$[ebp+280]
; Line 947
	fld	DWORD PTR __real@3db2ca58
	fstp	DWORD PTR _p$[ebp+324]
; Line 948
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR _p$[ebp+328]
; Line 949
	fld	DWORD PTR __real@3dcccccd
	fstp	DWORD PTR _p$[ebp+332]
; Line 950
	fld1
	fstp	DWORD PTR _p$[ebp+336]
; Line 951
	mov	BYTE PTR _p$[ebp+340], 1
; Line 952
	fld1
	fstp	DWORD PTR _p$[ebp+344]
; Line 953
	fld	DWORD PTR __real@42c80000
	fstp	DWORD PTR _p$[ebp+348]
; Line 955
	fld	DWORD PTR __real@42c80000
	fstp	DWORD PTR _p$[ebp+352]
; Line 956
	fld1
	fstp	DWORD PTR _p$[ebp+356]
; Line 958
	fldz
	fstp	DWORD PTR _p$[ebp+364]
; Line 959
	fld1
	fstp	DWORD PTR _p$[ebp+368]
; Line 960
	fld1
	fstp	DWORD PTR _p$[ebp+372]
; Line 961
	fld	DWORD PTR __real@40000000
	fstp	DWORD PTR _p$[ebp+376]
; Line 962
	fld	DWORD PTR __real@42c80000
	fstp	DWORD PTR _p$[ebp+380]
; Line 964
	fldz
	fstp	DWORD PTR _p$[ebp+384]
; Line 965
	fld1
	fstp	DWORD PTR _p$[ebp+392]
; Line 966
	fld	DWORD PTR __real@3e4ccccd
	fstp	DWORD PTR _p$[ebp+388]
; Line 967
	fldz
	fstp	DWORD PTR _p$[ebp+396]
; Line 968
	fld1
	fstp	DWORD PTR _p$[ebp+404]
; Line 969
	fld	DWORD PTR __real@3e4ccccd
	fstp	DWORD PTR _p$[ebp+400]
; Line 971
	fldz
	fstp	DWORD PTR _p$[ebp+412]
; Line 972
	fldz
	fstp	DWORD PTR _p$[ebp+416]
; Line 973
	fld	DWORD PTR __real@40000000
	fstp	DWORD PTR _p$[ebp+420]
; Line 974
	fldz
	fstp	DWORD PTR _p$[ebp+424]
; Line 975
	fldz
	fstp	DWORD PTR _p$[ebp+428]
; Line 976
	fld	DWORD PTR __real@3727c5ac
	fstp	DWORD PTR _p$[ebp+432]
; Line 977
	fld	DWORD PTR __real@42c80000
	fstp	DWORD PTR _p$[ebp+436]
; Line 978
	fld1
	fstp	DWORD PTR _p$[ebp+444]
; Line 979
	fldz
	fstp	DWORD PTR _p$[ebp+452]
; Line 980
	mov	DWORD PTR _p$[ebp+408], 0
; Line 981
	fld	DWORD PTR __real@40000000
	fstp	DWORD PTR _p$[ebp+456]
; Line 982
	fld	DWORD PTR __real@40000000
	fstp	DWORD PTR _p$[ebp+460]
; Line 983
	fldz
	fstp	DWORD PTR _p$[ebp+464]
; Line 984
	fldz
	fstp	DWORD PTR _p$[ebp+468]
; Line 985
	fld	DWORD PTR __real@3e99999a
	fstp	DWORD PTR _p$[ebp+448]
; Line 986
	fld	DWORD PTR __real@42c80000
	fstp	DWORD PTR _p$[ebp+440]
; Line 988
	fld	DWORD PTR __real@41000000
	fstp	DWORD PTR _p$[ebp+472]
; Line 989
	fld	DWORD PTR __real@3f490ff9
	fstp	DWORD PTR _p$[ebp+476]
; Line 990
	fld	DWORD PTR __real@43480000
	fstp	DWORD PTR _p$[ebp+480]
; Line 992
	fldz
	fstp	DWORD PTR _p$[ebp+492]
; Line 993
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR _p$[ebp+496]
; Line 994
	fld	DWORD PTR __real@44480000
	fstp	DWORD PTR _p$[ebp+484]
; Line 995
	fld	DWORD PTR __real@3c8ef34d
	fstp	DWORD PTR _p$[ebp+500]
; Line 996
	mov	BYTE PTR _p$[ebp+488], 0
; Line 998
	fld1
	fstp	DWORD PTR _p$[ebp+520]
; Line 999
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+524]
; Line 1000
	fld1
	fstp	DWORD PTR _p$[ebp+536]
; Line 1001
	fld	DWORD PTR __real@3e4ccccd
	fstp	DWORD PTR _p$[ebp+540]
; Line 1002
	fld	DWORD PTR __real@3ecccccd
	fstp	DWORD PTR _p$[ebp+544]
; Line 1003
	fld	DWORD PTR __real@3e4ccccd
	fstp	DWORD PTR _p$[ebp+548]
; Line 1004
	fld	DWORD PTR __real@3e4ccccd
	fstp	DWORD PTR _p$[ebp+552]
; Line 1005
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR _p$[ebp+556]
; Line 1006
	fld1
	fstp	DWORD PTR _p$[ebp+560]
; Line 1007
	fld	DWORD PTR __real@3e800000
	fstp	DWORD PTR _p$[ebp+528]
; Line 1008
	fld	DWORD PTR __real@3dcccccd
	fstp	DWORD PTR _p$[ebp+532]
; Line 1009
	fld1
	fstp	DWORD PTR _p$[ebp+572]
; Line 1010
	fld1
	fstp	DWORD PTR _p$[ebp+576]
; Line 1011
	fld1
	fstp	DWORD PTR _p$[ebp+564]
; Line 1012
	fld1
	fstp	DWORD PTR _p$[ebp+568]
; Line 1014
	fld	DWORD PTR __real@44480000
	fstp	DWORD PTR _p$[ebp+600]
; Line 1015
	fld1
	fstp	DWORD PTR _p$[ebp+588]
; Line 1016
	fld1
	fstp	DWORD PTR _p$[ebp+592]
; Line 1017
	fld1
	fstp	DWORD PTR _p$[ebp+596]
; Line 1019
	fld	DWORD PTR __real@40a00000
	fstp	DWORD PTR _p$[ebp+604]
; Line 1020
	fldz
	fstp	DWORD PTR _p$[ebp+608]
; Line 1022
	fldz
	fstp	DWORD PTR _p$[ebp+612]
; Line 1023
	fldz
	fstp	DWORD PTR _p$[ebp+616]
; Line 1024
	fld	DWORD PTR __real@3c23d70a
	fstp	DWORD PTR _p$[ebp+620]
; Line 1025
	fld1
	fstp	DWORD PTR _p$[ebp+624]
; Line 1026
	fld1
	fstp	DWORD PTR _p$[ebp+636]
; Line 1027
	fld1
	fstp	DWORD PTR _p$[ebp+640]
; Line 1028
	mov	BYTE PTR _p$[ebp+669], 1
; Line 1029
	fld1
	fstp	DWORD PTR _p$[ebp+672]
; Line 1030
	fld1
	fstp	DWORD PTR _p$[ebp+684]
; Line 1031
	fld1
	fstp	DWORD PTR _p$[ebp+688]
; Line 1032
	fld	DWORD PTR __real@40a00000
	fstp	DWORD PTR _p$[ebp+692]
; Line 1033
	mov	DWORD PTR _p$[ebp+680], 1
; Line 1035
	mov	BYTE PTR _p$[ebp+904], 0
; Line 1036
	fld	DWORD PTR __real@453b8000
	fstp	DWORD PTR _p$[ebp+908]
; Line 1037
	mov	BYTE PTR _p$[ebp+1000], 0
; Line 1038
	mov	DWORD PTR _p$[ebp+704], 4
; Line 1039
	mov	DWORD PTR _p$[ebp+992], 4
; Line 1040
	fld	DWORD PTR __real@3c23d70a
	fstp	DWORD PTR _p$[ebp+996]
; Line 1041
	mov	BYTE PTR _p$[ebp+1001], 1
; Line 1042
	mov	DWORD PTR _p$[ebp+920], 4
; Line 1043
	mov	DWORD PTR _p$[ebp+872], 5
; Line 1044
	mov	DWORD PTR _p$[ebp+876], 6
; Line 1045
	mov	DWORD PTR _p$[ebp+880], 7
; Line 1046
	mov	DWORD PTR _p$[ebp+912], 3
; Line 1047
	mov	DWORD PTR _p$[ebp+916], 7
; Line 1048
	fld	DWORD PTR __real@46c35000
	fstp	DWORD PTR _p$[ebp+712]
; Line 1049
	fld	DWORD PTR __real@459c4000
	fstp	DWORD PTR _p$[ebp+720]
; Line 1050
	mov	DWORD PTR _p$[ebp+716], 11		; 0000000bH
; Line 1051
	mov	DWORD PTR _p$[ebp+724], 15		; 0000000fH
; Line 1052
	mov	DWORD PTR _p$[ebp+728], 12		; 0000000cH
; Line 1054
	lea	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0SetPersonalityParams@AI@pub@@QAE@ABU012@@Z
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1055
	mov	esp, ebp
	pop	ebp
	ret	0
?HkMakePersonality@@YA?AUSetPersonalityParams@AI@pub@@XZ ENDP ; HkMakePersonality
_TEXT	ENDS
PUBLIC	?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; ExecuteCommandString_Callback
EXTRN	?AdminCmd_JumpTest@HyperJump@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC ; HyperJump::AdminCmd_JumpTest
EXTRN	?AdminCmd_DropTag@Rename@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC ; Rename::AdminCmd_DropTag
EXTRN	?AdminCmd_AddTag@Rename@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@11@Z:PROC ; Rename::AdminCmd_AddTag
EXTRN	?AdminCmd_ShowTags@Rename@@YAXPAVCCmds@@@Z:PROC	; Rename::AdminCmd_ShowTags
EXTRN	?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z:PROC ; Message::AdminCmd_SendMail
EXTRN	__imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ:PROC
EXTRN	__imp_?fLog@@3PAU_iobuf@@A:DWORD
EXTRN	__imp___unlink:PROC
EXTRN	__imp__MoveFileA@8:PROC
EXTRN	__imp_?sDebugLog@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A:BYTE
EXTRN	__imp_?fLogDebug@@3PAU_iobuf@@A:DWORD
EXTRN	?AdminCmd_SetAccMoveCode@Rename@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z:PROC ; Rename::AdminCmd_SetAccMoveCode
EXTRN	?AdminCmd_ReloadBans@IPBans@@YAXPAVCCmds@@@Z:PROC ; IPBans::AdminCmd_ReloadBans
EXTRN	?AdminCmd_AuthenticateChar@IPBans@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC ; IPBans::AdminCmd_AuthenticateChar
EXTRN	?AdminCmd_TestBot@HyperJump@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@H@Z:PROC ; HyperJump::AdminCmd_TestBot
EXTRN	__imp_?ArgStr@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z:PROC
EXTRN	__imp_?ArgInt@CCmds@@QAEHI@Z:PROC
EXTRN	?AdminCmd_Pull@HyperJump@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC ; HyperJump::AdminCmd_Pull
EXTRN	?AdminCmd_Beam@HyperJump@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z:PROC ; HyperJump::AdminCmd_Beam
EXTRN	__imp_?ArgStrToEnd@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z:PROC
EXTRN	?AdminCmd_Chase@HyperJump@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:PROC ; HyperJump::AdminCmd_Chase
EXTRN	__imp_?ArgCharname@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z:PROC
EXTRN	?AdminCmd_SmiteAll@MiscCmds@@YAXPAVCCmds@@@Z:PROC ; MiscCmds::AdminCmd_SmiteAll
EXTRN	?AdminCmd_Move@HyperJump@@YAXPAVCCmds@@MMM@Z:PROC ; HyperJump::AdminCmd_Move
EXTRN	__imp_?ArgFloat@CCmds@@QAEMI@Z:PROC
EXTRN	__imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z:PROC
xdata$x	SEGMENT
__ehfuncinfo$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 019930522H
	DD	013H
	DD	FLAT:__unwindtable$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$13
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$16
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$17
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$18
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv403 = -676						; size = 4
tv422 = -672						; size = 4
tv401 = -668						; size = 4
tv421 = -664						; size = 4
tv399 = -660						; size = 4
tv420 = -656						; size = 4
tv397 = -652						; size = 4
tv419 = -648						; size = 4
tv395 = -644						; size = 4
tv418 = -640						; size = 4
tv393 = -636						; size = 4
tv417 = -632						; size = 4
tv391 = -628						; size = 4
tv416 = -624						; size = 4
tv389 = -620						; size = 4
tv415 = -616						; size = 4
tv387 = -612						; size = 4
tv414 = -608						; size = 4
tv385 = -604						; size = 4
tv413 = -600						; size = 4
tv383 = -596						; size = 4
tv412 = -592						; size = 4
tv381 = -588						; size = 4
tv411 = -584						; size = 4
tv379 = -580						; size = 4
tv410 = -576						; size = 4
tv377 = -572						; size = 4
tv409 = -568						; size = 4
tv375 = -564						; size = 4
tv408 = -560						; size = 4
tv373 = -556						; size = 4
tv407 = -552						; size = 4
tv371 = -548						; size = 4
tv406 = -544						; size = 4
tv369 = -540						; size = 4
tv405 = -536						; size = 4
tv367 = -532						; size = 4
tv404 = -528						; size = 4
$T149645 = -524						; size = 28
$T149644 = -496						; size = 28
$T149643 = -468						; size = 28
$T149642 = -440						; size = 28
$T149641 = -412						; size = 28
$T149640 = -384						; size = 28
$T149639 = -356						; size = 28
$T149638 = -328						; size = 28
$T149637 = -300						; size = 28
$T149636 = -272						; size = 4
$T149635 = -268						; size = 28
$T149634 = -240						; size = 28
$T149633 = -212						; size = 28
$T149632 = -184						; size = 28
$T149631 = -156						; size = 28
$T149630 = -128						; size = 28
$T149629 = -100						; size = 28
$T149628 = -72						; size = 28
$T149627 = -41						; size = 1
$T149626 = -40						; size = 28
__$EHRec$ = -12						; size = 12
_cmds$ = 8						; size = 4
_wscCmd$ = 12						; size = 4
?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z PROC ; ExecuteCommandString_Callback
; Line 1060
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 664				; 00000298H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1061
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 1063
	push	OFFSET $SG143437
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN36@ExecuteCom
; Line 1065
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1066
	push	3
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgFloat@CCmds@@QAEMI@Z
	push	ecx
	fstp	DWORD PTR [esp]
	push	2
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgFloat@CCmds@@QAEMI@Z
	push	ecx
	fstp	DWORD PTR [esp]
	push	1
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgFloat@CCmds@@QAEMI@Z
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _cmds$[ebp]
	push	eax
	call	?AdminCmd_Move@HyperJump@@YAXPAVCCmds@@MMM@Z ; HyperJump::AdminCmd_Move
	add	esp, 16					; 00000010H
; Line 1067
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN36@ExecuteCom:
; Line 1069
	push	OFFSET $SG143440
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN34@ExecuteCom
; Line 1071
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1072
	mov	ecx, DWORD PTR _cmds$[ebp]
	push	ecx
	call	?AdminCmd_SmiteAll@MiscCmds@@YAXPAVCCmds@@@Z ; MiscCmds::AdminCmd_SmiteAll
	add	esp, 4
; Line 1073
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN34@ExecuteCom:
; Line 1075
	push	OFFSET $SG143443
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN32@ExecuteCom
; Line 1077
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1078
	push	1
	lea	edx, DWORD PTR $T149626[ebp]
	push	edx
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgCharname@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv404[ebp], eax
	mov	eax, DWORD PTR tv404[ebp]
	mov	DWORD PTR tv367[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv367[ebp]
	push	ecx
	mov	edx, DWORD PTR _cmds$[ebp]
	push	edx
	call	?AdminCmd_Chase@HyperJump@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; HyperJump::AdminCmd_Chase
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149626[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1079
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN32@ExecuteCom:
; Line 1081
	push	OFFSET $SG143447
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	$LN30@ExecuteCom
; Line 1083
	push	2
	lea	eax, DWORD PTR $T149628[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStrToEnd@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv405[ebp], eax
	mov	ecx, DWORD PTR tv405[ebp]
	mov	DWORD PTR tv369[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv369[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T149629[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgCharname@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv406[ebp], eax
	mov	ecx, DWORD PTR tv406[ebp]
	mov	DWORD PTR tv371[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR tv371[ebp]
	push	edx
	mov	eax, DWORD PTR _cmds$[ebp]
	push	eax
	call	?AdminCmd_Beam@HyperJump@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z ; HyperJump::AdminCmd_Beam
	add	esp, 12					; 0000000cH
	mov	BYTE PTR $T149627[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T149629[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149628[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T149627[ebp]
	test	ecx, ecx
	je	SHORT $LN29@ExecuteCom
; Line 1085
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1086
	mov	al, 1
	jmp	$LN37@ExecuteCom
$LN29@ExecuteCom:
; Line 1088
	jmp	$LN1@ExecuteCom
$LN30@ExecuteCom:
; Line 1089
	push	OFFSET $SG143454
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN27@ExecuteCom
; Line 1091
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1092
	push	1
	lea	edx, DWORD PTR $T149630[ebp]
	push	edx
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgCharname@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv407[ebp], eax
	mov	eax, DWORD PTR tv407[ebp]
	mov	DWORD PTR tv373[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR tv373[ebp]
	push	ecx
	mov	edx, DWORD PTR _cmds$[ebp]
	push	edx
	call	?AdminCmd_Pull@HyperJump@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; HyperJump::AdminCmd_Pull
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149630[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1093
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN27@ExecuteCom:
; Line 1095
	push	OFFSET $SG143458
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN25@ExecuteCom
; Line 1097
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1098
	push	2
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgInt@CCmds@@QAEHI@Z
	push	eax
	push	1
	lea	eax, DWORD PTR $T149631[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStr@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv408[ebp], eax
	mov	ecx, DWORD PTR tv408[ebp]
	mov	DWORD PTR tv375[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv375[ebp]
	push	edx
	mov	eax, DWORD PTR _cmds$[ebp]
	push	eax
	call	?AdminCmd_TestBot@HyperJump@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@H@Z ; HyperJump::AdminCmd_TestBot
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149631[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1099
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN25@ExecuteCom:
; Line 1101
	push	OFFSET $SG143462
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN23@ExecuteCom
; Line 1103
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1104
	push	1
	lea	ecx, DWORD PTR $T149632[ebp]
	push	ecx
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStr@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv409[ebp], eax
	mov	edx, DWORD PTR tv409[ebp]
	mov	DWORD PTR tv377[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	eax, DWORD PTR tv377[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmds$[ebp]
	push	ecx
	call	?AdminCmd_AuthenticateChar@IPBans@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; IPBans::AdminCmd_AuthenticateChar
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149632[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1105
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN23@ExecuteCom:
; Line 1107
	push	OFFSET $SG143466
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN21@ExecuteCom
; Line 1109
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1110
	mov	edx, DWORD PTR _cmds$[ebp]
	push	edx
	call	?AdminCmd_ReloadBans@IPBans@@YAXPAVCCmds@@@Z ; IPBans::AdminCmd_ReloadBans
	add	esp, 4
; Line 1111
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN21@ExecuteCom:
; Line 1113
	push	OFFSET $SG143469
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	$LN19@ExecuteCom
; Line 1115
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1116
	push	2
	lea	eax, DWORD PTR $T149633[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStr@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv410[ebp], eax
	mov	ecx, DWORD PTR tv410[ebp]
	mov	DWORD PTR tv379[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv379[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T149634[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgCharname@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv411[ebp], eax
	mov	ecx, DWORD PTR tv411[ebp]
	mov	DWORD PTR tv381[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv381[ebp]
	push	edx
	mov	eax, DWORD PTR _cmds$[ebp]
	push	eax
	call	?AdminCmd_SetAccMoveCode@Rename@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z ; Rename::AdminCmd_SetAccMoveCode
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T149634[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149633[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1117
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN19@ExecuteCom:
; Line 1119
	push	OFFSET $SG143474
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	$LN17@ExecuteCom
; Line 1121
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1122
	mov	ecx, DWORD PTR __imp_?fLogDebug@@3PAU_iobuf@@A
	cmp	DWORD PTR [ecx], 0
	je	$LN16@ExecuteCom
; Line 1124
	mov	edx, DWORD PTR __imp_?fLogDebug@@3PAU_iobuf@@A
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
; Line 1125
	push	OFFSET $SG143478
	mov	ecx, DWORD PTR __imp_?sDebugLog@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
	push	ecx
	lea	edx, DWORD PTR $T149635[ebp]
	push	edx
	call	DWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv412[ebp], eax
	mov	eax, DWORD PTR tv412[ebp]
	mov	DWORD PTR tv383[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv383[ebp]
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	mov	ecx, DWORD PTR __imp_?sDebugLog@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	call	DWORD PTR __imp__MoveFileA@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149635[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
; Line 1126
	mov	ecx, DWORD PTR __imp_?sDebugLog@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	call	DWORD PTR __imp___unlink
	add	esp, 4
; Line 1127
	push	OFFSET $SG143479
	mov	ecx, DWORD PTR __imp_?sDebugLog@@3V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@A
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	ecx, DWORD PTR __imp_?fLogDebug@@3PAU_iobuf@@A
	mov	DWORD PTR [ecx], eax
$LN16@ExecuteCom:
; Line 1130
	mov	edx, DWORD PTR __imp_?fLog@@3PAU_iobuf@@A
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN15@ExecuteCom
; Line 1132
	mov	eax, DWORD PTR __imp_?fLog@@3PAU_iobuf@@A
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
; Line 1133
	push	OFFSET $SG143481
	push	OFFSET $SG143482
	call	DWORD PTR __imp__MoveFileA@8
; Line 1134
	push	OFFSET $SG143483
	call	DWORD PTR __imp___unlink
	add	esp, 4
; Line 1135
	push	OFFSET $SG143484
	push	OFFSET $SG143485
	call	DWORD PTR __imp__fopen
	add	esp, 8
	mov	edx, DWORD PTR __imp_?fLog@@3PAU_iobuf@@A
	mov	DWORD PTR [edx], eax
$LN15@ExecuteCom:
; Line 1138
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149636[ebp], esp
	push	OFFSET $SG143487
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv413[ebp], eax
	mov	eax, DWORD PTR tv413[ebp]
	mov	DWORD PTR tv385[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _cmds$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1139
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN17@ExecuteCom:
; Line 1141
	push	OFFSET $SG143491
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	je	SHORT $LN12@ExecuteCom
	push	OFFSET $SG143492
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	$LN13@ExecuteCom
$LN12@ExecuteCom:
; Line 1143
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1144
	push	2
	lea	edx, DWORD PTR $T149637[ebp]
	push	edx
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStrToEnd@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv414[ebp], eax
	mov	eax, DWORD PTR tv414[ebp]
	mov	DWORD PTR tv387[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR tv387[ebp]
	push	ecx
	push	1
	lea	edx, DWORD PTR $T149638[ebp]
	push	edx
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgCharname@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv415[ebp], eax
	mov	eax, DWORD PTR tv415[ebp]
	mov	DWORD PTR tv389[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR tv389[ebp]
	push	ecx
	mov	edx, DWORD PTR _cmds$[ebp]
	push	edx
	call	?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z ; Message::AdminCmd_SendMail
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR $T149638[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149637[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1145
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN13@ExecuteCom:
; Line 1147
	push	OFFSET $SG143498
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	je	SHORT $LN9@ExecuteCom
	push	OFFSET $SG143499
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	$LN10@ExecuteCom
$LN9@ExecuteCom:
; Line 1149
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1150
	push	2
	lea	eax, DWORD PTR $T149639[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStrToEnd@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv416[ebp], eax
	mov	ecx, DWORD PTR tv416[ebp]
	mov	DWORD PTR tv391[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	edx, DWORD PTR tv391[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T149640[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgCharname@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv417[ebp], eax
	mov	ecx, DWORD PTR tv417[ebp]
	mov	DWORD PTR tv393[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR tv393[ebp]
	push	edx
	mov	eax, DWORD PTR _cmds$[ebp]
	push	eax
	call	?AdminCmd_SendMail@Message@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@1@Z ; Message::AdminCmd_SendMail
	add	esp, 12					; 0000000cH
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR $T149640[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149639[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1151
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN10@ExecuteCom:
; Line 1153
	push	OFFSET $SG143504
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN7@ExecuteCom
; Line 1155
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1156
	mov	ecx, DWORD PTR _cmds$[ebp]
	push	ecx
	call	?AdminCmd_ShowTags@Rename@@YAXPAVCCmds@@@Z ; Rename::AdminCmd_ShowTags
	add	esp, 4
; Line 1157
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN7@ExecuteCom:
; Line 1159
	push	OFFSET $SG143507
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	$LN5@ExecuteCom
; Line 1161
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1162
	push	3
	lea	edx, DWORD PTR $T149641[ebp]
	push	edx
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStrToEnd@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv418[ebp], eax
	mov	eax, DWORD PTR tv418[ebp]
	mov	DWORD PTR tv395[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	ecx, DWORD PTR tv395[ebp]
	push	ecx
	push	2
	lea	edx, DWORD PTR $T149642[ebp]
	push	edx
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStr@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv419[ebp], eax
	mov	eax, DWORD PTR tv419[ebp]
	mov	DWORD PTR tv397[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR tv397[ebp]
	push	ecx
	push	1
	lea	edx, DWORD PTR $T149643[ebp]
	push	edx
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStr@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv420[ebp], eax
	mov	eax, DWORD PTR tv420[ebp]
	mov	DWORD PTR tv399[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	ecx, DWORD PTR tv399[ebp]
	push	ecx
	mov	edx, DWORD PTR _cmds$[ebp]
	push	edx
	call	?AdminCmd_AddTag@Rename@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@11@Z ; Rename::AdminCmd_AddTag
	add	esp, 16					; 00000010H
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T149643[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR $T149642[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149641[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1163
	mov	al, 1
	jmp	$LN37@ExecuteCom
	jmp	$LN1@ExecuteCom
$LN5@ExecuteCom:
; Line 1165
	push	OFFSET $SG143513
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN3@ExecuteCom
; Line 1167
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1168
	push	1
	lea	eax, DWORD PTR $T149644[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStr@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv421[ebp], eax
	mov	ecx, DWORD PTR tv421[ebp]
	mov	DWORD PTR tv401[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 17		; 00000011H
	mov	edx, DWORD PTR tv401[ebp]
	push	edx
	mov	eax, DWORD PTR _cmds$[ebp]
	push	eax
	call	?AdminCmd_DropTag@Rename@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; Rename::AdminCmd_DropTag
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149644[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1169
	mov	al, 1
	jmp	SHORT $LN37@ExecuteCom
	jmp	SHORT $LN1@ExecuteCom
$LN3@ExecuteCom:
; Line 1171
	push	OFFSET $SG143517
	mov	ecx, DWORD PTR _wscCmd$[ebp]
	call	DWORD PTR __imp_?compare@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEHPBG@Z
	test	eax, eax
	jne	SHORT $LN1@ExecuteCom
; Line 1173
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1174
	push	1
	lea	ecx, DWORD PTR $T149645[ebp]
	push	ecx
	mov	ecx, DWORD PTR _cmds$[ebp]
	call	DWORD PTR __imp_?ArgStr@CCmds@@QAE?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@I@Z
	mov	DWORD PTR tv422[ebp], eax
	mov	edx, DWORD PTR tv422[ebp]
	mov	DWORD PTR tv403[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	eax, DWORD PTR tv403[ebp]
	push	eax
	mov	ecx, DWORD PTR _cmds$[ebp]
	push	ecx
	call	?AdminCmd_JumpTest@HyperJump@@YAXPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; HyperJump::AdminCmd_JumpTest
	add	esp, 8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149645[ebp]
	call	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
; Line 1175
	mov	al, 1
	jmp	SHORT $LN37@ExecuteCom
$LN1@ExecuteCom:
; Line 1243
	xor	al, al
$LN37@ExecuteCom:
; Line 1244
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$0:
	lea	ecx, DWORD PTR $T149626[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$1:
	lea	ecx, DWORD PTR $T149628[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$2:
	lea	ecx, DWORD PTR $T149629[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$3:
	lea	ecx, DWORD PTR $T149630[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$4:
	lea	ecx, DWORD PTR $T149631[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$5:
	lea	ecx, DWORD PTR $T149632[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$6:
	lea	ecx, DWORD PTR $T149633[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$7:
	lea	ecx, DWORD PTR $T149634[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$8:
	lea	ecx, DWORD PTR $T149635[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$9:
	mov	ecx, DWORD PTR $T149636[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$10:
	lea	ecx, DWORD PTR $T149637[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$11:
	lea	ecx, DWORD PTR $T149638[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$12:
	lea	ecx, DWORD PTR $T149639[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$13:
	lea	ecx, DWORD PTR $T149640[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$14:
	lea	ecx, DWORD PTR $T149641[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$15:
	lea	ecx, DWORD PTR $T149642[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$16:
	lea	ecx, DWORD PTR $T149643[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$17:
	lea	ecx, DWORD PTR $T149644[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z$18:
	lea	ecx, DWORD PTR $T149645[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-668]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ENDP ; ExecuteCommandString_Callback
PUBLIC	?CmdHelp_Callback@@YAXPAVCCmds@@@Z		; CmdHelp_Callback
xdata$x	SEGMENT
__ehfuncinfo$?CmdHelp_Callback@@YAXPAVCCmds@@@Z DD 019930522H
	DD	0dH
	DD	FLAT:__unwindtable$?CmdHelp_Callback@@YAXPAVCCmds@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
__unwindtable$?CmdHelp_Callback@@YAXPAVCCmds@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$6
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$7
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$9
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$11
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$12
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv316 = -168						; size = 4
tv329 = -164						; size = 4
tv314 = -160						; size = 4
tv328 = -156						; size = 4
tv312 = -152						; size = 4
tv327 = -148						; size = 4
tv310 = -144						; size = 4
tv326 = -140						; size = 4
tv308 = -136						; size = 4
tv325 = -132						; size = 4
tv306 = -128						; size = 4
tv324 = -124						; size = 4
tv304 = -120						; size = 4
tv323 = -116						; size = 4
tv302 = -112						; size = 4
tv322 = -108						; size = 4
tv300 = -104						; size = 4
tv321 = -100						; size = 4
tv298 = -96						; size = 4
tv320 = -92						; size = 4
tv296 = -88						; size = 4
tv319 = -84						; size = 4
tv294 = -80						; size = 4
tv318 = -76						; size = 4
tv292 = -72						; size = 4
tv317 = -68						; size = 4
$T149682 = -64						; size = 4
$T149681 = -60						; size = 4
$T149680 = -56						; size = 4
$T149679 = -52						; size = 4
$T149678 = -48						; size = 4
$T149677 = -44						; size = 4
$T149676 = -40						; size = 4
$T149675 = -36						; size = 4
$T149674 = -32						; size = 4
$T149673 = -28						; size = 4
$T149672 = -24						; size = 4
$T149671 = -20						; size = 4
$T149670 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_classptr$ = 8						; size = 4
?CmdHelp_Callback@@YAXPAVCCmds@@@Z PROC			; CmdHelp_Callback
; Line 1248
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CmdHelp_Callback@@YAXPAVCCmds@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 156				; 0000009cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1249
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 0 ; returncode
; Line 1250
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149670[ebp], esp
	push	OFFSET $SG143523
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv317[ebp], eax
	mov	eax, DWORD PTR tv317[ebp]
	mov	DWORD PTR tv292[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _classptr$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1251
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149671[ebp], esp
	push	OFFSET $SG143525
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv318[ebp], eax
	mov	edx, DWORD PTR tv318[ebp]
	mov	DWORD PTR tv294[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _classptr$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1252
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149672[ebp], esp
	push	OFFSET $SG143527
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv319[ebp], eax
	mov	ecx, DWORD PTR tv319[ebp]
	mov	DWORD PTR tv296[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _classptr$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1253
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149673[ebp], esp
	push	OFFSET $SG143529
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv320[ebp], eax
	mov	eax, DWORD PTR tv320[ebp]
	mov	DWORD PTR tv298[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _classptr$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1254
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149674[ebp], esp
	push	OFFSET $SG143531
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv321[ebp], eax
	mov	edx, DWORD PTR tv321[ebp]
	mov	DWORD PTR tv300[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR _classptr$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1255
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149675[ebp], esp
	push	OFFSET $SG143533
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv322[ebp], eax
	mov	ecx, DWORD PTR tv322[ebp]
	mov	DWORD PTR tv302[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	mov	edx, DWORD PTR _classptr$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1256
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149676[ebp], esp
	push	OFFSET $SG143535
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv323[ebp], eax
	mov	eax, DWORD PTR tv323[ebp]
	mov	DWORD PTR tv304[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _classptr$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1257
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149677[ebp], esp
	push	OFFSET $SG143537
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv324[ebp], eax
	mov	edx, DWORD PTR tv324[ebp]
	mov	DWORD PTR tv306[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR _classptr$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1258
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149678[ebp], esp
	push	OFFSET $SG143539
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv325[ebp], eax
	mov	ecx, DWORD PTR tv325[ebp]
	mov	DWORD PTR tv308[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR _classptr$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1259
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149679[ebp], esp
	push	OFFSET $SG143541
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv326[ebp], eax
	mov	eax, DWORD PTR tv326[ebp]
	mov	DWORD PTR tv310[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _classptr$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1261
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149680[ebp], esp
	push	OFFSET $SG143543
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv327[ebp], eax
	mov	edx, DWORD PTR tv327[ebp]
	mov	DWORD PTR tv312[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	eax, DWORD PTR _classptr$[ebp]
	push	eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1262
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149681[ebp], esp
	push	OFFSET $SG143545
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv328[ebp], eax
	mov	ecx, DWORD PTR tv328[ebp]
	mov	DWORD PTR tv314[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	edx, DWORD PTR _classptr$[ebp]
	push	edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1263
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149682[ebp], esp
	push	OFFSET $SG143547
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv329[ebp], eax
	mov	eax, DWORD PTR tv329[ebp]
	mov	DWORD PTR tv316[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR _classptr$[ebp]
	push	ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_?Print@CCmds@@QAAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 32					; 00000020H
; Line 1264
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$0:
	mov	ecx, DWORD PTR $T149670[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$1:
	mov	ecx, DWORD PTR $T149671[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$2:
	mov	ecx, DWORD PTR $T149672[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$3:
	mov	ecx, DWORD PTR $T149673[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$4:
	mov	ecx, DWORD PTR $T149674[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$5:
	mov	ecx, DWORD PTR $T149675[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$6:
	mov	ecx, DWORD PTR $T149676[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$7:
	mov	ecx, DWORD PTR $T149677[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$8:
	mov	ecx, DWORD PTR $T149678[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$9:
	mov	ecx, DWORD PTR $T149679[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$10:
	mov	ecx, DWORD PTR $T149680[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$11:
	mov	ecx, DWORD PTR $T149681[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__unwindfunclet$?CmdHelp_Callback@@YAXPAVCCmds@@@Z$12:
	mov	ecx, DWORD PTR $T149682[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?CmdHelp_Callback@@YAXPAVCCmds@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-160]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CmdHelp_Callback@@YAXPAVCCmds@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CmdHelp_Callback@@YAXPAVCCmds@@@Z ENDP			; CmdHelp_Callback
PUBLIC	__real@38d1b717
PUBLIC	__real@3f1a36e2e0000000
PUBLIC	?Elapse_Time@@YGXM@Z				; Elapse_Time
EXTRN	__imp_?ElapseTime@IServerImpl@@UAEXM@Z:PROC
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@3f1a36e2e0000000
CONST	SEGMENT
__real@3f1a36e2e0000000 DQ 03f1a36e2e0000000r	; 0.0001
CONST	ENDS
xdata$x	SEGMENT
__catchsym$?Elapse_Time@@YGXM@Z$3 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?Elapse_Time@@YGXM@Z$0
__tryblocktable$?Elapse_Time@@YGXM@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?Elapse_Time@@YGXM@Z$3
__unwindtable$?Elapse_Time@@YGXM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Elapse_Time@@YGXM@Z$2
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?Elapse_Time@@YGXM@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?Elapse_Time@@YGXM@Z
	DD	01H
	DD	FLAT:__tryblocktable$?Elapse_Time@@YGXM@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv95 = -28						; size = 4
tv129 = -24						; size = 4
$T149701 = -20						; size = 4
__$EHRec$ = -16						; size = 16
_delta$ = 8						; size = 4
?Elapse_Time@@YGXM@Z PROC				; Elapse_Time
; Line 1267
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Elapse_Time@@YGXM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 1268
	mov	DWORD PTR ?returncode@@3W4PLUGIN_RETURNCODE@@A, 2 ; returncode
; Line 1269
	fld	DWORD PTR _delta$[ebp]
	fcomp	QWORD PTR __real@3f1a36e2e0000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN2@Elapse_Tim
; Line 1271
	fld	DWORD PTR _delta$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG143552
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 12					; 0000000cH
; Line 1272
	fld	DWORD PTR _delta$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	sub	esp, 28					; 0000001cH
	mov	ecx, esp
	mov	DWORD PTR $T149701[ebp], esp
	push	OFFSET $SG143554
	call	DWORD PTR __imp_??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBG@Z
	mov	DWORD PTR tv129[ebp], eax
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR tv95[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	call	DWORD PTR __imp_?ConPrint@@YAXV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@ZZ
	add	esp, 36					; 00000024H
; Line 1273
	fld	DWORD PTR __real@38d1b717
	fstp	DWORD PTR _delta$[ebp]
$LN2@Elapse_Tim:
; Line 1277
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	fwait
; Line 1278
	push	ecx
	fld	DWORD PTR _delta$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR __imp__Server
	call	DWORD PTR __imp_?ElapseTime@IServerImpl@@UAEXM@Z
; Line 1280
	fwait
; Line 1279
	jmp	SHORT $LN5@Elapse_Tim
__catch$?Elapse_Time@@YGXM@Z$0:
; Line 1282
	fld	DWORD PTR _delta$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG143556
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 12					; 0000000cH
; Line 1283
	push	OFFSET $SG143557
	push	OFFSET $SG143558
	call	DWORD PTR __imp_?AddLog@@YAXPBDZZ
	add	esp, 8
	push	0
	call	?AddExceptionInfoLog@@YAXPAU_EXCEPTION_POINTERS@@@Z ; AddExceptionInfoLog
	add	esp, 4
; Line 1284
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, $LN9@Elapse_Tim
	ret	0
$LN5@Elapse_Tim:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Elapse_Tim:
; Line 1285
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Elapse_Time@@YGXM@Z$2:
	mov	ecx, DWORD PTR $T149701[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
__ehhandler$?Elapse_Time@@YGXM@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Elapse_Time@@YGXM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Elapse_Time@@YGXM@Z ENDP				; Elapse_Time
PUBLIC	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
PUBLIC	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
PUBLIC	??0PLUGIN_INFO@@QAE@XZ				; PLUGIN_INFO::PLUGIN_INFO
PUBLIC	?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ		; Get_PluginInfo
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
xdata$x	SEGMENT
__unwindtable$?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ$0
__ehfuncinfo$?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
_TEXT	SEGMENT
tv71 = -508						; size = 4
$T149762 = -504						; size = 12
$T149761 = -492						; size = 12
$T149760 = -480						; size = 12
$T149759 = -468						; size = 12
$T149758 = -456						; size = 12
$T149757 = -444						; size = 12
$T149756 = -432						; size = 12
$T149755 = -420						; size = 12
$T149754 = -408						; size = 12
$T149753 = -396						; size = 12
$T149752 = -384						; size = 12
$T149751 = -372						; size = 12
$T149750 = -360						; size = 12
$T149749 = -348						; size = 12
$T149748 = -336						; size = 12
$T149747 = -324						; size = 12
$T149746 = -312						; size = 12
$T149745 = -300						; size = 12
$T149744 = -288						; size = 12
$T149743 = -276						; size = 12
$T149742 = -264						; size = 12
$T149741 = -252						; size = 12
$T149740 = -240						; size = 12
$T149739 = -228						; size = 12
$T149738 = -216						; size = 12
$T149737 = -204						; size = 12
$T149736 = -192						; size = 12
$T149735 = -180						; size = 12
$T149734 = -168						; size = 12
$T149733 = -156						; size = 12
$T149732 = -144						; size = 12
$T149731 = -132						; size = 12
$T149730 = -120						; size = 12
$T149729 = -108						; size = 12
$T149728 = -96						; size = 12
$T149727 = -84						; size = 12
$T149726 = -72						; size = 12
$T149725 = -60						; size = 12
$T149724 = -48						; size = 12
$T149723 = -36						; size = 12
$T149720 = -24						; size = 4
$T149719 = -20						; size = 4
_p_PI$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ PROC		; Get_PluginInfo
; Line 1289
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 496				; 000001f0H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1290
	push	92					; 0000005cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T149720[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T149720[ebp], 0
	je	SHORT $LN3@Get_Plugin
	mov	ecx, DWORD PTR $T149720[ebp]
	call	??0PLUGIN_INFO@@QAE@XZ
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN4@Get_Plugin
$LN3@Get_Plugin:
	mov	DWORD PTR tv71[ebp], 0
$LN4@Get_Plugin:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T149719[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T149719[ebp]
	mov	DWORD PTR _p_PI$[ebp], ecx
; Line 1291
	push	OFFSET $SG143566
	mov	ecx, DWORD PTR _p_PI$[ebp]
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
; Line 1292
	push	OFFSET $SG143567
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
; Line 1293
	mov	edx, DWORD PTR _p_PI$[ebp]
	mov	BYTE PTR [edx+56], 1
; Line 1294
	mov	eax, DWORD PTR _p_PI$[ebp]
	mov	BYTE PTR [eax+57], 1
; Line 1295
	mov	ecx, DWORD PTR _p_PI$[ebp]
	mov	DWORD PTR [ecx+60], OFFSET ?returncode@@3W4PLUGIN_RETURNCODE@@A ; returncode
; Line 1296
	push	0
	push	188					; 000000bcH
	push	OFFSET ?LoadSettings@@YAXXZ		; LoadSettings
	lea	ecx, DWORD PTR $T149723[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1297
	push	0
	push	146					; 00000092H
	push	OFFSET ?ClearClientInfo@@YAXI@Z		; ClearClientInfo
	lea	ecx, DWORD PTR $T149724[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1298
	push	0
	push	181					; 000000b5H
	push	OFFSET ?HkTimer@@YAXXZ			; HkTimer
	lea	ecx, DWORD PTR $T149725[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1299
	push	0
	push	154					; 0000009aH
	push	OFFSET ?SendDeathMsg@@YAXABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@III@Z ; SendDeathMsg
	lea	ecx, DWORD PTR $T149726[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1300
	push	10					; 0000000aH
	push	138					; 0000008aH
	push	OFFSET ?Startup@HkIServerImpl@@YG_NABUSStartupInfo@@@Z ; HkIServerImpl::Startup
	lea	ecx, DWORD PTR $T149727[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1301
	push	10					; 0000000aH
	push	139					; 0000008bH
	push	OFFSET ?Startup_AFTER@HkIServerImpl@@YG_NABUSStartupInfo@@@Z ; HkIServerImpl::Startup_AFTER
	lea	ecx, DWORD PTR $T149728[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1302
	push	0
	push	43					; 0000002bH
	push	OFFSET ?Login@HkIServerImpl@@YGXABUSLoginInfo@@I@Z ; HkIServerImpl::Login
	lea	ecx, DWORD PTR $T149729[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1303
	push	0
	push	109					; 0000006dH
	push	OFFSET ?RequestEvent@HkIServerImpl@@YGXHIIIKI@Z ; HkIServerImpl::RequestEvent
	lea	ecx, DWORD PTR $T149730[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1304
	push	0
	push	3
	push	OFFSET ?PlayerLaunch@HkIServerImpl@@YGXII@Z ; HkIServerImpl::PlayerLaunch
	lea	ecx, DWORD PTR $T149731[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1305
	push	0
	push	4
	push	OFFSET ?PlayerLaunch_AFTER@HkIServerImpl@@YGXII@Z ; HkIServerImpl::PlayerLaunch_AFTER
	lea	ecx, DWORD PTR $T149732[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1306
	push	0
	push	17					; 00000011H
	push	OFFSET ?BaseEnter@HkIServerImpl@@YGXII@Z ; HkIServerImpl::BaseEnter
	lea	ecx, DWORD PTR $T149733[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1308
	push	0
	push	77					; 0000004dH
	push	OFFSET ?LocationEnter@HkIServerImpl@@YGXII@Z ; HkIServerImpl::LocationEnter
	lea	ecx, DWORD PTR $T149734[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1309
	push	0
	push	23					; 00000017H
	push	OFFSET ?DisConnect@HkIServerImpl@@YGXIW4EFLConnection@@@Z ; HkIServerImpl::DisConnect
	lea	ecx, DWORD PTR $T149735[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1310
	push	0
	push	16					; 00000010H
	push	OFFSET ?CharacterSelect_AFTER@HkIServerImpl@@YGXABUCHARACTER_ID@@I@Z ; HkIServerImpl::CharacterSelect_AFTER
	lea	ecx, DWORD PTR $T149736[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1311
	push	0
	push	40					; 00000028H
	push	OFFSET ?JumpInComplete_AFTER@HkIServerImpl@@YGXII@Z ; HkIServerImpl::JumpInComplete_AFTER
	lea	ecx, DWORD PTR $T149737[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1312
	push	0
	push	41					; 00000029H
	push	OFFSET ?SystemSwitchOutComplete@HkIServerImpl@@YGXII@Z ; HkIServerImpl::SystemSwitchOutComplete
	lea	ecx, DWORD PTR $T149738[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1313
	push	0
	push	11					; 0000000bH
	push	OFFSET ?SPObjCollision@HkIServerImpl@@YGXABUSSPObjCollisionInfo@@I@Z ; HkIServerImpl::SPObjCollision
	lea	ecx, DWORD PTR $T149739[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1314
	push	0
	push	65					; 00000041H
	push	OFFSET ?GFGoodBuy@HkIServerImpl@@YGXABUSGFGoodBuyInfo@@I@Z ; HkIServerImpl::GFGoodBuy
	lea	ecx, DWORD PTR $T149740[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1315
	push	0
	push	85					; 00000055H
	push	OFFSET ?ReqAddItem@HkIServerImpl@@YGXIPBDHM_NI@Z ; HkIServerImpl::ReqAddItem
	lea	ecx, DWORD PTR $T149741[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1316
	push	0
	push	87					; 00000057H
	push	OFFSET ?ReqChangeCash@HkIServerImpl@@YGXHI@Z ; HkIServerImpl::ReqChangeCash
	lea	ecx, DWORD PTR $T149742[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1317
	push	0
	push	99					; 00000063H
	push	OFFSET ?ReqSetCash@HkIServerImpl@@YGXHI@Z ; HkIServerImpl::ReqSetCash
	lea	ecx, DWORD PTR $T149743[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1318
	push	0
	push	91					; 0000005bH
	push	OFFSET ?ReqEquipment@HkIServerImpl@@YGXABVEquipDescList@@I@Z ; HkIServerImpl::ReqEquipment
	lea	ecx, DWORD PTR $T149744[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1319
	push	0
	push	93					; 0000005dH
	push	OFFSET ?ReqHullStatus@HkIServerImpl@@YGXMI@Z ; HkIServerImpl::ReqHullStatus
	lea	ecx, DWORD PTR $T149745[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1320
	push	0
	push	101					; 00000065H
	push	OFFSET ?ReqShipArch@HkIServerImpl@@YGXII@Z ; HkIServerImpl::ReqShipArch
	lea	ecx, DWORD PTR $T149746[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1321
	push	0
	push	143					; 0000008fH
	push	OFFSET ?TractorObjects@HkIServerImpl@@YGXIABUXTractorObjects@@@Z ; HkIServerImpl::TractorObjects
	lea	ecx, DWORD PTR $T149747[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1322
	push	0
	push	76					; 0000004cH
	push	OFFSET ?JettisonCargo@HkIServerImpl@@YGXIABUXJettisonCargo@@@Z ; HkIServerImpl::JettisonCargo
	lea	ecx, DWORD PTR $T149748[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1323
	push	0
	push	129					; 00000081H
	push	OFFSET ?SetTarget@HkIServerImpl@@YGXIABUXSetTarget@@@Z ; HkIServerImpl::SetTarget
	lea	ecx, DWORD PTR $T149749[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1324
	push	0
	push	37					; 00000025H
	push	OFFSET ?CharacterInfoReq@HkIServerImpl@@YGXI_N@Z ; HkIServerImpl::CharacterInfoReq
	lea	ecx, DWORD PTR $T149750[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1325
	push	0
	push	1
	push	OFFSET ?SubmitChat@HkIServerImpl@@YGXUCHAT_ID@@KPBX0H@Z ; HkIServerImpl::SubmitChat
	lea	ecx, DWORD PTR $T149751[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1326
	push	0
	push	9
	push	OFFSET ?SPObjUpdate@HkIServerImpl@@YGXABUSSPObjUpdateInfo@@I@Z ; HkIServerImpl::SPObjUpdate
	lea	ecx, DWORD PTR $T149752[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1327
	push	0
	push	47					; 0000002fH
	push	OFFSET ?GoTradelane@HkIServerImpl@@YGXIABUXGoTradelane@@@Z ; HkIServerImpl::GoTradelane
	lea	ecx, DWORD PTR $T149753[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1328
	push	0
	push	49					; 00000031H
	push	OFFSET ?StopTradelane@HkIServerImpl@@YGXIIII@Z ; HkIServerImpl::StopTradelane
	lea	ecx, DWORD PTR $T149754[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1329
	push	0
	push	59					; 0000003bH
	push	OFFSET ?CreateNewCharacter@HkIServerImpl@@YGXABUSCreateCharacterInfo@@I@Z ; HkIServerImpl::CreateNewCharacter
	lea	ecx, DWORD PTR $T149755[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1330
	push	0
	push	176					; 000000b0H
	push	OFFSET ?Dock_Call@HkIEngine@@YAHABI0HW4DOCK_HOST_RESPONSE@@@Z ; HkIEngine::Dock_Call
	lea	ecx, DWORD PTR $T149756[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1331
	push	0
	push	148					; 00000094H
	push	OFFSET ?HkCb_SendChat@@YGXIIIPAX@Z	; HkCb_SendChat
	lea	ecx, DWORD PTR $T149757[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1332
	push	0
	push	184					; 000000b8H
	push	OFFSET ?UserCmd_Process@@YA_NIABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; UserCmd_Process
	lea	ecx, DWORD PTR $T149758[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1334
	push	0
	push	186					; 000000baH
	push	OFFSET ?ExecuteCommandString_Callback@@YA_NPAVCCmds@@ABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@@Z ; ExecuteCommandString_Callback
	lea	ecx, DWORD PTR $T149759[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1335
	push	0
	push	185					; 000000b9H
	push	OFFSET ?CmdHelp_Callback@@YAXPAVCCmds@@@Z ; CmdHelp_Callback
	lea	ecx, DWORD PTR $T149760[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1336
	push	0
	push	149					; 00000095H
	push	OFFSET ?HkCB_MissileTorpHit@@YGHPAD0PAUDamageList@@@Z ; HkCB_MissileTorpHit
	lea	ecx, DWORD PTR $T149761[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1337
	push	0
	push	103					; 00000067H
	push	OFFSET ?RequestBestPath@@YGXIPAKH@Z	; RequestBestPath
	lea	ecx, DWORD PTR $T149762[ebp]
	call	??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
	push	eax
	mov	ecx, DWORD PTR _p_PI$[ebp]
	add	ecx, 64					; 00000040H
	call	?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
; Line 1338
	mov	eax, DWORD PTR _p_PI$[ebp]
; Line 1339
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ$0:
	mov	eax, DWORD PTR $T149720[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-500]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get_PluginInfo@@YAPAUPLUGIN_INFO@@XZ ENDP		; Get_PluginInfo
; Function compile flags: /Odtp
;	COMDAT ??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pFunc$ = 8						; size = 4
_eCallbackID$ = 12					; size = 4
_iPriority$ = 16					; size = 4
??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z PROC ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO, COMDAT
; _this$ = ecx
; File g:\max\bastelstube\github\fl-mod-flhook\plugins\flhookplugin_sdk\headers\plugin.h
; Line 213
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 215
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pFunc$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 216
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _eCallbackID$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 217
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iPriority$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0PLUGIN_HOOKINFO@@QAE@PAP6GHXZW4PLUGIN_CALLBACKS@@H@Z ENDP ; PLUGIN_HOOKINFO::PLUGIN_HOOKINFO
_TEXT	ENDS
PUBLIC	??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
PUBLIC	??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0PLUGIN_INFO@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PLUGIN_INFO@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0PLUGIN_INFO@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0PLUGIN_INFO@@QAE@XZ$2
__ehfuncinfo$??0PLUGIN_INFO@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0PLUGIN_INFO@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0PLUGIN_INFO@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0PLUGIN_INFO@@QAE@XZ PROC				; PLUGIN_INFO::PLUGIN_INFO, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PLUGIN_INFO@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PLUGIN_INFO@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$??0PLUGIN_INFO@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__unwindfunclet$??0PLUGIN_INFO@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
__ehhandler$??0PLUGIN_INFO@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PLUGIN_INFO@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PLUGIN_INFO@@QAE@XZ ENDP				; PLUGIN_INFO::PLUGIN_INFO
PUBLIC	??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ; std::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
PUBLIC	?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Buynode
PUBLIC	??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
PUBLIC	??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@XZ	; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T149782 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T149782[ebp], esp
	call	??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@XZ ; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Buynode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 437
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
__ehhandler$??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
PUBLIC	?_Tidy@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXXZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Tidy
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXXZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Tidy
; Line 522
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
__ehhandler$??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
PUBLIC	?_Insert@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXV?$_Const_iterator@$00@12@ABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Insert
PUBLIC	?end@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::end
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T149802 = -16						; size = 8
$T149801 = -8						; size = 8
__Val$ = 8						; size = 4
?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back, COMDAT
; _this$ = ecx
; Line 669
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	DWORD PTR _this$[ebp], ecx
; Line 670
	lea	eax, DWORD PTR $T149802[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T149801[ebp], ecx
	mov	DWORD PTR $T149801[ebp+4], edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T149801[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T149801[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXV?$_Const_iterator@$00@12@ABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Insert
; Line 671
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXABUPLUGIN_HOOKINFO@@@Z ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::push_back
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator*
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::insert
PUBLIC	??0?$pair@$$CBI_K@std@@QAE@ABIAB_K@Z		; std::pair<unsigned int const ,unsigned __int64>::pair<unsigned int const ,unsigned __int64>
PUBLIC	??R?$less@I@std@@QBE_NABI0@Z			; std::less<unsigned int>::operator()
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::lower_bound
; Function compile flags: /Odtp
;	COMDAT ??A?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAEAA_KABI@Z
_TEXT	SEGMENT
_this$ = -60						; size = 4
$T149809 = -56						; size = 8
$T149808 = -48						; size = 8
$T149807 = -40						; size = 8
$T149806 = -32						; size = 16
$T149805 = -16						; size = 8
__Where$ = -8						; size = 8
__Keyval$ = 8						; size = 4
??A?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAEAA_KABI@Z PROC ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 169
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lower_bound@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::lower_bound
; Line 171
	lea	edx, DWORD PTR $T149805[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@operator
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@operator
$LN1@operator:
; Line 173
	mov	DWORD PTR $T149807[ebp], 0
	mov	DWORD PTR $T149807[ebp+4], 0
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR $T149808[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR $T149808[ebp+4], ecx
	lea	edx, DWORD PTR $T149807[ebp]
	push	edx
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T149806[ebp]
	call	??0?$pair@$$CBI_K@std@@QAE@ABIAB_K@Z	; std::pair<unsigned int const ,unsigned __int64>::pair<unsigned int const ,unsigned __int64>
	push	eax
	mov	ecx, DWORD PTR $T149808[ebp+4]
	push	ecx
	mov	edx, DWORD PTR $T149808[ebp]
	push	edx
	lea	eax, DWORD PTR $T149809[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::insert
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Where$[ebp], ecx
	mov	DWORD PTR __Where$[ebp+4], edx
$LN2@operator:
; Line 174
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??Diterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator*
	add	eax, 8
; Line 175
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAEAA_KABI@Z ENDP ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::operator[]
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::iterator
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost
; Function compile flags: /Odtp
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 555
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 556
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::iterator
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 557
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::begin
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end, COMDAT
; _this$ = ecx
; Line 565
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 566
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::iterator
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 567
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBI_K@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Citerator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBI_K@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 470
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Diterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator*
; Line 471
	mov	esp, ebp
	pop	ebp
	ret	0
??Citerator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU?$pair@$$CBI_K@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++
; Function compile flags: /Odtp
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx
; Line 474
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 475
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++
; Line 476
	mov	eax, DWORD PTR _this$[ebp]
; Line 477
	mov	esp, ebp
	pop	ebp
	ret	0
??Eiterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx
; Line 315
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 316
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1
; Line 317
	mov	esp, ebp
	pop	ebp
	ret	4
??9const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ; std::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ PROC ; std::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
PUBLIC	??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ; std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ PROC ; std::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ENDP ; std::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >::~_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ PROC ; std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >::~_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >::~_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >
__ehhandler$??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ ENDP ; std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::~_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
; Function compile flags: /Odtp
;	COMDAT ??R?$less@I@std@@QBE_NABI0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@I@std@@QBE_NABI0@Z PROC			; std::less<unsigned int>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\functional
; Line 142
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 143
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	sbb	eax, eax
	neg	eax
; Line 144
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$less@I@std@@QBE_NABI0@Z ENDP			; std::less<unsigned int>::operator()
_TEXT	ENDS
PUBLIC	??0?$_Iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PBV12@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Iterator<1>::_Iterator<1>
; Function compile flags: /Odtp
;	COMDAT ?end@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 543
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 544
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PBV12@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Iterator<1>::_Iterator<1>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 545
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE?AV?$_Iterator@$00@12@XZ ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::end
_TEXT	ENDS
PUBLIC	?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
PUBLIC	?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Incsize
PUBLIC	?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Buynode
PUBLIC	?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode
PUBLIC	?_Mynode@?$_Const_iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QBEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@3@XZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Const_iterator<1>::_Mynode
; Function compile flags: /Odtp
;	COMDAT ?_Insert@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXV?$_Const_iterator@$00@12@ABUPLUGIN_HOOKINFO@@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__Newnode$ = -4						; size = 4
__Where$ = 8						; size = 8
__Val$ = 16						; size = 4
?_Insert@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXV?$_Const_iterator@$00@12@ABUPLUGIN_HOOKINFO@@@Z PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Insert, COMDAT
; _this$ = ecx
; Line 710
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 717
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_Const_iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QBEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@3@XZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Const_iterator<1>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 718
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax
; Line 719
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Incsize
; Line 720
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 721
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	call	?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 722
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Insert@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXV?$_Const_iterator@$00@12@ABUPLUGIN_HOOKINFO@@@Z ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Insert
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::deallocate
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::destroy
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::construct
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::allocate
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ$0
__unwindtable$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Buynode, COMDAT
; _this$ = ecx
; Line 1171
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1172
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1173
	mov	DWORD PTR __Linkcnt$[ebp], 0
; Line 1175
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1176
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::construct
; Line 1177
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1178
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::construct
	jmp	SHORT $LN5@Buynode
__catch$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ$0:
; Line 1180
	cmp	DWORD PTR __Linkcnt$[ebp], 0
	jle	SHORT $LN1@Buynode
; Line 1181
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::destroy
$LN1@Buynode:
; Line 1182
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::deallocate
; Line 1183
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1184
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ$1
	ret	0
$LN5@Buynode:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ$1:
; Line 1185
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode:
; Line 1186
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@XZ ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Buynode
PUBLIC	?clear@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXXZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::clear
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXXZ PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1213
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXXZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::clear
; Line 1214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::destroy
; Line 1215
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::destroy
; Line 1216
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::deallocate
; Line 1217
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 1218
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXXZ ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Tidy
_TEXT	ENDS
PUBLIC	??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
PUBLIC	??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@ABV01@@Z ; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z$0
__ehfuncinfo$??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T149873 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z PROC ; std::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >, COMDAT
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T149873[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@ABV01@@Z ; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@ABV01@@Z ; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>
; Line 86
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_val@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ENDP ; std::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_val<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
PUBLIC	??1_Container_base_aux@std@@QAE@XZ		; std::_Container_base_aux::~_Container_base_aux
PUBLIC	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ$0
__ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >::~_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 439
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
; Line 440
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >::~_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >
; Function compile flags: /Odtp
;	COMDAT ??1_Container_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Container_base_aux@std@@QAE@XZ PROC			; std::_Container_base_aux::~_Container_base_aux, COMDAT
; _this$ = ecx
; Line 402
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 404
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base_aux@std@@QAE@XZ ENDP			; std::_Container_base_aux::~_Container_base_aux
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@XZ PROC	; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@XZ ENDP	; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBI_K@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Myval
; Function compile flags: /Odtp
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 161
	push	ebp
	mov	ebp, esp
; Line 162
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Myval@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBI_K@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Myval
	add	esp, 4
	push	eax
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
; Line 163
	pop	ebp
	ret	0
?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::insert
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator--
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::size
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::const_iterator
; Function compile flags: /Odtp
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@ABU?$pair@$$CBI_K@2@@Z
_TEXT	SEGMENT
_this$ = -72						; size = 4
$T149904 = -68						; size = 12
$T149903 = -56						; size = 8
$T149902 = -48						; size = 8
$T149901 = -40						; size = 8
$T149900 = -32						; size = 8
$T149899 = -24						; size = 8
$T149898 = -16						; size = 8
__Next$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
__Val$ = 20						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@ABU?$pair@$$CBI_K@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::insert, COMDAT
; _this$ = ecx
; Line 664
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	mov	DWORD PTR _this$[ebp], ecx
; Line 671
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??0const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::const_iterator
; Line 673
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::size
	test	eax, eax
	jne	SHORT $LN32@insert
; Line 674
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
	jmp	$LN31@insert
$LN32@insert:
; Line 675
	xor	ecx, ecx
	je	$LN30@insert
; Line 677
	lea	edx, DWORD PTR $T149898[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN29@insert
; Line 679
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN28@insert
; Line 681
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN28@insert:
; Line 682
	jmp	$LN27@insert
$LN29@insert:
; Line 683
	lea	edx, DWORD PTR $T149899[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN26@insert
; Line 685
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN25@insert
; Line 687
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	edx, DWORD PTR [eax]
	push	edx
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN25@insert:
; Line 689
	jmp	$LN27@insert
$LN26@insert:
; Line 691
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	$LN23@insert
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR __Next$[ebp+4], ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator--
	mov	ecx, eax
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN23@insert
; Line 694
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN22@insert
; Line 695
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
; Line 696
	jmp	SHORT $LN21@insert
$LN22@insert:
; Line 697
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN21@insert:
; Line 699
	jmp	$LN27@insert
$LN23@insert:
; Line 702
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	$LN27@insert
	mov	eax, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR __Next$[ebp+4], ecx
	lea	edx, DWORD PTR $T149900[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++
	mov	ecx, eax
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN18@insert
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN27@insert
$LN18@insert:
; Line 705
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN17@insert
; Line 706
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	push	0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
; Line 707
	jmp	SHORT $LN27@insert
$LN17@insert:
; Line 708
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN27@insert:
; Line 711
	jmp	$LN31@insert
$LN30@insert:
; Line 713
	lea	eax, DWORD PTR $T149901[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@insert
; Line 715
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@insert
; Line 717
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN13@insert:
; Line 718
	jmp	$LN31@insert
$LN14@insert:
; Line 719
	lea	eax, DWORD PTR $T149902[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@insert
; Line 721
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@insert
; Line 723
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	eax, DWORD PTR [eax]
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN10@insert:
; Line 725
	jmp	$LN31@insert
$LN11@insert:
; Line 727
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	je	$LN8@insert
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR __Next$[ebp+4], edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator--
	mov	ecx, eax
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@insert
; Line 730
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN7@insert
; Line 731
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	push	0
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
; Line 732
	jmp	SHORT $LN6@insert
$LN7@insert:
; Line 733
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN33@insert
$LN6@insert:
; Line 735
	jmp	$LN31@insert
$LN8@insert:
; Line 738
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	je	$LN31@insert
	mov	ecx, DWORD PTR __Where$[ebp]
	mov	DWORD PTR __Next$[ebp], ecx
	mov	edx, DWORD PTR __Where$[ebp+4]
	mov	DWORD PTR __Next$[ebp+4], edx
	lea	eax, DWORD PTR $T149903[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Next$[ebp]
	call	??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++
	mov	ecx, eax
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@insert
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN31@insert
$LN3@insert:
; Line 741
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN2@insert
; Line 742
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN33@insert
; Line 743
	jmp	SHORT $LN31@insert
$LN2@insert:
; Line 744
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Next$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	push	1
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN33@insert
$LN31@insert:
; Line 748
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T149904[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::insert
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN33@insert:
; Line 749
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@ABU?$pair@$$CBI_K@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::insert
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lbound
; Function compile flags: /Odtp
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::lower_bound, COMDAT
; _this$ = ecx
; Line 1003
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1004
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lbound@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABI@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lbound
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::iterator
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1005
	mov	esp, ebp
	pop	ebp
	ret	8
?lower_bound@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
; Function compile flags: /Odtp
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost, COMDAT
; _this$ = ecx
; Line 1280
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1281
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
; Line 1282
	mov	esp, ebp
	pop	ebp
	ret	0
?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::const_iterator
; Function compile flags: /Odtp
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx
; Line 451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::const_iterator
; Line 452
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator*
; Function compile flags: /Odtp
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBI_K@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Diterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBI_K@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx
; Line 464
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 465
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBI_K@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator*
; Line 466
	mov	esp, ebp
	pop	ebp
	ret	0
??Diterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBI_K@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Inc
; Function compile flags: /Odtp
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx
; Line 273
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 274
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Inc
; Line 275
	mov	eax, DWORD PTR _this$[ebp]
; Line 276
	mov	esp, ebp
	pop	ebp
	ret	0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
PUBLIC	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ	; std::_Iterator_base_aux::_Has_container
EXTRN	__imp___invalid_parameter_noinfo:PROC
; Function compile flags: /Odtp
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 308
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@operator@2
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@operator@2
$LN4@operator@2:
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@2:
	xor	eax, eax
	jne	SHORT $LN2@operator@2
; Line 311
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	ecx, ecx
	cmp	eax, DWORD PTR [edx+4]
	sete	cl
	mov	al, cl
; Line 312
	mov	esp, ebp
	pop	ebp
	ret	4
??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z PROC ; std::_Iterator_base_aux::_Same_container, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 462
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Other$[ebp]
	mov	edx, DWORD PTR [eax]
	xor	eax, eax
	cmp	edx, DWORD PTR [ecx]
	sete	al
; Line 464
	mov	esp, ebp
	pop	ebp
	ret	4
?_Same_container@_Iterator_base_aux@std@@QBE_NABV12@@Z ENDP ; std::_Iterator_base_aux::_Same_container
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Has_container@_Iterator_base_aux@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Has_container@_Iterator_base_aux@std@@QBE_NXZ PROC	; std::_Iterator_base_aux::_Has_container, COMDAT
; _this$ = ecx
; Line 467
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax], 0
	setne	cl
	mov	al, cl
; Line 469
	mov	esp, ebp
	pop	ebp
	ret	0
?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ENDP	; std::_Iterator_base_aux::_Has_container
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 409
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 410
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 411
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBI_K@std@@QAE@ABIAB_K@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBI_K@std@@QAE@ABIAB_K@Z PROC		; std::pair<unsigned int const ,unsigned __int64>::pair<unsigned int const ,unsigned __int64>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val1$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val2$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$pair@$$CBI_K@std@@QAE@ABIAB_K@Z ENDP		; std::pair<unsigned int const ,unsigned __int64>::pair<unsigned int const ,unsigned __int64>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z PROC ; std::allocator<std::_Aux_cont>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ENDP ; std::allocator<std::_Aux_cont>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 114
	push	ebp
	mov	ebp, esp
; Line 115
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 116
	pop	ebp
	ret	0
?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode, COMDAT
; Line 119
	push	ebp
	mov	ebp, esp
; Line 120
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 121
	pop	ebp
	ret	0
?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::destroy
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXXZ PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::clear, COMDAT
; _this$ = ecx
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 832
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax], ecx
; Line 834
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax], edx
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 837
	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+20]
	je	SHORT $LN4@clear
; Line 839
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], edx
; Line 840
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?destroy@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::destroy
; Line 841
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::deallocate
; Line 842
	jmp	SHORT $LN2@clear
$LN4@clear:
; Line 843
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAEXXZ ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::clear
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UPLUGIN_HOOKINFO@@@std@@QAEXPAUPLUGIN_HOOKINFO@@ABU3@@Z ; std::allocator<PLUGIN_HOOKINFO>::construct
PUBLIC	?_Myval@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAUPLUGIN_HOOKINFO@@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Myval
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z$0
__unwindtable$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z$2
__ehfuncinfo$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
__Val$ = 16						; size = 4
?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Buynode, COMDAT
; _this$ = ecx
; Line 1190
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1191
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1192
	mov	DWORD PTR __Linkcnt$[ebp], 0
; Line 1194
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1195
	lea	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::construct
; Line 1196
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1197
	lea	eax, DWORD PTR __Prev$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::construct
; Line 1198
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1199
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAUPLUGIN_HOOKINFO@@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Myval
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?construct@?$allocator@UPLUGIN_HOOKINFO@@@std@@QAEXPAUPLUGIN_HOOKINFO@@ABU3@@Z ; std::allocator<PLUGIN_HOOKINFO>::construct
	jmp	SHORT $LN6@Buynode@2
__catch$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z$0:
; Line 1201
	cmp	DWORD PTR __Linkcnt$[ebp], 1
	jle	SHORT $LN2@Buynode@2
; Line 1202
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::destroy
$LN2@Buynode@2:
; Line 1203
	cmp	DWORD PTR __Linkcnt$[ebp], 0
	jle	SHORT $LN1@Buynode@2
; Line 1204
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::destroy
$LN1@Buynode@2:
; Line 1205
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::deallocate
; Line 1206
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1207
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z$1
	ret	0
$LN6@Buynode@2:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z$1:
; Line 1208
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN5@Buynode@2:
; Line 1209
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PAU342@0ABUPLUGIN_HOOKINFO@@@Z ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Buynode
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QBEIXZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::max_size
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z$0
__ehfuncinfo$?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -84						; size = 4
$T149951 = -80						; size = 28
$T149950 = -52						; size = 40
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Incsize, COMDAT
; _this$ = ecx
; Line 1239
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1240
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QBEIXZ ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::max_size
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+24]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Incsize
; Line 1241
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T149951[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR $T149951[ebp]
	push	edx
	lea	ecx, DWORD PTR $T149950[ebp]
	call	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	eax, DWORD PTR $T149950[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T149951[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN1@Incsize:
; Line 1242
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], edx
$LN3@Incsize:
; Line 1243
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z$0:
	lea	ecx, DWORD PTR $T149951[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-76]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Incsize@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAEXI@Z ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Incsize
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
PUBLIC	??_R4length_error@std@@6B@			; std::length_error::`RTTI Complete Object Locator'
PUBLIC	??_R3length_error@std@@8			; std::length_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2length_error@std@@8			; std::length_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@length_error@std@@8		; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
EXTRN	??_Elength_error@std@@UAEPAXI@Z:PROC		; std::length_error::`vector deleting destructor'
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD FLAT:??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD FLAT:??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@length_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@length_error@std@@8 DD FLAT:??_R0?AVlength_error@std@@@8 ; std::length_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2length_error@std@@8
rdata$r	SEGMENT
??_R2length_error@std@@8 DD FLAT:??_R1A@?0A@EA@length_error@std@@8 ; std::length_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3length_error@std@@8
rdata$r	SEGMENT
??_R3length_error@std@@8 DD 00H				; std::length_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4length_error@std@@6B@
rdata$r	SEGMENT
??_R4length_error@std@@6B@ DD 00H			; std::length_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	FLAT:??_R3length_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_R4length_error@std@@6B@ ; std::length_error::`vftable'
	DD	FLAT:??_Elength_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::length_error::length_error, COMDAT
; _this$ = ecx
; Line 105
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7length_error@std@@6B@
; Line 106
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
EXTRN	__imp_??1exception@std@@UAE@XZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0exception@std@@QAE@XZ:PROC
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 00H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	FLAT:??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DD	FLAT:??_Elogic_error@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1
__ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::logic_error::logic_error, COMDAT
; _this$ = ecx
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	ecx, DWORD PTR __Message$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 27
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__unwindfunclet$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1logic_error@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1logic_error@std@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1logic_error@std@@UAE@XZ$1
__ehfuncinfo$??1logic_error@std@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1logic_error@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1logic_error@std@@UAE@XZ PROC				; std::logic_error::~logic_error, COMDAT
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1logic_error@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7logic_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 31
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1logic_error@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__unwindfunclet$??1logic_error@std@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??1logic_error@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1logic_error@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Odtp
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?what@logic_error@std@@UBEPBDXZ PROC			; std::logic_error::what, COMDAT
; _this$ = ecx
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 35
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
; Line 36
	mov	esp, ebp
	pop	ebp
	ret	0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1length_error@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1length_error@std@@UAE@XZ$0
__ehfuncinfo$??1length_error@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1length_error@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1length_error@std@@UAE@XZ PROC			; std::length_error::~length_error, COMDAT
; _this$ = ecx
; Line 109
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1length_error@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7length_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 110
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1length_error@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??1length_error@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1length_error@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
; Function compile flags: /Odtp
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC			; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1length_error@std@@UAE@XZ		; std::length_error::~length_error
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??0exception@std@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0logic_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0logic_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC			; std::logic_error::logic_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0logic_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7logic_error@std@@6B@
	mov	edx, DWORD PTR ___that$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__unwindfunclet$??0logic_error@std@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0logic_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
PUBLIC	??$?0UPLUGIN_HOOKINFO@@@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *><PLUGIN_HOOKINFO>
PUBLIC	??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z$0
__ehfuncinfo$??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150015 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z PROC ; std::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150015[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@ABV01@@Z ; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0UPLUGIN_HOOKINFO@@@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *><PLUGIN_HOOKINFO>
; Line 68
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_ptr@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ENDP ; std::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_ptr<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@ABV01@@Z PROC ; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::allocate, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *,std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::construct, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *,std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 156
	push	ebp
	mov	ebp, esp
; Line 157
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 33					; 00000021H
; Line 158
	pop	ebp
	ret	0
?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left, COMDAT
; Line 166
	push	ebp
	mov	ebp, esp
; Line 167
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 168
	pop	ebp
	ret	0
?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right, COMDAT
; Line 176
	push	ebp
	mov	ebp, esp
; Line 177
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 178
	pop	ebp
	ret	0
?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBI_K@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBI_K@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Myval, COMDAT
; Line 181
	push	ebp
	mov	ebp, esp
; Line 182
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 16					; 00000010H
; Line 183
	pop	ebp
	ret	0
?_Myval@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBI_K@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Myval
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::size, COMDAT
; _this$ = ecx
; Line 600
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 601
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
; Line 602
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::size
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator--
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
; Function compile flags: /Odtp
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBI_K@2@@Z
_TEXT	SEGMENT
tv90 = -76						; size = 4
_this$ = -72						; size = 4
$T150054 = -65						; size = 1
$T150053 = -64						; size = 8
$T150052 = -53						; size = 1
$T150051 = -52						; size = 8
$T150050 = -41						; size = 1
$T150049 = -40						; size = 8
$T150048 = -32						; size = 8
$T150047 = -21						; size = 1
__Where$146742 = -20					; size = 8
__Trynode$ = -12					; size = 4
__Wherenode$ = -8					; size = 4
__Addleft$ = -1						; size = 1
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBI_K@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::insert, COMDAT
; _this$ = ecx
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 631
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Trynode$[ebp], eax
; Line 632
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR __Wherenode$[ebp], edx
; Line 633
	mov	BYTE PTR __Addleft$[ebp], 1
$LN10@insert@2:
; Line 634
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN9@insert@2
; Line 636
	mov	edx, DWORD PTR __Trynode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], edx
; Line 637
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	mov	BYTE PTR __Addleft$[ebp], al
; Line 639
	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN13@insert@2
	mov	eax, DWORD PTR __Trynode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv90[ebp], ecx
	jmp	SHORT $LN14@insert@2
$LN13@insert@2:
	mov	edx, DWORD PTR __Trynode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv90[ebp], eax
$LN14@insert@2:
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR __Trynode$[ebp], ecx
; Line 640
	jmp	SHORT $LN10@insert@2
$LN9@insert@2:
; Line 642
	xor	edx, edx
	je	SHORT $LN8@insert@2
; Line 643
	mov	BYTE PTR $T150047[ebp], 1
	lea	eax, DWORD PTR $T150047[ebp]
	push	eax
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	movzx	eax, BYTE PTR __Addleft$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T150048[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@insert@2
; Line 644
	jmp	$LN11@insert@2
$LN8@insert@2:
; Line 646
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$146742[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::iterator
; Line 647
	movzx	ecx, BYTE PTR __Addleft$[ebp]
	test	ecx, ecx
	jne	SHORT $LN6@insert@2
	jmp	SHORT $LN5@insert@2
$LN6@insert@2:
; Line 649
	lea	edx, DWORD PTR $T150049[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __Where$146742[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@insert@2
; Line 650
	mov	BYTE PTR $T150050[ebp], 1
	lea	ecx, DWORD PTR $T150050[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR $T150051[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN11@insert@2
; Line 651
	jmp	SHORT $LN5@insert@2
$LN4@insert@2:
; Line 652
	lea	ecx, DWORD PTR __Where$146742[ebp]
	call	??Fiterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator--
$LN5@insert@2:
; Line 654
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Where$146742[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@insert@2
; Line 656
	mov	BYTE PTR $T150052[ebp], 1
	lea	ecx, DWORD PTR $T150052[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR __Addleft$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T150053[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN11@insert@2
; Line 657
	jmp	SHORT $LN11@insert@2
$LN2@insert@2:
; Line 658
	mov	BYTE PTR $T150054[ebp], 0
	lea	eax, DWORD PTR $T150054[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$146742[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN11@insert@2:
; Line 660
	mov	esp, ebp
	pop	ebp
	ret	8
?insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBI_K@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::insert
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rrotate
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lrotate
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Buynode
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::max_size
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z$0
__ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z
_TEXT	SEGMENT
_this$ = -92						; size = 4
$T150058 = -88						; size = 28
$T150057 = -60						; size = 40
__Pnode$146790 = -20					; size = 4
__Newnode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert, COMDAT
; _this$ = ecx
; Line 1187
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1188
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::max_size
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+28]
	ja	SHORT $LN17@Insert
; Line 1189
	push	OFFSET ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
	lea	ecx, DWORD PTR $T150058[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR $T150058[ebp]
	push	edx
	lea	ecx, DWORD PTR $T150057[ebp]
	call	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
	push	OFFSET __TI3?AVlength_error@std@@
	lea	eax, DWORD PTR $T150057[ebp]
	push	eax
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T150058[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN17@Insert:
; Line 1191
	push	0
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Buynode
	mov	DWORD PTR __Newnode$[ebp], eax
; Line 1193
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], edx
; Line 1194
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [ecx+24]
	jne	SHORT $LN16@Insert
; Line 1196
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1197
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN15@Insert
$LN16@Insert:
; Line 1199
	movzx	edx, BYTE PTR __Addleft$[ebp]
	test	edx, edx
	je	SHORT $LN14@Insert
; Line 1201
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1202
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN13@Insert
; Line 1203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN13@Insert:
; Line 1205
	jmp	SHORT $LN15@Insert
$LN14@Insert:
; Line 1207
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN15@Insert
; Line 1209
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	ecx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN15@Insert:
; Line 1212
	mov	edx, DWORD PTR __Newnode$[ebp]
	mov	DWORD PTR __Pnode$146790[ebp], edx
$LN10@Insert:
	mov	eax, DWORD PTR __Pnode$146790[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	$LN9@Insert
; Line 1213
	mov	eax, DWORD PTR __Pnode$146790[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN8@Insert
; Line 1215
	mov	edx, DWORD PTR __Pnode$146790[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], edx
; Line 1216
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@Insert
; Line 1218
	mov	edx, DWORD PTR __Pnode$146790[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1219
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1220
	mov	edx, DWORD PTR __Pnode$146790[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1221
	mov	edx, DWORD PTR __Pnode$146790[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$146790[ebp], ecx
; Line 1223
	jmp	$LN6@Insert
$LN7@Insert:
; Line 1225
	mov	edx, DWORD PTR __Pnode$146790[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN5@Insert
; Line 1227
	mov	edx, DWORD PTR __Pnode$146790[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$146790[ebp], eax
; Line 1228
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lrotate
$LN5@Insert:
; Line 1230
	mov	edx, DWORD PTR __Pnode$146790[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1231
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1232
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rrotate
$LN6@Insert:
; Line 1235
	jmp	$LN4@Insert
$LN8@Insert:
; Line 1237
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Wherenode$[ebp], ecx
; Line 1238
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN3@Insert
; Line 1240
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1241
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1242
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1243
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$146790[ebp], eax
; Line 1245
	jmp	$LN4@Insert
$LN3@Insert:
; Line 1247
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@Insert
; Line 1249
	mov	edx, DWORD PTR __Pnode$146790[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$146790[ebp], eax
; Line 1250
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rrotate
$LN1@Insert:
; Line 1252
	mov	edx, DWORD PTR __Pnode$146790[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1253
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1254
	mov	ecx, DWORD PTR __Pnode$146790[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lrotate
$LN4@Insert:
; Line 1256
	jmp	$LN10@Insert
$LN9@Insert:
; Line 1258
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1259
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::iterator
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN19@Insert:
; Line 1260
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z$0:
	lea	ecx, DWORD PTR $T150058[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-88]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBI_K@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Insert
; Function compile flags: /Odtp
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent, COMDAT
; Line 171
	push	ebp
	mov	ebp, esp
; Line 172
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 173
	pop	ebp
	ret	0
?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABI@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnode$ = -8						; size = 4
__Wherenode$ = -4					; size = 4
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABI@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lbound, COMDAT
; _this$ = ecx
; Line 1263
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1264
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1265
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR __Wherenode$[ebp], edx
$LN4@Lbound:
; Line 1267
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@Lbound
; Line 1268
	mov	edx, DWORD PTR __Keyval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Key@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAABIPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Key
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??R?$less@I@std@@QBE_NABI0@Z		; std::less<unsigned int>::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Lbound
; Line 1269
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1270
	jmp	SHORT $LN1@Lbound
$LN2@Lbound:
; Line 1272
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Wherenode$[ebp], ecx
; Line 1273
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN1@Lbound:
; Line 1274
	jmp	SHORT $LN4@Lbound
$LN3@Lbound:
; Line 1276
	mov	eax, DWORD PTR __Wherenode$[ebp]
; Line 1277
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lbound@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABI@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lbound
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost, COMDAT
; _this$ = ecx
; Line 1319
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1320
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
; Line 1321
	mov	esp, ebp
	pop	ebp
	ret	0
?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z PROC ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	mov	eax, DWORD PTR __Val$[ebp]
; Line 66
	pop	ebp
	ret	0
?_Kfn@?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@SAABIABU?$pair@$$CBI_K@2@@Z ENDP ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$_Bidit@U?$pair@$$CBI_K@std@@HPBU12@ABU12@@std@@QAE@XZ ; std::_Bidit<std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &>::_Bidit<std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &>
; Function compile flags: /Odtp
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 217
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@U?$pair@$$CBI_K@std@@HPBU12@ABU12@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 218
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Function compile flags: /Odtp
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx
; Line 234
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@U?$pair@$$CBI_K@std@@HPBU12@ABU12@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 235
	cmp	DWORD PTR __Plist$[ebp], 0
	jne	SHORT $LN2@const_iter
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@const_iter:
	xor	edx, edx
	jne	SHORT $LN2@const_iter
; Line 236
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Line 237
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::const_iterator
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pcont$ = 8						; size = 4
?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z PROC ; std::_Iterator_base_aux::_Set_container, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 452
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 453
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pcont$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 454
	mov	esp, ebp
	pop	ebp
	ret	4
?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ENDP ; std::_Iterator_base_aux::_Set_container
_TEXT	ENDS
PUBLIC	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
; Function compile flags: /Odtp
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBI_K@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBI_K@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 249
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 260
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN6@operator@3
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN6@operator@3:
	xor	ecx, ecx
	jne	SHORT $LN6@operator@3
; Line 261
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+24]
	jne	SHORT $LN2@operator@3
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@operator@3:
	xor	edx, edx
	jne	SHORT $LN2@operator@3
; Line 264
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Myval@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBI_K@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Myval
	add	esp, 4
; Line 265
	mov	esp, ebp
	pop	ebp
	ret	0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBI_K@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Aux_cont::_Getcont
; Function compile flags: /Odtp
;	COMDAT ?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ PROC ; std::_Iterator_base_aux::_Getmycont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 457
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 458
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Getmycont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ; std::_Aux_cont::_Getcont
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $LN4@Getmycont
$LN3@Getmycont:
	mov	DWORD PTR tv67[ebp], 0
$LN4@Getmycont:
	mov	eax, DWORD PTR tv67[ebp]
; Line 459
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getmycont@_Iterator_base_aux@std@@QBEPBV_Container_base_aux@2@XZ ENDP ; std::_Iterator_base_aux::_Getmycont
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ PROC ; std::_Aux_cont::_Getcont, COMDAT
; _this$ = ecx
; Line 368
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 369
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 370
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Aux_cont@std@@QBEPBV_Container_base_aux@2@XZ ENDP ; std::_Aux_cont::_Getcont
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Dec
; Function compile flags: /Odtp
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 286
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 287
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Dec
; Line 288
	mov	eax, DWORD PTR _this$[ebp]
; Line 289
	mov	esp, ebp
	pop	ebp
	ret	0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Min
; Function compile flags: /Odtp
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$146866 = -4					; size = 4
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx
; Line 377
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 388
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@Inc
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN8@Inc:
	xor	ecx, ecx
	jne	SHORT $LN8@Inc
; Line 389
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@Inc
; Line 391
	call	DWORD PTR __imp___invalid_parameter_noinfo
	jmp	$LN11@Inc
$LN6@Inc:
; Line 396
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN2@Inc
; Line 397
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Min@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Min
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 398
	jmp	SHORT $LN11@Inc
$LN2@Inc:
; Line 402
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$146866[ebp], ecx
	mov	edx, DWORD PTR __Pnode$146866[ebp]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN1@Inc
	mov	ecx, DWORD PTR __Pnode$146866[ebp]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN1@Inc
; Line 403
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$146866[ebp]
	mov	DWORD PTR [edx+4], eax
	jmp	SHORT $LN2@Inc
$LN1@Inc:
; Line 404
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$146866[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN11@Inc:
; Line 406
	mov	esp, ebp
	pop	ebp
	ret	0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??0?$_Const_iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PBV12@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PBV12@@Z PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Iterator<1>::_Iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 361
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Const_iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PBV12@@Z ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Const_iterator<1>::_Const_iterator<1>
; Line 362
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PBV12@@Z ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Iterator<1>::_Iterator<1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Mynode@?$_Const_iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QBEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@3@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_Const_iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QBEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@3@XZ PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Const_iterator<1>::_Mynode, COMDAT
; _this$ = ecx
; Line 307
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 309
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_Const_iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QBEPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@3@XZ ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Const_iterator<1>::_Mynode
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0length_error@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0length_error@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC			; std::length_error::length_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0length_error@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7length_error@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0length_error@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??0length_error@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0length_error@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBI_K@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Bidit@U?$pair@$$CBI_K@std@@HPBU12@ABU12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Bidit@U?$pair@$$CBI_K@std@@HPBU12@ABU12@@std@@QAE@XZ PROC ; std::_Bidit<std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &>::_Bidit<std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBI_K@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Bidit@U?$pair@$$CBI_K@std@@HPBU12@ABU12@@std@@QAE@XZ ENDP ; std::_Bidit<std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &>::_Bidit<std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &>
_TEXT	ENDS
PUBLIC	??0_Iterator_base_aux@std@@QAE@XZ		; std::_Iterator_base_aux::_Iterator_base_aux
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBI_K@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBI_K@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@U?$pair@$$CBI_K@2@HPBU32@ABU32@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,std::pair<unsigned int const ,unsigned __int64>,int,std::pair<unsigned int const ,unsigned __int64> const *,std::pair<unsigned int const ,unsigned __int64> const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0_Iterator_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base_aux@std@@QAE@XZ PROC			; std::_Iterator_base_aux::_Iterator_base_aux, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
; Line 448
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base_aux@std@@QAE@XZ ENDP			; std::_Iterator_base_aux::_Iterator_base_aux
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Myval@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAUPLUGIN_HOOKINFO@@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAUPLUGIN_HOOKINFO@@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 124
	push	ebp
	mov	ebp, esp
; Line 125
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 126
	pop	ebp
	ret	0
?_Myval@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@KAAAUPLUGIN_HOOKINFO@@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Myval
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UPLUGIN_HOOKINFO@@@std@@QBEIXZ ; std::allocator<PLUGIN_HOOKINFO>::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QBEIXZ PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::max_size, COMDAT
; _this$ = ecx
; Line 624
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 625
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?max_size@?$allocator@UPLUGIN_HOOKINFO@@@std@@QBEIXZ ; std::allocator<PLUGIN_HOOKINFO>::max_size
; Line 626
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QBEIXZ ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::max_size
_TEXT	ENDS
PUBLIC	??$?0UPLUGIN_HOOKINFO@@@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node><PLUGIN_HOOKINFO>
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z$0
__ehfuncinfo$??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150117 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z PROC ; std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150117[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@UPLUGIN_HOOKINFO@@@std@@QAE@ABV01@@Z ; std::allocator<PLUGIN_HOOKINFO>::allocator<PLUGIN_HOOKINFO>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0UPLUGIN_HOOKINFO@@@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node><PLUGIN_HOOKINFO>
; Line 48
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >::~_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >
__ehhandler$??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ENDP ; std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >
PUBLIC	??$_Construct@UPLUGIN_HOOKINFO@@U1@@std@@YAXPAUPLUGIN_HOOKINFO@@ABU1@@Z ; std::_Construct<PLUGIN_HOOKINFO,PLUGIN_HOOKINFO>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@UPLUGIN_HOOKINFO@@@std@@QAEXPAUPLUGIN_HOOKINFO@@ABU3@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UPLUGIN_HOOKINFO@@@std@@QAEXPAUPLUGIN_HOOKINFO@@ABU3@@Z PROC ; std::allocator<PLUGIN_HOOKINFO>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@UPLUGIN_HOOKINFO@@U1@@std@@YAXPAUPLUGIN_HOOKINFO@@ABU1@@Z ; std::_Construct<PLUGIN_HOOKINFO,PLUGIN_HOOKINFO>
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@UPLUGIN_HOOKINFO@@@std@@QAEXPAUPLUGIN_HOOKINFO@@ABU3@@Z ENDP ; std::allocator<PLUGIN_HOOKINFO>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z PROC ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@@Z ; std::_Destroy<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 151
	push	ebp
	mov	ebp, esp
; Line 152
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 32					; 00000020H
; Line 153
	pop	ebp
	ret	0
?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBI_K@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::max_size
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEIXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::max_size, COMDAT
; _this$ = ecx
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 606
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?max_size@?$allocator@U?$pair@$$CBI_K@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::max_size
; Line 607
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lrotate, COMDAT
; _this$ = ecx
; Line 1285
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1286
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1287
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1289
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Lrotate
; Line 1290
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Lrotate:
; Line 1291
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1293
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Lrotate
; Line 1294
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Lrotate
$LN4@Lrotate:
; Line 1295
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Lrotate
; Line 1296
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1297
	jmp	SHORT $LN3@Lrotate
$LN2@Lrotate:
; Line 1298
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Lrotate:
; Line 1300
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1301
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1302
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Lrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lrotate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Min, COMDAT
; Line 1312
	push	ebp
	mov	ebp, esp
$LN2@Min:
; Line 1313
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Min
; Line 1314
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Min
$LN1@Min:
; Line 1315
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 1316
	pop	ebp
	ret	0
?_Min@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Min
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root, COMDAT
; _this$ = ecx
; Line 1324
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1325
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
; Line 1326
	mov	esp, ebp
	pop	ebp
	ret	0
?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rrotate, COMDAT
; _this$ = ecx
; Line 1329
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR _this$[ebp], ecx
; Line 1330
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1331
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1333
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@Rrotate
; Line 1334
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@Rrotate:
; Line 1335
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1337
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	edx, DWORD PTR __Wherenode$[ebp]
	cmp	edx, DWORD PTR [eax]
	jne	SHORT $LN4@Rrotate
; Line 1338
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN3@Rrotate
$LN4@Rrotate:
; Line 1339
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN2@Rrotate
; Line 1340
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1341
	jmp	SHORT $LN3@Rrotate
$LN2@Rrotate:
; Line 1342
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@Rrotate:
; Line 1344
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1345
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1346
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
?_Rrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::deallocate
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBI_K@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node::_Node
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::allocate
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z$3 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z$0
__tryblocktable$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z DD 00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z$3
__unwindtable$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z$2
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z
_TEXT	SEGMENT
tv86 = -36						; size = 4
_this$ = -32						; size = 4
$T150144 = -28						; size = 4
$T150143 = -24						; size = 4
__Wherenode$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Buynode, COMDAT
; _this$ = ecx
; Line 1408
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1409
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::allocate
	mov	DWORD PTR __Wherenode$[ebp], eax
; Line 1410
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1411
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	push	40					; 00000028H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T150144[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	cmp	DWORD PTR $T150144[ebp], 0
	je	SHORT $LN4@Buynode@3
	movzx	ecx, BYTE PTR __Carg$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Rarg$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Larg$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T150144[ebp]
	call	??0_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBI_K@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node::_Node
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN5@Buynode@3
$LN4@Buynode@3:
	mov	DWORD PTR tv86[ebp], 0
$LN5@Buynode@3:
	mov	eax, DWORD PTR tv86[ebp]
	mov	DWORD PTR $T150143[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN6@Buynode@3
__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z$0:
; Line 1413
	push	1
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::deallocate
; Line 1414
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1415
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z$1
	ret	0
$LN6@Buynode@3:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z$1:
; Line 1416
	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN3@Buynode@3:
; Line 1417
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z$2:
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T150144[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBI_K@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Buynode
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\new
; Line 58
	push	ebp
	mov	ebp, esp
; Line 59
	mov	eax, DWORD PTR __Where$[ebp]
; Line 60
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
; Line 64
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::deallocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Fiterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 487
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 488
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator--
; Line 489
	mov	eax, DWORD PTR _this$[ebp]
; Line 490
	mov	esp, ebp
	pop	ebp
	ret	0
??Fiterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Max
; Function compile flags: /Odtp
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$147163 = -4					; size = 4
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 330
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Has_container@_Iterator_base_aux@std@@QBE_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@Dec
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN11@Dec:
	xor	ecx, ecx
	jne	SHORT $LN11@Dec
; Line 333
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN9@Dec
; Line 335
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], edx
; Line 336
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN8@Dec
; Line 344
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN8@Dec:
; Line 349
	jmp	$LN14@Dec
$LN9@Dec:
; Line 350
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN4@Dec
; Line 351
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Max@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Max
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 352
	jmp	SHORT $LN14@Dec
$LN4@Dec:
; Line 356
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$147163[ebp], ecx
	mov	edx, DWORD PTR __Pnode$147163[ebp]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN3@Dec
	mov	ecx, DWORD PTR __Pnode$147163[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN3@Dec
; Line 357
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$147163[ebp]
	mov	DWORD PTR [edx+4], eax
	jmp	SHORT $LN4@Dec
$LN3@Dec:
; Line 358
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN2@Dec
; Line 366
	call	DWORD PTR __imp___invalid_parameter_noinfo
; Line 371
	jmp	SHORT $LN14@Dec
$LN2@Dec:
; Line 372
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$147163[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN14@Dec:
; Line 374
	mov	esp, ebp
	pop	ebp
	ret	0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	??0?$_Bidit@UPLUGIN_HOOKINFO@@HPBU1@ABU1@@std@@QAE@XZ ; std::_Bidit<PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &>::_Bidit<PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Const_iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PBV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_Const_iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PBV12@@Z PROC ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Const_iterator<1>::_Const_iterator<1>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 176
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Bidit@UPLUGIN_HOOKINFO@@HPBU1@ABU1@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 177
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN5@Const_iter
	cmp	DWORD PTR __Plist$[ebp], 0
	jne	SHORT $LN2@Const_iter
	call	DWORD PTR __imp___invalid_parameter_noinfo
$LN2@Const_iter:
	xor	eax, eax
	jne	SHORT $LN2@Const_iter
$LN5@Const_iter:
; Line 178
	mov	ecx, DWORD PTR __Plist$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Set_container@_Iterator_base_aux@std@@QAEXQBV_Container_base_aux@2@@Z ; std::_Iterator_base_aux::_Set_container
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Const_iterator@$00@?$list@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@QAE@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@2@PBV12@@Z ENDP ; std::list<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Const_iterator<1>::_Const_iterator<1>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@1@AB_N@Z PROC ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
; Line 50
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Val2$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR [ecx+8], al
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UPLUGIN_HOOKINFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ ; std::_Iterator_with_base<std::bidirectional_iterator_tag,PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &,std::_Iterator_base_aux>
; Function compile flags: /Odtp
;	COMDAT ??0?$_Bidit@UPLUGIN_HOOKINFO@@HPBU1@ABU1@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Bidit@UPLUGIN_HOOKINFO@@HPBU1@ABU1@@std@@QAE@XZ PROC ; std::_Bidit<PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &>::_Bidit<PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UPLUGIN_HOOKINFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Bidit@UPLUGIN_HOOKINFO@@HPBU1@ABU1@@std@@QAE@XZ ENDP ; std::_Bidit<PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &>::_Bidit<PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UPLUGIN_HOOKINFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UPLUGIN_HOOKINFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ PROC ; std::_Iterator_with_base<std::bidirectional_iterator_tag,PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &,std::_Iterator_base_aux>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base_aux@std@@QAE@XZ	; std::_Iterator_base_aux::_Iterator_base_aux
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator_with_base@Ubidirectional_iterator_tag@std@@UPLUGIN_HOOKINFO@@HPBU3@ABU3@V_Iterator_base_aux@2@@std@@QAE@XZ ENDP ; std::_Iterator_with_base<std::bidirectional_iterator_tag,PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &,std::_Iterator_base_aux>::_Iterator_with_base<std::bidirectional_iterator_tag,PLUGIN_HOOKINFO,int,PLUGIN_HOOKINFO const *,PLUGIN_HOOKINFO const &,std::_Iterator_base_aux>
_TEXT	ENDS
PUBLIC	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
PUBLIC	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
PUBLIC	??$?0UPLUGIN_HOOKINFO@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><PLUGIN_HOOKINFO>
PUBLIC	??0_Container_base_aux@std@@QAE@XZ		; std::_Container_base_aux::_Container_base_aux
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z$1
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
_TEXT	SEGMENT
tv133 = -32						; size = 4
_this$ = -28						; size = 4
$T150183 = -24						; size = 4
$T150182 = -20						; size = 4
$T150181 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::_Container_base_aux
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0UPLUGIN_HOOKINFO@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><PLUGIN_HOOKINFO>
; Line 420
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
	mov	DWORD PTR $T150183[ebp], eax
	mov	ecx, DWORD PTR $T150183[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T150182[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T150182[ebp], 0
	je	SHORT $LN3@Container_
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T150182[ebp]
	call	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN4@Container_
$LN3@Container_:
	mov	DWORD PTR tv133[ebp], 0
$LN4@Container_:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T150181[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T150181[ebp]
	mov	DWORD PTR [ecx], edx
; Line 421
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z$1:
	mov	eax, DWORD PTR $T150183[ebp]
	push	eax
	mov	ecx, DWORD PTR $T150182[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@IAE@V?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >::_Container_base_aux_alloc_real<std::allocator<PLUGIN_HOOKINFO> >
; Function compile flags: /Odtp
;	COMDAT ??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pcont$ = 8						; size = 4
??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z PROC	; std::_Aux_cont::_Aux_cont, COMDAT
; _this$ = ecx
; Line 364
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pcont$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ENDP	; std::_Aux_cont::_Aux_cont
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0_Container_base_aux@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base_aux@std@@QAE@XZ PROC			; std::_Container_base_aux::_Container_base_aux, COMDAT
; _this$ = ecx
; Line 379
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 382
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base_aux@std@@QAE@XZ ENDP			; std::_Container_base_aux::_Container_base_aux
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@UPLUGIN_HOOKINFO@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@UPLUGIN_HOOKINFO@@@std@@QBEIXZ PROC ; std::allocator<PLUGIN_HOOKINFO>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 165
	mov	DWORD PTR __Count$[ebp], 357913941	; 15555555H
; Line 166
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size:
	mov	eax, DWORD PTR tv65[ebp]
; Line 167
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@UPLUGIN_HOOKINFO@@@std@@QBEIXZ ENDP ; std::allocator<PLUGIN_HOOKINFO>::max_size
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Max, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 1305
	push	ebp
	mov	ebp, esp
$LN2@Max:
; Line 1306
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN1@Max
; Line 1307
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
	jmp	SHORT $LN2@Max
$LN1@Max:
; Line 1308
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 1309
	pop	ebp
	ret	0
?_Max@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Max
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBI_K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -12						; size = 4
_this$ = -8						; size = 4
__Count$ = -4						; size = 4
?max_size@?$allocator@U?$pair@$$CBI_K@std@@@std@@QBEIXZ PROC ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 165
	mov	DWORD PTR __Count$[ebp], 268435455	; 0fffffffH
; Line 166
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@2
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
	mov	eax, DWORD PTR tv65[ebp]
; Line 167
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@U?$pair@$$CBI_K@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::max_size
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBI_K@2@D@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBI_K@2@D@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 38
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Larg$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Rarg$[ebp]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR __Carg$[ebp]
	mov	BYTE PTR [ecx+32], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+33], 0
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBI_K@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ; std::_Allocate<std::_Aux_cont>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z PROC ; std::allocator<std::_Aux_cont>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ; std::_Allocate<std::_Aux_cont>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ENDP ; std::allocator<std::_Aux_cont>::allocate
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0UPLUGIN_HOOKINFO@@@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UPLUGIN_HOOKINFO@@@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z PROC ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *><PLUGIN_HOOKINFO>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UPLUGIN_HOOKINFO@@@?$allocator@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ENDP ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *><PLUGIN_HOOKINFO>
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T150218 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 20					; 00000014H
	jae	SHORT $LN2@Allocate
; Line 40
	push	0
	lea	ecx, DWORD PTR $T150218[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T150218[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 20					; 00000014H
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??0exception@std@@QAE@ABQBD@Z:PROC
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0bad_alloc@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0bad_alloc@std@@QAE@PBD@Z$0
__ehfuncinfo$??0bad_alloc@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0bad_alloc@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; Line 371
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0bad_alloc@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABQBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
; Line 372
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0bad_alloc@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0bad_alloc@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0bad_alloc@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1bad_alloc@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1bad_alloc@std@@UAE@XZ$0
__ehfuncinfo$??1bad_alloc@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1bad_alloc@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
; Line 380
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1bad_alloc@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 381
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1exception@std@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1bad_alloc@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??1bad_alloc@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1bad_alloc@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T150241 = -8						; size = 4
__Vptr$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *,std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T150241[ebp], eax
	cmp	DWORD PTR $T150241[ebp], 0
	je	SHORT $LN3@Construct
	mov	edx, DWORD PTR $T150241[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T150241[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN1@Construct
$LN3@Construct:
	mov	DWORD PTR tv68[ebp], 0
$LN1@Construct:
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *,std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@PAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0UPLUGIN_HOOKINFO@@@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UPLUGIN_HOOKINFO@@@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z PROC ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node><PLUGIN_HOOKINFO>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UPLUGIN_HOOKINFO@@@?$allocator@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ENDP ; std::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>::allocator<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node><PLUGIN_HOOKINFO>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Construct@UPLUGIN_HOOKINFO@@U1@@std@@YAXPAUPLUGIN_HOOKINFO@@ABU1@@Z
_TEXT	SEGMENT
tv69 = -12						; size = 4
$T150250 = -8						; size = 4
__Vptr$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UPLUGIN_HOOKINFO@@U1@@std@@YAXPAUPLUGIN_HOOKINFO@@ABU1@@Z PROC ; std::_Construct<PLUGIN_HOOKINFO,PLUGIN_HOOKINFO>, COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	12					; 0000000cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T150250[ebp], eax
	cmp	DWORD PTR $T150250[ebp], 0
	je	SHORT $LN3@Construct@2
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR $T150250[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR $T150250[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN1@Construct@2
$LN3@Construct@2:
	mov	DWORD PTR tv69[ebp], 0
$LN1@Construct@2:
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct@UPLUGIN_HOOKINFO@@U1@@std@@YAXPAUPLUGIN_HOOKINFO@@ABU1@@Z ENDP ; std::_Construct<PLUGIN_HOOKINFO,PLUGIN_HOOKINFO>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@UPLUGIN_HOOKINFO@@V?$allocator@UPLUGIN_HOOKINFO@@@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<PLUGIN_HOOKINFO,std::allocator<PLUGIN_HOOKINFO> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0UPLUGIN_HOOKINFO@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0UPLUGIN_HOOKINFO@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><PLUGIN_HOOKINFO>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0UPLUGIN_HOOKINFO@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@UPLUGIN_HOOKINFO@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><PLUGIN_HOOKINFO>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T150259 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@2
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@2
$LN3@Allocate@2:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 40					; 00000028H
	jae	SHORT $LN2@Allocate@2
; Line 40
	push	0
	lea	ecx, DWORD PTR $T150259[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T150259[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate@2:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 40					; 00000028H
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@2:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z
_TEXT	SEGMENT
$T150262 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z PROC ; std::_Allocate<std::_Aux_cont>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@3
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@3
$LN3@Allocate@3:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 4
	jae	SHORT $LN2@Allocate@3
; Line 40
	push	0
	lea	ecx, DWORD PTR $T150262[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T150262[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate@3:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@3:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V_Aux_cont@std@@@std@@YAPAV_Aux_cont@0@IPAV10@@Z ENDP ; std::_Allocate<std::_Aux_cont>
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0bad_alloc@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0bad_alloc@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0bad_alloc@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0bad_alloc@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0bad_alloc@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0exception@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0bad_alloc@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1exception@std@@UAE@XZ
__ehhandler$??0bad_alloc@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0bad_alloc@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
PUBLIC	??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
EXTRN	_atexit:PROC
; Function compile flags: /Odtp
;	COMDAT ??__EmapSaveTimes@HkIServerImpl@@YAXXZ
text$yc	SEGMENT
??__EmapSaveTimes@HkIServerImpl@@YAXXZ PROC		; HkIServerImpl::`dynamic initializer for 'mapSaveTimes'', COMDAT
; File g:\max\bastelstube\github\fl-mod-flhook\plugins\playercntl_plugin\src\main.cpp
; Line 517
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?mapSaveTimes@HkIServerImpl@@3V?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@A ; HkIServerImpl::mapSaveTimes
	call	??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
	push	OFFSET ??__FmapSaveTimes@HkIServerImpl@@YAXXZ ; HkIServerImpl::`dynamic atexit destructor for 'mapSaveTimes''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__EmapSaveTimes@HkIServerImpl@@YAXXZ ENDP		; HkIServerImpl::`dynamic initializer for 'mapSaveTimes''
text$yc	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
PUBLIC	??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
PUBLIC	??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
xdata$x	SEGMENT
__unwindtable$??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150278 = -14						; size = 1
$T150277 = -13						; size = 1
__$EHRec$ = -12						; size = 12
??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >, COMDAT
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T150277[ebp]
	call	??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
	push	eax
	lea	eax, DWORD PTR $T150278[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 104
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
__ehhandler$??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
PUBLIC	??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
xdata$x	SEGMENT
__unwindtable$??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >, COMDAT
; _this$ = ecx
; Line 539
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 540
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tidy
; Line 541
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
PUBLIC	??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
PUBLIC	??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
PUBLIC	??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::~_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ
__ehhandler$??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ PROC ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::~_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
__ehhandler$??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ ENDP ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::~_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Init
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
PUBLIC	??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150333 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >, COMDAT
; _this$ = ecx
; Line 509
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150333[ebp], esp
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 510
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Init
; Line 511
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@ABU?$less@I@1@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::destroy
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::erase
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -44						; size = 4
$T150347 = -40						; size = 8
$T150346 = -32						; size = 8
$T150345 = -24						; size = 8
$T150344 = -16						; size = 8
$T150343 = -8						; size = 8
?_Tidy@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1420
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1421
	lea	eax, DWORD PTR $T150344[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T150343[ebp], ecx
	mov	DWORD PTR $T150343[ebp+4], edx
	lea	eax, DWORD PTR $T150346[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::begin
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR $T150345[ebp], ecx
	mov	DWORD PTR $T150345[ebp+4], edx
	mov	eax, DWORD PTR $T150343[ebp+4]
	push	eax
	mov	ecx, DWORD PTR $T150343[ebp]
	push	ecx
	mov	edx, DWORD PTR $T150345[ebp+4]
	push	edx
	mov	eax, DWORD PTR $T150345[ebp]
	push	eax
	lea	ecx, DWORD PTR $T150347[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::erase
; Line 1422
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::destroy
; Line 1423
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::destroy
; Line 1424
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::destroy
; Line 1425
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::deallocate
; Line 1426
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+28], 0
; Line 1427
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tidy
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ$0
__ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 439
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
; Line 440
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@XZ PROC	; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@XZ ENDP	; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
_TEXT	ENDS
PUBLIC	?_Make_iter@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Make_iter
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::erase
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::clear
; Function compile flags: /Odtp
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z
_TEXT	SEGMENT
_this$ = -36						; size = 4
$T150364 = -32						; size = 8
$T150363 = -24						; size = 8
$T150362 = -16						; size = 8
$T150361 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 8
__Last$ = 20						; size = 8
?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 934
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	DWORD PTR _this$[ebp], ecx
; Line 935
	lea	eax, DWORD PTR $T150361[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::begin
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@erase
	lea	edx, DWORD PTR $T150362[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::end
	push	eax
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@erase
; Line 937
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::clear
; Line 938
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::begin
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase
; Line 940
	jmp	SHORT $LN5@erase
$LN2@erase:
; Line 942
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@erase
; Line 943
	push	0
	lea	ecx, DWORD PTR $T150363[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T150364[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::erase
	jmp	SHORT $LN2@erase
$LN1@erase:
; Line 944
	mov	edx, DWORD PTR __First$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@erase:
; Line 946
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Buynode
; Function compile flags: /Odtp
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Init@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Init, COMDAT
; _this$ = ecx
; Line 1177
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1178
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Buynode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 1179
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1180
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax], edx
; Line 1181
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax], edx
; Line 1182
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 1183
	mov	esp, ebp
	pop	ebp
	ret	0
?_Init@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150369 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z PROC ; std::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >, COMDAT
; _this$ = ecx
; Line 97
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150369[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
; Line 98
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_val@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_val<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@ABV01@@Z PROC ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Make_iter@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
$T150383 = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?_Make_iter@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 575
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 576
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	lea	ecx, DWORD PTR $T150383[ebp]
	call	??0iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PBV12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::iterator::iterator
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 577
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Make_iter@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Make_iter
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::destroy
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0
__ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
_TEXT	SEGMENT
tv177 = -108						; size = 4
tv165 = -104						; size = 4
_this$ = -100						; size = 4
$T150387 = -96						; size = 28
$T150386 = -68						; size = 40
__Fixnodeparent$ = -28					; size = 4
__Pnode$ = -24						; size = 4
__Fixnode$ = -20					; size = 4
__Erasednode$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 8
?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::erase, COMDAT
; _this$ = ecx
; Line 764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 96					; 00000060H
	push	esi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 774
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN40@erase@2
; Line 775
	push	OFFSET ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
	lea	ecx, DWORD PTR $T150387[ebp]
	call	DWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T150387[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T150386[ebp]
	call	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
	push	OFFSET __TI3?AVout_of_range@std@@
	lea	edx, DWORD PTR $T150386[ebp]
	push	edx
	call	__CxxThrowException@8
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T150387[ebp]
	call	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
$LN40@erase@2:
; Line 776
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	mov	DWORD PTR __Erasednode$[ebp], eax
; Line 777
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++
; Line 782
	mov	eax, DWORD PTR __Erasednode$[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 784
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN39@erase@2
; Line 785
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], edx
	jmp	SHORT $LN38@erase@2
$LN39@erase@2:
; Line 786
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	je	SHORT $LN37@erase@2
; Line 787
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], ecx
; Line 788
	jmp	SHORT $LN38@erase@2
$LN37@erase@2:
; Line 790
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 791
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnode$[ebp], eax
$LN38@erase@2:
; Line 794
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	$LN35@erase@2
; Line 796
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], eax
; Line 797
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN34@erase@2
; Line 798
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], ecx
$LN34@erase@2:
; Line 800
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN33@erase@2
; Line 801
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN32@erase@2
$LN33@erase@2:
; Line 802
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	cmp	eax, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN31@erase@2
; Line 803
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], edx
; Line 804
	jmp	SHORT $LN32@erase@2
$LN31@erase@2:
; Line 805
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN32@erase@2:
; Line 807
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN29@erase@2
; Line 810
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN43@erase@2
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv165[ebp], edx
	jmp	SHORT $LN44@erase@2
$LN43@erase@2:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Min@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Min
	add	esp, 4
	mov	DWORD PTR tv165[ebp], eax
$LN44@erase@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost
	mov	ecx, DWORD PTR tv165[ebp]
	mov	DWORD PTR [eax], ecx
$LN29@erase@2:
; Line 812
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN28@erase@2
; Line 815
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN45@erase@2
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR tv177[ebp], edx
	jmp	SHORT $LN46@erase@2
$LN45@erase@2:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Max@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Max
	add	esp, 4
	mov	DWORD PTR tv177[ebp], eax
$LN46@erase@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	ecx, DWORD PTR tv177[ebp]
	mov	DWORD PTR [eax], ecx
$LN28@erase@2:
; Line 817
	jmp	$LN27@erase@2
$LN35@erase@2:
; Line 819
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 820
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 822
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN26@erase@2
; Line 823
	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR __Fixnodeparent$[ebp], edx
; Line 824
	jmp	$LN25@erase@2
$LN26@erase@2:
; Line 826
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
; Line 827
	mov	edx, DWORD PTR __Fixnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN24@erase@2
; Line 828
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR [eax], edx
$LN24@erase@2:
; Line 829
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 830
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 831
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN25@erase@2:
; Line 834
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN23@erase@2
; Line 835
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
	jmp	SHORT $LN22@erase@2
$LN23@erase@2:
; Line 836
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR __Erasednode$[ebp]
	jne	SHORT $LN21@erase@2
; Line 837
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 838
	jmp	SHORT $LN22@erase@2
$LN21@erase@2:
; Line 839
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
$LN22@erase@2:
; Line 841
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 842
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	push	eax
	call	??$swap@D@std@@YAXAAD0@Z		; std::swap<char>
	add	esp, 8
$LN27@erase@2:
; Line 845
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	$LN19@erase@2
; Line 848
	jmp	SHORT $LN18@erase@2
$LN17@erase@2:
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Fixnodeparent$[ebp], ecx
$LN18@erase@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	edx, DWORD PTR __Fixnode$[ebp]
	cmp	edx, DWORD PTR [eax]
	je	$LN16@erase@2
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN16@erase@2
; Line 849
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR __Fixnode$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jne	$LN15@erase@2
; Line 851
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 852
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	test	edx, edx
	jne	SHORT $LN14@erase@2
; Line 854
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 855
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 856
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lrotate
; Line 857
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN14@erase@2:
; Line 860
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	je	SHORT $LN13@erase@2
; Line 861
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx
; Line 862
	jmp	$LN12@erase@2
$LN13@erase@2:
; Line 863
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase@2
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN11@erase@2
; Line 865
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 866
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], eax
; Line 868
	jmp	$LN12@erase@2
$LN11@erase@2:
; Line 870
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	cmp	eax, 1
	jne	SHORT $LN9@erase@2
; Line 872
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 873
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 874
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rrotate
; Line 875
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN9@erase@2:
; Line 878
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl
; Line 879
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 880
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 881
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lrotate
; Line 882
	jmp	$LN16@erase@2
$LN12@erase@2:
; Line 885
	jmp	$LN8@erase@2
$LN15@erase@2:
; Line 887
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 888
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN7@erase@2
; Line 890
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 891
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 892
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rrotate
; Line 893
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
$LN7@erase@2:
; Line 895
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@erase@2
; Line 896
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], edx
; Line 897
	jmp	$LN8@erase@2
$LN6@erase@2:
; Line 898
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase@2
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	edx, BYTE PTR [eax]
	cmp	edx, 1
	jne	SHORT $LN4@erase@2
; Line 900
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 901
	mov	ecx, DWORD PTR __Fixnodeparent$[ebp]
	mov	DWORD PTR __Fixnode$[ebp], ecx
; Line 903
	jmp	$LN8@erase@2
$LN4@erase@2:
; Line 905
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN2@erase@2
; Line 907
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 908
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 909
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lrotate
; Line 910
	mov	eax, DWORD PTR __Fixnodeparent$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN2@erase@2:
; Line 913
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl
; Line 914
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 915
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 916
	mov	edx, DWORD PTR __Fixnodeparent$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rrotate@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rrotate
; Line 917
	jmp	SHORT $LN16@erase@2
$LN8@erase@2:
; Line 919
	jmp	$LN17@erase@2
$LN16@erase@2:
; Line 921
	mov	eax, DWORD PTR __Fixnode$[ebp]
	push	eax
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
$LN19@erase@2:
; Line 924
	mov	ecx, DWORD PTR __Erasednode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::destroy
; Line 925
	push	1
	mov	edx, DWORD PTR __Erasednode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::deallocate
; Line 927
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jbe	SHORT $LN1@erase@2
; Line 928
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], edx
$LN1@erase@2:
; Line 930
	mov	ecx, DWORD PTR __Where$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QBE?AViterator@12@Vconst_iterator@12@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Make_iter
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN42@erase@2:
; Line 931
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z$0:
	lea	ecx, DWORD PTR $T150387[ebp]
	jmp	DWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@Vconst_iterator@12@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::erase
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_R4out_of_range@std@@6B@			; std::out_of_range::`RTTI Complete Object Locator'
PUBLIC	??_R3out_of_range@std@@8			; std::out_of_range::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2out_of_range@std@@8			; std::out_of_range::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@out_of_range@std@@8		; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:PROC		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@out_of_range@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdexcept
rdata$r	SEGMENT
??_R1A@?0A@EA@out_of_range@std@@8 DD FLAT:??_R0?AVout_of_range@std@@@8 ; std::out_of_range::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R2out_of_range@std@@8
rdata$r	SEGMENT
??_R2out_of_range@std@@8 DD FLAT:??_R1A@?0A@EA@out_of_range@std@@8 ; std::out_of_range::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@logic_error@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3out_of_range@std@@8
rdata$r	SEGMENT
??_R3out_of_range@std@@8 DD 00H				; std::out_of_range::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_R4out_of_range@std@@6B@
rdata$r	SEGMENT
??_R4out_of_range@std@@6B@ DD 00H			; std::out_of_range::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	FLAT:??_R3out_of_range@std@@8
rdata$r	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_R4out_of_range@std@@6B@ ; std::out_of_range::`vftable'
	DD	FLAT:??_Eout_of_range@std@@UAEPAXI@Z
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0
__ehfuncinfo$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
; Line 129
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@
; Line 130
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1out_of_range@std@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1out_of_range@std@@UAE@XZ$0
__ehfuncinfo$??1out_of_range@std@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1out_of_range@std@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1out_of_range@std@@UAE@XZ PROC			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx
; Line 133
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1out_of_range@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7out_of_range@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 134
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1out_of_range@std@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??1out_of_range@std@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1out_of_range@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
; Function compile flags: /Odtp
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC			; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1out_of_range@std@@UAE@XZ		; std::out_of_range::~out_of_range
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0out_of_range@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0out_of_range@std@@QAE@ABV01@@Z$0
__ehfuncinfo$??0out_of_range@std@@QAE@ABV01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0out_of_range@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC			; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0out_of_range@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0logic_error@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7out_of_range@std@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0out_of_range@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1logic_error@std@@UAE@XZ		; std::logic_error::~logic_error
__ehhandler$??0out_of_range@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0out_of_range@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Erase
; Function compile flags: /Odtp
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xtree
; Line 965
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 971
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Erase
; Line 972
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Root@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Root
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 973
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Lmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Lmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Rmost@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Rmost
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax], edx
; Line 974
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::clear
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::construct
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ$0
__unwindtable$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ$2
__ehfuncinfo$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -40						; size = 4
$T150434 = -36						; size = 4
$T150433 = -32						; size = 4
$T150432 = -28						; size = 4
__Wherenode$ = -24					; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Buynode, COMDAT
; _this$ = ecx
; Line 1383
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 24					; 00000018H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1384
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::allocate
	mov	DWORD PTR __Wherenode$[ebp], eax
; Line 1385
	mov	DWORD PTR __Linkcnt$[ebp], 0
; Line 1387
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1388
	mov	DWORD PTR $T150432[ebp], 0
	lea	eax, DWORD PTR $T150432[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::construct
; Line 1389
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1390
	mov	DWORD PTR $T150433[ebp], 0
	lea	eax, DWORD PTR $T150433[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::construct
; Line 1391
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1392
	mov	DWORD PTR $T150434[ebp], 0
	lea	eax, DWORD PTR $T150434[ebp]
	push	eax
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::construct
	jmp	SHORT $LN6@Buynode@4
__catch$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ$0:
; Line 1394
	cmp	DWORD PTR __Linkcnt$[ebp], 1
	jle	SHORT $LN2@Buynode@4
; Line 1395
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Parent@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Parent
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::destroy
$LN2@Buynode@4:
; Line 1396
	cmp	DWORD PTR __Linkcnt$[ebp], 0
	jle	SHORT $LN1@Buynode@4
; Line 1397
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::destroy
$LN1@Buynode@4:
; Line 1398
	push	1
	mov	ecx, DWORD PTR __Wherenode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::deallocate
; Line 1399
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1400
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ$1
	ret	0
$LN6@Buynode@4:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ$1:
; Line 1401
	mov	edx, DWORD PTR __Wherenode$[ebp]
	push	edx
	call	?_Color@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Color
	add	esp, 4
	mov	BYTE PTR [eax], 1
; Line 1402
	mov	eax, DWORD PTR __Wherenode$[ebp]
	push	eax
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	mov	BYTE PTR [eax], 0
; Line 1403
	mov	eax, DWORD PTR __Wherenode$[ebp]
$LN5@Buynode@4:
; Line 1404
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-44]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Buynode
PUBLIC	??$?0U?$pair@$$CBI_K@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *><std::pair<unsigned int const ,unsigned __int64> >
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150450 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z PROC ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >, COMDAT
; _this$ = ecx
; Line 78
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150450[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR __Al$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??$?0U?$pair@$$CBI_K@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *><std::pair<unsigned int const ,unsigned __int64> >
; Line 79
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_ptr@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
; Function compile flags: /Odtp
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Tmp$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 280
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Tmp$[ebp], ecx
	mov	DWORD PTR __Tmp$[ebp+4], edx
; Line 281
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++
; Line 282
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR __Tmp$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Tmp$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 283
	mov	esp, ebp
	pop	ebp
	ret	8
??Econst_iterator@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::const_iterator::operator++
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Pnode$147271 = -4					; size = 4
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Erase, COMDAT
; _this$ = ecx
; Line 1166
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1167
	mov	eax, DWORD PTR __Rootnode$[ebp]
	mov	DWORD PTR __Pnode$147271[ebp], eax
	jmp	SHORT $LN3@Erase
$LN2@Erase:
	mov	ecx, DWORD PTR __Pnode$147271[ebp]
	mov	DWORD PTR __Rootnode$[ebp], ecx
$LN3@Erase:
	mov	edx, DWORD PTR __Pnode$147271[ebp]
	push	edx
	call	?_Isnil@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Isnil
	add	esp, 4
	movsx	eax, BYTE PTR [eax]
	test	eax, eax
	jne	SHORT $LN4@Erase
; Line 1169
	mov	ecx, DWORD PTR __Pnode$147271[ebp]
	push	ecx
	call	?_Right@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Right
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Erase
; Line 1170
	mov	eax, DWORD PTR __Pnode$147271[ebp]
	push	eax
	call	?_Left@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Left
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$147271[ebp], ecx
; Line 1171
	mov	edx, DWORD PTR __Rootnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::destroy
; Line 1172
	push	1
	mov	eax, DWORD PTR __Rootnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::deallocate
; Line 1173
	jmp	SHORT $LN2@Erase
$LN4@Erase:
; Line 1174
	mov	esp, ebp
	pop	ebp
	ret	4
?_Erase@?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBI_K@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node><std::pair<unsigned int const ,unsigned __int64> >
PUBLIC	??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150464 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z PROC ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150464[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
	mov	ecx, DWORD PTR __Parg$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0U?$pair@$$CBI_K@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node><std::pair<unsigned int const ,unsigned __int64> >
; Line 53
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@XZ
__ehhandler$??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@IAE@ABU?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\map
xdata$x	SEGMENT
__unwindtable$??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0
__ehfuncinfo$??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150478 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 1
__Al$ = 12						; size = 1
??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z PROC ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>, COMDAT
; _this$ = ecx
; Line 39
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150478[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@U?$pair@$$CBI_K@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned int const ,unsigned __int64> >::allocator<std::pair<unsigned int const ,unsigned __int64> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 40
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::~_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
__ehhandler$??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@QAE@U?$less@I@1@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ENDP ; std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0>
PUBLIC	??$?0U?$pair@$$CBI_K@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,unsigned __int64> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$1
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
_TEXT	SEGMENT
tv133 = -32						; size = 4
_this$ = -28						; size = 4
$T150490 = -24						; size = 4
$T150489 = -20						; size = 4
$T150488 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::_Container_base_aux
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0U?$pair@$$CBI_K@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,unsigned __int64> >
; Line 420
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
	mov	DWORD PTR $T150490[ebp], eax
	mov	ecx, DWORD PTR $T150490[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T150489[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T150489[ebp], 0
	je	SHORT $LN3@Container_@2
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T150489[ebp]
	call	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN4@Container_@2
$LN3@Container_@2:
	mov	DWORD PTR tv133[ebp], 0
$LN4@Container_@2:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T150488[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T150488[ebp]
	mov	DWORD PTR [ecx], edx
; Line 421
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z$1:
	mov	eax, DWORD PTR $T150490[ebp]
	push	eax
	mov	ecx, DWORD PTR $T150489[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@U?$pair@$$CBI_K@std@@@std@@@std@@IAE@V?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::_Container_base_aux_alloc_real<std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
; Function compile flags: /Odtp
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Tmp$147824 = -1					; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC				; std::swap<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\utility
; Line 17
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 18
	mov	eax, DWORD PTR __Left$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	SHORT $LN2@swap
; Line 20
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR __Tmp$147824[ebp], dl
; Line 22
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 23
	mov	eax, DWORD PTR __Right$[ebp]
	mov	cl, BYTE PTR __Tmp$147824[ebp]
	mov	BYTE PTR [eax], cl
$LN2@swap:
; Line 25
	mov	esp, ebp
	pop	ebp
	ret	0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBI_K@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBI_K@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *><std::pair<unsigned int const ,unsigned __int64> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBI_K@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *><std::pair<unsigned int const ,unsigned __int64> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBI_K@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBI_K@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z PROC ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node><std::pair<unsigned int const ,unsigned __int64> >, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBI_K@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node><std::pair<unsigned int const ,unsigned __int64> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@@Z PROC ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T150513 = -8						; size = 4
__Vptr$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>, COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T150513[ebp], eax
	cmp	DWORD PTR $T150513[ebp], 0
	je	SHORT $LN3@Construct@3
	mov	edx, DWORD PTR $T150513[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T150513[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN1@Construct@3
$LN3@Construct@3:
	mov	DWORD PTR tv68[ebp], 0
$LN1@Construct@3:
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBI_K@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBI_K@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,unsigned __int64> >, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$pair@$$CBI_K@std@@@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBI_K@std@@@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><std::pair<unsigned int const ,unsigned __int64> >
_TEXT	ENDS
PUBLIC	??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ	; std::list<unsigned int,std::allocator<unsigned int> >::list<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Odtp
;	COMDAT ??__Enpcs@@YAXXZ
text$yc	SEGMENT
??__Enpcs@@YAXXZ PROC					; `dynamic initializer for 'npcs'', COMDAT
; File g:\max\bastelstube\github\fl-mod-flhook\plugins\playercntl_plugin\src\main.cpp
; Line 820
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?npcs@@3V?$list@IV?$allocator@I@std@@@std@@A ; npcs
	call	??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ ; std::list<unsigned int,std::allocator<unsigned int> >::list<unsigned int,std::allocator<unsigned int> >
	push	OFFSET ??__Fnpcs@@YAXXZ			; `dynamic atexit destructor for 'npcs''
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
??__Enpcs@@YAXXZ ENDP					; `dynamic initializer for 'npcs''
text$yc	ENDS
PUBLIC	??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ ; std::_List_val<unsigned int,std::allocator<unsigned int> >::~_List_val<unsigned int,std::allocator<unsigned int> >
PUBLIC	?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ ; std::list<unsigned int,std::allocator<unsigned int> >::_Buynode
PUBLIC	??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z ; std::_List_val<unsigned int,std::allocator<unsigned int> >::_List_val<unsigned int,std::allocator<unsigned int> >
PUBLIC	??0?$allocator@I@std@@QAE@XZ			; std::allocator<unsigned int>::allocator<unsigned int>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150522 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ PROC	; std::list<unsigned int,std::allocator<unsigned int> >::list<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150522[ebp], esp
	call	??0?$allocator@I@std@@QAE@XZ		; std::allocator<unsigned int>::allocator<unsigned int>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z ; std::_List_val<unsigned int,std::allocator<unsigned int> >::_List_val<unsigned int,std::allocator<unsigned int> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ ; std::list<unsigned int,std::allocator<unsigned int> >::_Buynode
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 437
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ
__ehhandler$??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$list@IV?$allocator@I@std@@@std@@QAE@XZ ENDP	; std::list<unsigned int,std::allocator<unsigned int> >::list<unsigned int,std::allocator<unsigned int> >
PUBLIC	??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ ; std::_List_ptr<unsigned int,std::allocator<unsigned int> >::~_List_ptr<unsigned int,std::allocator<unsigned int> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ PROC	; std::_List_val<unsigned int,std::allocator<unsigned int> >::~_List_val<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ ENDP	; std::_List_val<unsigned int,std::allocator<unsigned int> >::~_List_val<unsigned int,std::allocator<unsigned int> >
PUBLIC	??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ ; std::_List_nod<unsigned int,std::allocator<unsigned int> >::~_List_nod<unsigned int,std::allocator<unsigned int> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ PROC	; std::_List_ptr<unsigned int,std::allocator<unsigned int> >::~_List_ptr<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ
__ehhandler$??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ ENDP	; std::_List_ptr<unsigned int,std::allocator<unsigned int> >::~_List_ptr<unsigned int,std::allocator<unsigned int> >
PUBLIC	??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<unsigned int> >::~_Container_base_aux_alloc_real<std::allocator<unsigned int> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ PROC	; std::_List_nod<unsigned int,std::allocator<unsigned int> >::~_List_nod<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<unsigned int> >::~_Container_base_aux_alloc_real<std::allocator<unsigned int> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<unsigned int> >::~_Container_base_aux_alloc_real<std::allocator<unsigned int> >
__ehhandler$??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ ENDP	; std::_List_nod<unsigned int,std::allocator<unsigned int> >::~_List_nod<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@I@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@I@std@@QAE@XZ PROC			; std::allocator<unsigned int>::allocator<unsigned int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@I@std@@QAE@XZ ENDP			; std::allocator<unsigned int>::allocator<unsigned int>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::deallocate
PUBLIC	?destroy@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::destroy
PUBLIC	?_Prevnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Prevnode
PUBLIC	?construct@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::construct
PUBLIC	?_Nextnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Nextnode
PUBLIC	?allocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::allocate
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__catchsym$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ$0
__unwindtable$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ$2
__ehfuncinfo$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -28						; size = 4
__Pnode$ = -24						; size = 4
__Linkcnt$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ PROC ; std::list<unsigned int,std::allocator<unsigned int> >::_Buynode, COMDAT
; _this$ = ecx
; Line 1171
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1172
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?allocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::allocate
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1173
	mov	DWORD PTR __Linkcnt$[ebp], 0
; Line 1175
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1176
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::construct
; Line 1177
	mov	edx, DWORD PTR __Linkcnt$[ebp]
	add	edx, 1
	mov	DWORD PTR __Linkcnt$[ebp], edx
; Line 1178
	lea	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Prevnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?construct@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@ABQAU342@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::construct
	jmp	SHORT $LN5@Buynode@5
__catch$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ$0:
; Line 1180
	cmp	DWORD PTR __Linkcnt$[ebp], 0
	jle	SHORT $LN1@Buynode@5
; Line 1181
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Nextnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::destroy
$LN1@Buynode@5:
; Line 1182
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::deallocate
; Line 1183
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1184
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, __tryend$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ$1
	ret	0
$LN5@Buynode@5:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ$1:
; Line 1185
	mov	eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode@5:
; Line 1186
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Buynode@?$list@IV?$allocator@I@std@@@std@@IAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@XZ ENDP ; std::list<unsigned int,std::allocator<unsigned int> >::_Buynode
PUBLIC	??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ; std::_List_ptr<unsigned int,std::allocator<unsigned int> >::_List_ptr<unsigned int,std::allocator<unsigned int> >
PUBLIC	??0?$allocator@I@std@@QAE@ABV01@@Z		; std::allocator<unsigned int>::allocator<unsigned int>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z$0
__ehfuncinfo$??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150576 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z PROC ; std::_List_val<unsigned int,std::allocator<unsigned int> >::_List_val<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
; Line 85
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150576[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@I@std@@QAE@ABV01@@Z	; std::allocator<unsigned int>::allocator<unsigned int>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ; std::_List_ptr<unsigned int,std::allocator<unsigned int> >::_List_ptr<unsigned int,std::allocator<unsigned int> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$allocator@I@std@@QAE@ABV01@@Z	; std::allocator<unsigned int>::allocator<unsigned int>
; Line 86
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_ptr@IV?$allocator@I@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_val@IV?$allocator@I@std@@@std@@QAE@V?$allocator@I@1@@Z ENDP ; std::_List_val<unsigned int,std::allocator<unsigned int> >::_List_val<unsigned int,std::allocator<unsigned int> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ$0
__ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ PROC ; std::_Container_base_aux_alloc_real<std::allocator<unsigned int> >::~_Container_base_aux_alloc_real<std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
; Line 436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 439
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@V_Aux_cont@std@@@std@@QAEXPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::deallocate
; Line 440
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__ehhandler$??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ ENDP ; std::_Container_base_aux_alloc_real<std::allocator<unsigned int> >::~_Container_base_aux_alloc_real<std::allocator<unsigned int> >
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@I@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@I@std@@QAE@ABV01@@Z PROC			; std::allocator<unsigned int>::allocator<unsigned int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 123
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@I@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned int>::allocator<unsigned int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Nextnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z PROC ; std::list<unsigned int,std::allocator<unsigned int> >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
; Line 114
	push	ebp
	mov	ebp, esp
; Line 115
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 116
	pop	ebp
	ret	0
?_Nextnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ENDP ; std::list<unsigned int,std::allocator<unsigned int> >::_Nextnode
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?_Prevnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z PROC ; std::list<unsigned int,std::allocator<unsigned int> >::_Prevnode, COMDAT
; Line 119
	push	ebp
	mov	ebp, esp
; Line 120
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 121
	pop	ebp
	ret	0
?_Prevnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ENDP ; std::list<unsigned int,std::allocator<unsigned int> >::_Prevnode
_TEXT	ENDS
PUBLIC	??$?0I@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *><unsigned int>
PUBLIC	??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ; std::_List_nod<unsigned int,std::allocator<unsigned int> >::_List_nod<unsigned int,std::allocator<unsigned int> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z$0
__ehfuncinfo$??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150601 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z PROC ; std::_List_ptr<unsigned int,std::allocator<unsigned int> >::_List_ptr<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
; Line 67
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150601[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@I@std@@QAE@ABV01@@Z	; std::allocator<unsigned int>::allocator<unsigned int>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ; std::_List_nod<unsigned int,std::allocator<unsigned int> >::_List_nod<unsigned int,std::allocator<unsigned int> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??$?0I@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *><unsigned int>
; Line 68
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_nod@IV?$allocator@I@std@@@std@@QAE@XZ
__ehhandler$??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_ptr@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ENDP ; std::_List_ptr<unsigned int,std::allocator<unsigned int> >::_List_ptr<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 139
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z PROC ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::allocate, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 145
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@IPAU120@@Z ; std::_Allocate<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>
	add	esp, 8
; Line 146
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z ENDP ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *,std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?construct@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@ABQAU342@@Z PROC ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::construct, COMDAT
; _this$ = ecx
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 155
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Construct@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@ABQAU120@@Z ; std::_Construct<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *,std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>
	add	esp, 8
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@@Z ; std::_Destroy<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z PROC ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::destroy, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@@Z ; std::_Destroy<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	??$?0I@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node><unsigned int>
PUBLIC	??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<unsigned int> >::_Container_base_aux_alloc_real<std::allocator<unsigned int> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z$0
__ehfuncinfo$??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T150619 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z PROC ; std::_List_nod<unsigned int,std::allocator<unsigned int> >::_List_nod<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T150619[ebp], esp
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??0?$allocator@I@std@@QAE@ABV01@@Z	; std::allocator<unsigned int>::allocator<unsigned int>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ; std::_Container_base_aux_alloc_real<std::allocator<unsigned int> >::_Container_base_aux_alloc_real<std::allocator<unsigned int> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??$?0I@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node><unsigned int>
; Line 48
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@XZ ; std::_Container_base_aux_alloc_real<std::allocator<unsigned int> >::~_Container_base_aux_alloc_real<std::allocator<unsigned int> >
__ehhandler$??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_nod@IV?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ENDP ; std::_List_nod<unsigned int,std::allocator<unsigned int> >::_List_nod<unsigned int,std::allocator<unsigned int> >
PUBLIC	??$?0I@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@I@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><unsigned int>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
xdata$x	SEGMENT
__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z$1
__ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
_TEXT	SEGMENT
tv133 = -32						; size = 4
_this$ = -28						; size = 4
$T150631 = -24						; size = 4
$T150630 = -20						; size = 4
$T150629 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 1
??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z PROC ; std::_Container_base_aux_alloc_real<std::allocator<unsigned int> >::_Container_base_aux_alloc_real<std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
; Line 419
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::_Container_base_aux
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??$?0I@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@I@1@@Z ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><unsigned int>
; Line 420
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@V_Aux_cont@std@@@std@@QAEPAV_Aux_cont@2@I@Z ; std::allocator<std::_Aux_cont>::allocate
	mov	DWORD PTR $T150631[ebp], eax
	mov	ecx, DWORD PTR $T150631[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T150630[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T150630[ebp], 0
	je	SHORT $LN3@Container_@3
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T150630[ebp]
	call	??0_Aux_cont@std@@QAE@QBV_Container_base_aux@1@@Z ; std::_Aux_cont::_Aux_cont
	mov	DWORD PTR tv133[ebp], eax
	jmp	SHORT $LN4@Container_@3
$LN3@Container_@3:
	mov	DWORD PTR tv133[ebp], 0
$LN4@Container_@3:
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR $T150629[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T150629[ebp]
	mov	DWORD PTR [ecx], edx
; Line 421
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Container_base_aux@std@@QAE@XZ	; std::_Container_base_aux::~_Container_base_aux
__unwindfunclet$??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z$1:
	mov	eax, DWORD PTR $T150631[ebp]
	push	eax
	mov	ecx, DWORD PTR $T150630[ebp]
	push	ecx
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Container_base_aux_alloc_real@V?$allocator@I@std@@@std@@IAE@V?$allocator@I@1@@Z ENDP ; std::_Container_base_aux_alloc_real<std::allocator<unsigned int> >::_Container_base_aux_alloc_real<std::allocator<unsigned int> >
; Function compile flags: /Odtp
;	COMDAT ??$?0I@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0I@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z PROC ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *><unsigned int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0I@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z ENDP ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *><unsigned int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
$T150646 = -12						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@IPAU120@@Z PROC ; std::_Allocate<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>, COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 37
	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate@4
; Line 38
	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate@4
$LN3@Allocate@4:
; Line 39
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 12					; 0000000cH
	jae	SHORT $LN2@Allocate@4
; Line 40
	push	0
	lea	ecx, DWORD PTR $T150646[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T150646[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate@4:
; Line 43
	mov	ecx, DWORD PTR __Count$[ebp]
	imul	ecx, 12					; 0000000cH
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate@4:
; Line 44
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T150649 = -8						; size = 4
__Vptr$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@ABQAU120@@Z PROC ; std::_Construct<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *,std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>, COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 51
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR __Vptr$[ebp], eax
; Line 52
	mov	ecx, DWORD PTR __Vptr$[ebp]
	push	ecx
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T150649[ebp], eax
	cmp	DWORD PTR $T150649[ebp], 0
	je	SHORT $LN3@Construct@4
	mov	edx, DWORD PTR $T150649[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR $T150649[ebp]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN1@Construct@4
$LN3@Construct@4:
	mov	DWORD PTR tv68[ebp], 0
$LN1@Construct@4:
; Line 53
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *,std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0I@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0I@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z PROC ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node><unsigned int>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0I@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAE@ABV?$allocator@I@1@@Z ENDP ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node><unsigned int>
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$?0I@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0I@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@I@1@@Z PROC ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><unsigned int>, COMDAT
; _this$ = ecx
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0I@?$allocator@V_Aux_cont@std@@@std@@QAE@ABV?$allocator@I@1@@Z ENDP ; std::allocator<std::_Aux_cont>::allocator<std::_Aux_cont><unsigned int>
_TEXT	ENDS
PUBLIC	??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::~map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
; Function compile flags: /Odtp
;	COMDAT ??__FmapSaveTimes@HkIServerImpl@@YAXXZ
text$yd	SEGMENT
??__FmapSaveTimes@HkIServerImpl@@YAXXZ PROC		; HkIServerImpl::`dynamic atexit destructor for 'mapSaveTimes'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?mapSaveTimes@HkIServerImpl@@3V?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@A ; HkIServerImpl::mapSaveTimes
	call	??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ
	pop	ebp
	ret	0
??__FmapSaveTimes@HkIServerImpl@@YAXXZ ENDP		; HkIServerImpl::`dynamic atexit destructor for 'mapSaveTimes''
text$yd	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ PROC ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::~map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Tree@V?$_Tmap_traits@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >::~_Tree<std::_Tmap_traits<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> >,0> >
__ehhandler$??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@QAE@XZ ENDP ; std::map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >::~map<unsigned int,unsigned __int64,std::less<unsigned int>,std::allocator<std::pair<unsigned int const ,unsigned __int64> > >
PUBLIC	??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ	; std::list<unsigned int,std::allocator<unsigned int> >::~list<unsigned int,std::allocator<unsigned int> >
; Function compile flags: /Odtp
;	COMDAT ??__Fnpcs@@YAXXZ
text$yd	SEGMENT
??__Fnpcs@@YAXXZ PROC					; `dynamic atexit destructor for 'npcs'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?npcs@@3V?$list@IV?$allocator@I@std@@@std@@A ; npcs
	call	??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ ; std::list<unsigned int,std::allocator<unsigned int> >::~list<unsigned int,std::allocator<unsigned int> >
	pop	ebp
	ret	0
??__Fnpcs@@YAXXZ ENDP					; `dynamic atexit destructor for 'npcs''
text$yd	ENDS
PUBLIC	?_Tidy@?$list@IV?$allocator@I@std@@@std@@IAEXXZ	; std::list<unsigned int,std::allocator<unsigned int> >::_Tidy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\list
xdata$x	SEGMENT
__unwindtable$??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ$0
__ehfuncinfo$??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata$x	ENDS
;	COMDAT ??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ PROC	; std::list<unsigned int,std::allocator<unsigned int> >::~list<unsigned int,std::allocator<unsigned int> >, COMDAT
; _this$ = ecx
; Line 520
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 521
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@IV?$allocator@I@std@@@std@@IAEXXZ ; std::list<unsigned int,std::allocator<unsigned int> >::_Tidy
; Line 522
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_val@IV?$allocator@I@std@@@std@@QAE@XZ
__ehhandler$??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$list@IV?$allocator@I@std@@@std@@QAE@XZ ENDP	; std::list<unsigned int,std::allocator<unsigned int> >::~list<unsigned int,std::allocator<unsigned int> >
PUBLIC	?clear@?$list@IV?$allocator@I@std@@@std@@QAEXXZ	; std::list<unsigned int,std::allocator<unsigned int> >::clear
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@IV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@IV?$allocator@I@std@@@std@@IAEXXZ PROC	; std::list<unsigned int,std::allocator<unsigned int> >::_Tidy, COMDAT
; _this$ = ecx
; Line 1212
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1213
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@IV?$allocator@I@std@@@std@@QAEXXZ ; std::list<unsigned int,std::allocator<unsigned int> >::clear
; Line 1214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Nextnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::destroy
; Line 1215
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Prevnode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?destroy@?$allocator@PAU_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node *>::destroy
; Line 1216
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::deallocate
; Line 1217
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 1218
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@IV?$allocator@I@std@@@std@@IAEXXZ ENDP	; std::list<unsigned int,std::allocator<unsigned int> >::_Tidy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::destroy
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@IV?$allocator@I@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Pnext$ = -8						; size = 4
__Pnode$ = -4						; size = 4
?clear@?$list@IV?$allocator@I@std@@@std@@QAEXXZ PROC	; std::list<unsigned int,std::allocator<unsigned int> >::clear, COMDAT
; _this$ = ecx
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 832
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], edx
; Line 833
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	?_Nextnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax], ecx
; Line 834
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	?_Prevnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Prevnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax], edx
; Line 835
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 837
	jmp	SHORT $LN3@clear@2
$LN2@clear@2:
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN3@clear@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	cmp	eax, DWORD PTR [edx+20]
	je	SHORT $LN4@clear@2
; Line 839
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$list@IV?$allocator@I@std@@@std@@KAAAPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@PAU342@@Z ; std::list<unsigned int,std::allocator<unsigned int> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$[ebp], edx
; Line 840
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?destroy@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::destroy
; Line 841
	push	1
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	?deallocate@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@I@Z ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::deallocate
; Line 842
	jmp	SHORT $LN2@clear@2
$LN4@clear@2:
; Line 843
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@IV?$allocator@I@std@@@std@@QAEXXZ ENDP	; std::list<unsigned int,std::allocator<unsigned int> >::clear
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@@Z ; std::_Destroy<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>
; Function compile flags: /Odtp
;	COMDAT ?destroy@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z PROC ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@@Z ; std::_Destroy<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>
	add	esp, 4
; Line 161
	mov	esp, ebp
	pop	ebp
	ret	4
?destroy@?$allocator@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@QAEXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@2@@Z ENDP ; std::allocator<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>::destroy
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@@Z PROC ; std::_Destroy<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>, COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
; Line 60
	pop	ebp
	ret	0
??$_Destroy@U_Node@?$_List_nod@IV?$allocator@I@std@@@std@@@std@@YAXPAU_Node@?$_List_nod@IV?$allocator@I@std@@@0@@Z ENDP ; std::_Destroy<std::_List_nod<unsigned int,std::allocator<unsigned int> >::_Node>
_TEXT	ENDS
PUBLIC	?npcs@@3V?$list@IV?$allocator@I@std@@@std@@A	; npcs
PUBLIC	?mapSaveTimes@HkIServerImpl@@3V?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@A ; HkIServerImpl::mapSaveTimes
_BSS	SEGMENT
	ALIGN	4

?npcs@@3V?$list@IV?$allocator@I@std@@@std@@A DB 01cH DUP (?) ; npcs
?mapSaveTimes@HkIServerImpl@@3V?$map@I_KU?$less@I@std@@V?$allocator@U?$pair@$$CBI_K@std@@@2@@std@@A DB 020H DUP (?) ; HkIServerImpl::mapSaveTimes
_BSS	ENDS
CRT$XCU	SEGMENT
_mapSaveTimes$initializer$ DD FLAT:??__EmapSaveTimes@HkIServerImpl@@YAXXZ
_npcs$initializer$ DD FLAT:??__Enpcs@@YAXXZ
CRT$XCU	ENDS
END
